{"version":3,"sources":["util/task.ts","constants.ts","emitters/types.ts","clients/viteMock.ts","emitters/globalEmitter.ts","util/ensure.ts","util/fileUtil.ts","hooks/web3Manager.tsx","services/bank.ts","services/bankMock.ts","stores/network.ts","providers/serviceProvider.ts","hooks/connectedWeb3.tsx","components/MainLoading.tsx","hooks/useAccountQuota.tsx","hooks/web3.tsx","components/common/AddressSummaryTable.tsx","hooks/useAccountBalance.tsx","components/common/ClickOnceButton.tsx","components/common/ConfirmTransactionDialog.tsx","components/quota_request_list/dialogs/types.ts","components/common/layout/Footer.tsx","components/account/AccountList.tsx","components/account/LoginModal.tsx","components/account/QrCode.tsx","components/network/NetworkCard.tsx","components/account/QuotaCard.tsx","hooks/useBlockHeight.tsx","components/network/NetworkList.tsx","components/common/layout/Header.tsx","components/common/layout/Logo.tsx","components/common/layout/MainScroll.tsx","components/common/layout/MainWrapper.tsx","components/common/TruncateTooltip.tsx","components/quota_request/AccountQuotaRequestTable.tsx","components/quota_request/CreateQuotaRequest.tsx","components/quota_request/QuotaRequestDueDate.tsx","components/quota_request_list/dialogs/BankDeleteDialog.tsx","components/quota_request_list/dialogs/BankStakeDialog.tsx","components/quota_request_list/dialogs/BankWithdrawDialog.tsx","components/quota_request_list/BankQuotaRequest.tsx","components/quota_request_list/BankQuotaRequestTable.tsx","hooks/useQuotaRequests.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","common/theme.ts","index.tsx","util/momentUtil.ts","type-extensions.ts","types.ts","util/commonUtil.ts","util/formatUtil.ts","util/bigNumber.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts","clients/vite.ts"],"names":["Task","task","interval","_taskTimer","_taskInterval","_task","_callback","this","setTimeout","a","_onStop","_run","callback","window","clearTimeout","undefined","AppConstants","QuotaPerUT","DefaultDecimals","DefaultZeroString","InitialNetworkBlockHeight","ViteTokenId","QuotaContractAddress","BankContractAddress","NetworkStorageSpace","WebWalletStorageSpace","SessionWalletStorageSpace","DefaultMnemonic","GlobalEvent","ViteMockClient","ViteClient","GlobalEmitter","height","emit","NetworkBlockHeight","update","QuotaRequestUpdated","address","QuotaRequestDeleted","open","ConfirmTransactionDialog","EventEmitter","Ensure","property","propertyName","Error","trim","fileUtil","_fileUtil","browserFileUtil","path","readFileAsync","instance","ActionType","fetch","response","text","BankService","vite","emitter","networkStore","walletManager","_vite","_emitter","_networkStore","_walletManager","_contract","_offchainMethods","Map","_listener","handleResponseAsync","Promise","resolve","reject","waitForAccountBlockAsync","then","result","status","statusTxt","objectFromEntries","entries","Object","fromEntries","map","entry","name","value","account","getActiveAccount","removeListener","removeAddressListener","getInstance","contract","Contract","JSON","parse","console","log","contractName","createAddressListenerAsync","on","results","abi","index","length","vmLog","decodeVmLog","vmlog","handleVmLogAsync","ensureContractExists","callOffChainMethodAsync","getOffchainMethodAbi","offChain","request","QuotaRequest","isEmptyRequest","blockHeight","note","ensureAccountExists","callContractAsync","amount","duration","has","get","find","e","type","set","commonUtil","isNullOrDefault","expirationHeight","event","VmLogEvent","RequestCreated","notNullOrWhiteSpace","args","addr","getRequestByAddress","emitQuotaRequestUpdated","RequestDeleted","emitQuotaRequestDeleted","quotaRequests","BankMockService","getRequests","flatMap","createRequest","newItem","push","stakeRequest","existing","bigNumber","toMin","updatedItem","withdrawRequest","deleteRequest","indexOf","splice","NetworkStore","_key","_blockHeight","_network","_defaultNetwork","_networks","Network","id","networkId","rpcUrl","connectorUrl","mock","emitNetworkBlockHeight","data","localStorage","getItem","err","error","defaultNetwork","parsedNetwork","setItem","stringify","removeItem","ServiceProvider","bank","walletConnectorFactory","WalletConnectorFactory","network","dispose","ConnectedWeb3Context","React","createContext","useConnectedWeb3Context","context","useContext","ConnectedWeb3","props","useState","connection","setConnection","isConnected","setIsConnected","useWeb3Context","wallet","getWallet","provider","useMemo","useEffect","active","initAsync","Typography","Provider","children","useAccountQuota","Quota","quota","setQuota","fetchQuota","getQuotaByAccount","newQuota","reducer","state","payload","UPDATE","ERROR","onError","Web3Context","Web3Provider","WalletManager","initWallet","useReducer","dispatch","setWallet","useCallback","setError","useWeb3Manager","onSetWalletCallback","useStyles","makeStyles","theme","root","minWidth","color","palette","grey","subtitle","fontWeight","unit","fontSize","display","chip","margin","AddressSummaryTable","classes","Balance","balance","setBalance","fetchBalance","getBalanceByAccount","useAccountBalance","setInterval","clearInterval","Paper","TableContainer","Table","TableHead","TableRow","TableCell","title","className","align","colSpan","TableBody","amountFormatted","currentQuotaFormatted","maxQuotaFormatted","stakeAmountFormatted","Tooltip","placement","arrow","interactive","Chip","size","label","truncateStringInTheMiddle","ClickOnceButton","isDisabled","setIsDisabled","handleClick","callbackFn","Button","variant","onClick","disabled","autoFocus","Transition","forwardRef","ref","Slide","direction","setOpen","handleEvent","off","handleClose","Dialog","TransitionComponent","keepMounted","onClose","style","zIndex","DialogTitle","DialogContent","DialogContentText","DialogActions","DialogType","Root","styled","div","paddingBottomSmall","Footer","process","createStyles","formControl","spacing","borderColor","common","white","selectEmpty","marginTop","AccountList","canAddAddress","WalletAccountType","Web","hidden","IconButton","aria-label","addAccount","setActiveAccount","Icon","FormControl","InputLabel","Select","labelId","onChange","target","getAccountByAddress","accounts","MenuItem","modal","alignItems","justifyContent","paper","backgroundColor","background","border","boxShadow","shadows","padding","textAlign","codeContainer","width","marginBottom","warning","LoginModal","mnemonic","setMnemonic","enqueueSnackbar","useSnackbar","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","connector","uri","createWebWallet","qrcode","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","generate","minHeight","marginLeft","NetworkCard","setBlockHeight","blockHeightSubject","Subject","fetchBlockHeight","getSnapshotChainHeightAsync","newBlockHeight","next","useBlockHeight","Card","CardContent","component","NetworkList","networks","setNetwork","selectedNetwork","location","reload","TitleTypography","Header","AppBar","position","Toolbar","src","alt","HeaderConnected","handleLogoutAsync","killSessionAsync","removeWallet","clear","table","marginRight","logo","subtitleCell","Logo","rowSpan","Link","href","MainScrollStyled","MainScrollInner","MainScroll","restProps","Container","maxWidth","MainWrapperStyled","MainWrapper","TruncateTooltip","defaultValue","maxLength","truncateValue","truncateString","renderTooltip","refreshButton","float","AccountQuotaRequestTable","quotaRequest","setQuotaRequest","updateQuotaRequest","handleUpdate","handleDelete","handleNetworkBlockHeight","newQuotaRequest","equals","noteInput","flexGrow","CreateQuotaRequest","requestNote","setRequestNote","handleConfirmAsync","formatUtil","formatSnackbarMessage","noValidate","autoComplete","TextField","QuotaRequestDueDate","isExpired","expirationDateFormatted","renderDueDate","BankDeleteDialog","handleDeleteAsync","item","closeFn","List","ListItem","ListItemText","primary","secondary","form","durationInput","BankStakeDialog","setAmount","setDuration","handleStakeAsync","Number","parseInt","inputProps","min","BankWithdrawDialog","handleWithdrawAsync","stakeButton","BankQuotaRequest","handleClickOpenFn","Stake","isStaked","canWithdraw","Withdraw","canDelete","Delete","BankQuotaRequestTable","initialValue","isLoading","setIsLoading","setQuotaRequests","fetchQuotaRequests","addresses","tempQuotaRequests","quotaRequestResult","unshift","useQuotaRequests","isQuotaRequestsLoading","selectedItem","setSelectedItem","stakeDialogOpen","setStakeDialogOpen","withdrawDialogOpen","setWithdrawDialogOpen","deleteDialogOpen","setDeleteDialogOpen","findIndex","updatedQuotaRequests","newQuotaRequests","filter","handleClickOpen","Main","getOwnerAsync","owner","Grid","container","xs","sm","md","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","momentUtil","moment","locale","navigator","language","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","QuotaRequestExtensions","quotaRequet","expirationDate","secondsDiff","minus","add","toDate","getLocalReverseFormatted","init","binary","balanceInfoMap","formatAmount","currentQuota","maxQuota","stakeAmount","formatQuota","updater","other","String","isString","isNullOrWhitespace","compared","ms","str","substr","strPositionStart","strPositionEnd","toBasic","message","normalFormat","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","normalConfig","FORMAT","ROUNDING_MODE","BigNumber","ROUND_DOWN","groupConfig","ceilConfig","ROUND_CEIL","config","GroupBigNumber","clone","CeilBigNumber","x","y","comparedTo","num1","num2","isEqualTo","fix","toFormat","decimalPlaces","plus","multipliedBy","dividedBy","integerValue","toString","num","minUnit","exponentiatedBy","c","offset","number","offsetNum","decimal","n","minDecimals","formatN","afterPoint","split","i","WalletType","Wallet","_type","baseInitinit","createAccount","Array","isArray","forEach","WebWallet","Session","SessionWallet","WebWalletAccount","session","timestamp","SessionWalletAccount","WalletAccount","baseInit","privateKey","WalletConnector","opts","meta","params","saveSession","stopBizHeartBeat","listener","sessionAccounts","Date","getTime","updateWalletStore","res","rej","sendCustomRequest","method","r","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","sessionStorage","fromJS","saveData","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","cb","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics","WS_RPC","require","providerOptions","retryTimes","retryInterval","factory","_factory","_connector","_provider","_client","_isConnected","destroy","create","isResolved","ViteAPI","initConnectorAsync","disconnect","requestAsync","methodName","toAddress","block","accountBlock","createAccountBlock","setProvider","setPrivateKey","autoSetPreviousAccountBlock","sign","send","emitConfirmTransactionDialog","sendTransactionAsync","contractAddress","offchaincode","abiutils","encodeFunctionCall","dataBase64","Buffer","from","selfAddr","offChainCode","resultBytes","outputs","offchainDecodeResult","decodeParameters","resultList","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","replace","subscribe","unsubscribe","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","resolveAccountBlockData","blockType","bytes"],"mappings":"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","file":"static/js/main.c2d6d822.chunk.js","sourcesContent":["export class Task {\r\n  private _taskTimer: NodeJS.Timeout | undefined\r\n  private _taskInterval: number\r\n  private _task: () => Promise<boolean>\r\n  private _callback?: () => any\r\n\r\n  constructor(task: () => Promise<boolean>, interval: number) {\r\n    this._task = task;\r\n    this._taskInterval = interval;\r\n\r\n    return this;\r\n  }\r\n\r\n  _run(): void {\r\n    this._taskTimer = setTimeout(async () => {\r\n      if (!this._task) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      if (!(await this._task())) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      this._run();\r\n    }, this._taskInterval);\r\n  }\r\n\r\n  _onStop() {\r\n    this._callback && this._callback();\r\n  }\r\n\r\n  start(callback?: () => any): void {\r\n    this._callback = callback;\r\n    if (this._taskTimer) {\r\n      return;\r\n    }\r\n\r\n    this._run();\r\n  }\r\n\r\n\r\n  stop(): void {\r\n    this._onStop();\r\n    if (!this._taskTimer) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this._taskTimer);\r\n    this._taskTimer = undefined;\r\n  }\r\n}","export const AppConstants = {\r\n  QuotaPerUT: 21000,\r\n  DefaultDecimals: 18,\r\n  DefaultZeroString: \"0\",\r\n  InitialNetworkBlockHeight: \"0\",\r\n  ViteTokenId: \"tti_5649544520544f4b454e6e40\",\r\n  QuotaContractAddress: \"vite_0000000000000000000000000000000000000003f6af7459b9\",\r\n  BankContractAddress: \"vite_091e12441cc09f51bb84b7950c7a4a3c44b77442eccb789f7a\",\r\n  NetworkStorageSpace: 'VQB_NETWORK',\r\n  WebWalletStorageSpace: 'VQB_WEB_WALLET',\r\n  SessionWalletStorageSpace: 'VQB_SESSION_WALLET',\r\n  DefaultMnemonic: 'spell barely teach wisdom best tragic three lyrics second notable excuse hobby example tenant business midnight member canal energy evoke debate tortoise high infant'\r\n}","export enum GlobalEvent {\r\n  NetworkBlockHeight = 'NetworkBlockHeight',\r\n  QuotaRequestUpdated = 'QuotaRequestUpdated',\r\n  QuotaRequestDeleted = 'QuotaRequestDeleted',\r\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog'\r\n}","import { ViteClient } from './vite';\r\n\r\nexport class ViteMockClient extends ViteClient {\r\n\r\n}","import EventEmitter from 'events';\r\nimport { QuotaRequest } from '../types';\r\nimport { GlobalEvent } from './types';\r\n\r\nexport interface IGlobalEmitter {\r\n  emitNetworkBlockHeight(height: string): void\r\n  emitQuotaRequestUpdated(update: QuotaRequest): void\r\n  emitQuotaRequestDeleted(address: string): void\r\n  emitConfirmTransactionDialog(open: boolean): void\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this\r\n}\r\n\r\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\r\n  emitNetworkBlockHeight(height: string): void {\r\n    this.emit(GlobalEvent.NetworkBlockHeight, height)\r\n  }\r\n  emitQuotaRequestUpdated(update: QuotaRequest): void {\r\n    this.emit(GlobalEvent.QuotaRequestUpdated, update)\r\n  }\r\n  emitQuotaRequestDeleted(address: string): void {\r\n    this.emit(GlobalEvent.QuotaRequestDeleted, address)\r\n  }\r\n  emitConfirmTransactionDialog(open: boolean): void {\r\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\r\n  }\r\n}","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string) {\r\n    if (property === null || property === undefined) {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: string, propertyName: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n}\r\n","export interface IFileUtil {\r\n  readFileAsync(path: string): Promise<any>\r\n}\r\n\r\nexport class fileUtil implements IFileUtil {\r\n  private static instance: fileUtil\r\n  private _fileUtil: IFileUtil\r\n\r\n  private constructor() {\r\n    this._fileUtil = new browserFileUtil()\r\n  }\r\n\r\n  static getInstance(): fileUtil {\r\n    if (!fileUtil.instance) {\r\n      fileUtil.instance = new fileUtil()\r\n    }\r\n\r\n    return fileUtil.instance\r\n  }\r\n\r\n  readFileAsync(path: string): Promise<any> {\r\n    return this._fileUtil.readFileAsync(path)\r\n  }\r\n}\r\n\r\nexport class browserFileUtil {\r\n  async readFileAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return response.text();\r\n  }\r\n}","import { useCallback, useReducer } from 'react'\r\nimport { SessionWallet, WebWallet } from '../wallet'\r\n\r\ninterface Web3ManagerState {\r\n  wallet?: WebWallet | SessionWallet\r\n  onError?: (error: Error) => void\r\n  error?: Error\r\n}\r\n\r\nenum ActionType {\r\n  UPDATE,\r\n  ERROR\r\n}\r\n\r\ninterface Action {\r\n  type: ActionType\r\n  payload?: any\r\n}\r\n\r\nfunction reducer(state: Web3ManagerState, { type, payload }: Action): Web3ManagerState {\r\n  switch (type) {\r\n    case ActionType.UPDATE: {\r\n      const { wallet } = payload\r\n      return {\r\n        ...state,\r\n        ...({ wallet })\r\n      }\r\n    }\r\n    case ActionType.ERROR: {\r\n      const { error } = payload\r\n      const { onError } = state\r\n      return {\r\n        error,\r\n        onError\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const useWeb3Manager = (initWallet?: WebWallet | SessionWallet) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    wallet: initWallet\r\n  })\r\n  // const { account, onError, error } = state\r\n  const { wallet, error } = state\r\n\r\n  const setWallet = useCallback((wallet?: WebWallet | SessionWallet): void => {\r\n    dispatch({ type: ActionType.UPDATE, payload: { wallet } })\r\n  }, [])\r\n\r\n  const setError = useCallback((error: Error): void => {\r\n    dispatch({ type: ActionType.ERROR, payload: { error } })\r\n  }, [])\r\n\r\n  // const handleError = useCallback(\r\n  //   (error: Error): void => {\r\n  //     onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\r\n  //   },\r\n  //   [onError]\r\n  // )\r\n\r\n  // ensure that events emitted from the set connector are handled appropriately\r\n  // useEffect((): (() => void) => {\r\n  //   if (connector) {\r\n  //     connector\r\n  //       .on(ConnectorEvent.Update, handleUpdate)\r\n  //       .on(ConnectorEvent.Error, handleError)\r\n  //       .on(ConnectorEvent.Deactivate, handleDeactivate)\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (connector) {\r\n  //       connector\r\n  //         .off(ConnectorEvent.Update, handleUpdate)\r\n  //         .off(ConnectorEvent.Error, handleError)\r\n  //         .off(ConnectorEvent.Deactivate, handleDeactivate)\r\n  //     }\r\n  //   }\r\n  // }, [connector, handleUpdate, handleError, handleDeactivate])\r\n\r\n  return { setWallet, wallet, setError, error }\r\n}","import { IViteClient } from '../clients';\r\nimport { AppConstants } from '../constants';\r\nimport { IGlobalEmitter } from '../emitters';\r\nimport { INetworkStore } from '../stores';\r\nimport { Contract, IVmLog, QuotaRequest, VmLogEvent } from '../types';\r\nimport { commonUtil } from '../util/commonUtil';\r\nimport { Ensure } from '../util/ensure';\r\nimport { fileUtil } from '../util/fileUtil';\r\nimport { WalletAccount, WalletManager } from '../wallet';\r\n\r\nexport interface IBankService {\r\n  readonly listener: void\r\n  initAsync(): Promise<void>\r\n  dispose(): void\r\n  getOwnerAsync(): Promise<string>\r\n  getRequests(): Promise<string[]>\r\n  getRequestByAddress(address: string): Promise<QuotaRequest>\r\n  createRequest(note?: string): Promise<void>\r\n  stakeRequest(address: string, amount: number, duration: number): Promise<void>\r\n  withdrawRequest(address: string): Promise<void>\r\n  deleteRequest(address: string): Promise<void>\r\n}\r\n\r\nexport class BankService implements IBankService {\r\n\r\n  protected readonly _vite: IViteClient\r\n  protected readonly _emitter: IGlobalEmitter\r\n  protected readonly _networkStore: INetworkStore\r\n  private readonly _walletManager: WalletManager\r\n  private _contract?: Contract\r\n  private _offchainMethods: Map<string, string> = new Map<string, string>()\r\n  private _listener: any\r\n\r\n  constructor(vite: IViteClient, emitter: IGlobalEmitter, networkStore: INetworkStore, walletManager: WalletManager) {\r\n    this._vite = vite\r\n    this._emitter = emitter\r\n    this._networkStore = networkStore\r\n    this._walletManager = walletManager\r\n  }\r\n\r\n  get listener(): any {\r\n    if (!this._listener) {\r\n      throw new Error(\"Listener is not defined.\")\r\n    }\r\n    return this._listener\r\n  }\r\n\r\n  private ensureContractExists(): Contract {\r\n    if (this._contract?.address === undefined) {\r\n      throw new Error(\"Bank contract is not defined.\")\r\n    } else {\r\n      return this._contract\r\n    }\r\n  }\r\n\r\n  protected ensureAccountExists(): WalletAccount {\r\n    const account = this._walletManager.getActiveAccount()\r\n    if (account?.address === undefined) {\r\n      throw new Error(\"Login and try again.\")\r\n    } else {\r\n      return account\r\n    }\r\n  }\r\n\r\n  private removeAddressListener(): void {\r\n    if (this._listener) {\r\n      this._vite.removeListener(this._listener)\r\n    }\r\n  }\r\n\r\n  async initAsync(): Promise<void> {\r\n    this.removeAddressListener()\r\n    const contract = await fileUtil.getInstance().readFileAsync('./assets/contracts/QuotaBank.json')\r\n    this._contract = new Contract(JSON.parse(contract))\r\n    this._contract.address = AppConstants.BankContractAddress\r\n    console.log('Contract name:', this._contract?.contractName)\r\n    // TODO: listen for vmlogs emitted by the specified contract\r\n    // -> emit with GlobalEmitter\r\n    this._listener = await this._vite.createAddressListenerAsync(this._contract.address)\r\n    this._listener.on((results: any[]) => {\r\n      if (!this._contract?.abi) {\r\n        console.log('Could not decode vmlog because contract abi is not defined.')\r\n      } else {\r\n        for (let index = 0; index < results.length; index++) {\r\n          const result = results[index];\r\n          const vmLog = this._vite.decodeVmLog(result.vmlog, this._contract.abi);\r\n          console.log(vmLog ?? result)\r\n          if (vmLog) {\r\n            this.handleVmLogAsync(vmLog)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing BankService\")\r\n    this.removeAddressListener()\r\n  }\r\n\r\n  async getOwnerAsync(): Promise<string> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getOwner'), contract.offChain, [])\r\n    return result[0].value;\r\n  }\r\n\r\n  async getRequests(): Promise<string[]> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getRequestors'), contract.offChain, [])\r\n    return result[0].value;\r\n  }\r\n\r\n  async getRequestByAddress(address: string): Promise<QuotaRequest> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getRequest'), contract.offChain, [address])\r\n    const request = new QuotaRequest(this.objectFromEntries(result))\r\n    if (this.isEmptyRequest(request)) {\r\n      throw new Error(`No request found for '${address}'.`)\r\n    }\r\n    request.address = address\r\n    request.update(this._networkStore.blockHeight)\r\n    return request;\r\n  }\r\n\r\n  async createRequest(note?: string): Promise<void> {\r\n    const contract = this.ensureContractExists()\r\n    const account = this.ensureAccountExists()\r\n\r\n    const result = await this._vite.callContractAsync(account, 'CreateRequest', contract.abi, [note], AppConstants.DefaultZeroString, contract.address)\r\n    await this.handleResponseAsync(account.address, result.height)\r\n  }\r\n\r\n  async stakeRequest(address: string, amount: number, duration: number): Promise<void> {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  async withdrawRequest(address: string): Promise<void> {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  async deleteRequest(address: string): Promise<void> {\r\n    const contract = this.ensureContractExists()\r\n    const account = this.ensureAccountExists()\r\n    const result = await this._vite.callContractAsync(account, 'DeleteRequest', contract.abi, [address], AppConstants.DefaultZeroString, contract.address)\r\n    await this.handleResponseAsync(account.address, result.height)\r\n  }\r\n\r\n  private getOffchainMethodAbi(name: string): string {\r\n    const contract = this.ensureContractExists()\r\n    let result: Maybe<string>\r\n    if (this._offchainMethods.has(name)) {\r\n      result = this._offchainMethods.get(name)\r\n    } else {\r\n      result = contract.abi.find(e => e.type === \"offchain\" && e.name === name)\r\n      if (result) {\r\n        this._offchainMethods.set(name, result)\r\n      }\r\n    }\r\n    if (result) {\r\n      return result\r\n    } else {\r\n      throw new Error(`The offchain method '${name}' does not exist.'`)\r\n    }\r\n  }\r\n\r\n  private isEmptyRequest(request: QuotaRequest): boolean {\r\n    return commonUtil.isNullOrDefault(request.expirationHeight, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\r\n    this._vite.waitForAccountBlockAsync(address, height).then((result: any) => {\r\n      if (result?.status === 0) {\r\n        resolve()\r\n      } else {\r\n        reject(result?.statusTxt ?? \"Something went wrong.\")\r\n      }\r\n    })\r\n  })\r\n\r\n  private async handleVmLogAsync(vmlog: IVmLog): Promise<void> {\r\n    try {\r\n      if (vmlog.event === VmLogEvent.RequestCreated) {\r\n        Ensure.notNullOrWhiteSpace(vmlog.args?.addr, 'vmlog.args.addr')\r\n        const request = await this.getRequestByAddress(vmlog.args?.addr)\r\n        this._emitter.emitQuotaRequestUpdated(request)\r\n      } else if (vmlog.event === VmLogEvent.RequestDeleted) {\r\n        Ensure.notNullOrWhiteSpace(vmlog.args?.addr, 'vmlog.args.addr')\r\n        this._emitter.emitQuotaRequestDeleted(vmlog.args?.addr)\r\n      } else {\r\n        console.log('Unknown vmlog event.')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  private objectFromEntries = (entries: any) => {\r\n    return Object.fromEntries(\r\n      entries.map((entry: any) => {\r\n        return [entry.name, entry.value];\r\n      })\r\n    );\r\n  };\r\n}","import { AppConstants } from '../constants';\r\nimport { QuotaRequest } from '../types';\r\nimport { bigNumber } from '../util/bigNumber';\r\nimport { BankService } from './bank';\r\n\r\nconst quotaRequests = [\r\n  new QuotaRequest({\r\n    address: 'vite_48e7436290e300268ed360a28704d9df9dbcbe485f7ed24cf1',\r\n    expirationHeight: '1487686'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_7fb28c2b8c3ee3fd5d271f632b16ef81f1f98d136445a1c1cb',\r\n    expirationHeight: '1987866',\r\n    note: 'Twitter: 0xRomanNiklaus'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_ce9499905e2dacab4972574cc4319f9b9d44020af89a239463',\r\n    expirationHeight: '1587687',\r\n    note: 'GitHub: niklr',\r\n    amount: '1500000000000000000000'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_df81e81a5e552f54fccdad71aa0b951ebec6e456f9d0c69ee4',\r\n    expirationHeight: '1350998',\r\n    amount: '1500000000000000000000'\r\n  }),\r\n  new QuotaRequest({\r\n    note: 'Test 1324'\r\n  })\r\n]\r\n\r\nexport class BankMockService extends BankService {\r\n  getRequests = async () => new Promise<string[]>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(quotaRequests.flatMap(e => e.address ? e.address : []))\r\n    }, 1000)\r\n  })\r\n\r\n  getRequestByAddress = async (address: string) => new Promise<QuotaRequest>((resolve, reject) => {\r\n    const result = quotaRequests.find(e => e.address === address);\r\n    result?.update(this._networkStore.blockHeight)\r\n    if (result) {\r\n      setTimeout(() => {\r\n        resolve(result)\r\n      }, 100)\r\n    } else {\r\n      reject(`Quota request for '${address}' not found.`)\r\n    }\r\n  })\r\n\r\n  createRequest = async (note?: string) => new Promise<void>((resolve, reject) => {\r\n    const account = this.ensureAccountExists()\r\n    if (note) {\r\n      if (account.address && quotaRequests.find(e => e.address === account.address)) {\r\n        reject(\"Request already exists.\")\r\n      } else {\r\n        const newItem = new QuotaRequest({\r\n          address: account.address,\r\n          note,\r\n          expirationHeight: this._networkStore.blockHeight + 10\r\n        })\r\n        newItem.update(this._networkStore.blockHeight)\r\n        quotaRequests.push(newItem)\r\n        resolve()\r\n        setTimeout(() => {\r\n          this._emitter.emitQuotaRequestUpdated(newItem)\r\n        }, 500)\r\n      }\r\n    } else {\r\n      setTimeout(() => {\r\n        reject(\"Request failed. Please try again later.\")\r\n      }, 2000)\r\n    }\r\n  })\r\n\r\n  stakeRequest = async (address: string, amount: number, duration: number) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    if (!amount || amount <= 0) {\r\n      reject(\"Please provide a valid amount.\")\r\n      return\r\n    }\r\n    if (!duration || duration <= 0) {\r\n      reject(\"Please provide a valid duration.\")\r\n      return\r\n    }\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      existing.amount = bigNumber.toMin(amount, AppConstants.DefaultDecimals)\r\n      existing.expirationHeight = this._networkStore.blockHeight + duration\r\n      const updatedItem = new QuotaRequest(existing)\r\n      updatedItem.update(this._networkStore.blockHeight)\r\n      resolve()\r\n      setTimeout(() => {\r\n        this._emitter.emitQuotaRequestUpdated(updatedItem)\r\n      }, 500)\r\n    }\r\n  })\r\n\r\n  withdrawRequest = async (address: string) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      existing.amount = undefined\r\n      const updatedItem = new QuotaRequest(existing)\r\n      updatedItem.update(this._networkStore.blockHeight)\r\n      resolve()\r\n      setTimeout(() => {\r\n        this._emitter.emitQuotaRequestUpdated(updatedItem)\r\n      }, 500)\r\n    }\r\n  })\r\n\r\n  deleteRequest = async (address: string) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      const index = quotaRequests.indexOf(existing);\r\n      if (index > -1) {\r\n        quotaRequests.splice(index, 1);\r\n      }\r\n      setTimeout(() => {\r\n        resolve()\r\n        this._emitter.emitQuotaRequestDeleted(address)\r\n      }, 500)\r\n    }\r\n  })\r\n}","import { AppConstants } from '../constants';\r\nimport { IGlobalEmitter } from '../emitters';\r\nimport { Network } from '../types';\r\n\r\nexport interface INetworkStore {\r\n  blockHeight: string\r\n  network: Network\r\n  defaultNetwork: Network\r\n  networks: Network[]\r\n  getById(networkId: number): Maybe<Network>\r\n  clear(): void\r\n}\r\n\r\nexport class NetworkStore implements INetworkStore {\r\n\r\n  private readonly _key: string = AppConstants.NetworkStorageSpace;\r\n  private _emitter?: IGlobalEmitter\r\n  private _blockHeight: string\r\n  private _network?: Network\r\n  private _defaultNetwork: Network\r\n  private _networks: Network[] = [\r\n    // new Network({\r\n    //   id: 1,\r\n    //   networkId: 1,\r\n    //   name: 'MAINNET',\r\n    //   rpcUrl: 'wss://node.vite.net/gvite/ws',\r\n    //   connectorUrl: 'wss://biforst.vite.net\r\n    // }),\r\n    new Network({\r\n      id: 2,\r\n      networkId: 2,\r\n      name: 'TESTNET',\r\n      rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\r\n      connectorUrl: 'wss://biforst.vite.net'\r\n    }),\r\n    new Network({\r\n      id: 3,\r\n      networkId: 2,\r\n      name: 'TESTNET+MOCK',\r\n      rpcUrl: 'wss://buidl.vite.net/gvite/ws',\r\n      connectorUrl: 'wss://biforst.vite.net',\r\n      mock: true\r\n    }),\r\n    new Network({\r\n      id: 4,\r\n      networkId: 5,\r\n      name: 'DEBUG',\r\n      rpcUrl: 'ws://localhost:23457',\r\n      connectorUrl: 'wss://biforst.vite.net'\r\n    })\r\n  ]\r\n\r\n  constructor(emitter?: IGlobalEmitter) {\r\n    this._emitter = emitter\r\n    this._blockHeight = AppConstants.InitialNetworkBlockHeight\r\n    this._defaultNetwork = this._networks[1]\r\n  }\r\n\r\n  get blockHeight(): string {\r\n    return this._blockHeight\r\n  }\r\n\r\n  set blockHeight(height: string) {\r\n    this._blockHeight = height\r\n    this._emitter?.emitNetworkBlockHeight(height)\r\n  }\r\n\r\n  get network(): Network {\r\n    if (this._network) {\r\n      return this._network\r\n    }\r\n\r\n    let data;\r\n\r\n    try {\r\n      data = localStorage.getItem(this._key);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    if (!data) {\r\n      return this.defaultNetwork;\r\n    }\r\n\r\n    try {\r\n      const parsedNetwork = new Network(JSON.parse(data))\r\n      this._network = this._networks.find(e => e.id === parsedNetwork.id)\r\n      return this._network ?? this.defaultNetwork;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return this.defaultNetwork;\r\n    }\r\n  }\r\n\r\n  set network(value: Network) {\r\n    if (value) {\r\n      this._network = value\r\n      localStorage.setItem(this._key, JSON.stringify(value))\r\n    } else {\r\n      this._network = undefined\r\n      localStorage.removeItem(this._key)\r\n    }\r\n  }\r\n\r\n  get defaultNetwork(): Network {\r\n    return this._defaultNetwork\r\n  }\r\n\r\n  get networks(): Network[] {\r\n    return this._networks ?? []\r\n  }\r\n\r\n  getById(networkId: number): Maybe<Network> {\r\n    return this._networks.find(e => e.id === networkId)\r\n  }\r\n\r\n  clear(): void {\r\n    this._network = undefined\r\n    localStorage.removeItem(this._key)\r\n  }\r\n}","import { IViteClient, ViteClient, ViteMockClient } from '../clients';\r\nimport { GlobalEmitter, IGlobalEmitter } from '../emitters';\r\nimport { BankMockService, BankService, IBankService } from '../services';\r\nimport { INetworkStore, NetworkStore } from '../stores';\r\nimport { WalletConnectorFactory, WalletManager } from '../wallet';\r\n\r\nexport class ServiceProvider {\r\n  emitter: IGlobalEmitter\r\n  networkStore: INetworkStore\r\n  vite: IViteClient\r\n  bank: IBankService\r\n\r\n  constructor(walletManager: WalletManager) {\r\n    this.emitter = new GlobalEmitter()\r\n    this.networkStore = new NetworkStore(this.emitter)\r\n    const walletConnectorFactory = new WalletConnectorFactory(walletManager)\r\n    if (this.networkStore.network.mock) {\r\n      this.vite = new ViteMockClient(this.emitter, walletConnectorFactory)\r\n      this.bank = new BankMockService(this.vite, this.emitter, this.networkStore, walletManager)\r\n    } else {\r\n      this.vite = new ViteClient(this.emitter, walletConnectorFactory)\r\n      this.bank = new BankService(this.vite, this.emitter, this.networkStore, walletManager)\r\n    }\r\n  }\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing ServiceProvider\")\r\n    this.vite.dispose()\r\n    this.bank.dispose()\r\n  }\r\n}","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useWeb3Context } from '.';\r\nimport { MainLoading } from '../components/MainLoading';\r\nimport { ServiceProvider } from '../providers';\r\nimport { WalletManager } from '../wallet';\r\n\r\nexport interface IConnectedWeb3Context {\r\n  account?: string\r\n  walletManager: WalletManager\r\n  provider: ServiceProvider\r\n}\r\n\r\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\r\n\r\n/**\r\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\r\n */\r\nexport const useConnectedWeb3Context = () => {\r\n  const context = React.useContext(ConnectedWeb3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\n/**\r\n * Component used to render components that depend on Web3 being available. These components can then\r\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\r\n */\r\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\r\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const context = useWeb3Context()\r\n\r\n  const { walletManager } = context\r\n\r\n  const wallet = walletManager.getWallet()\r\n\r\n  const provider = useMemo(() => {\r\n    return new ServiceProvider(walletManager)\r\n  }, [walletManager])\r\n\r\n  useEffect(() => {\r\n    const network = provider.networkStore.network\r\n    if (!network) throw new Error('Network is not defined')\r\n\r\n    const value = {\r\n      account: wallet?.active?.address,\r\n      walletManager,\r\n      provider\r\n    }\r\n\r\n    console.log('ConnectedWeb3.account', wallet?.active?.address)\r\n\r\n    const initAsync = async () => {\r\n      console.log('ConnectedWeb3.initAsync')\r\n      if (!value.provider.networkStore.network?.rpcUrl) {\r\n        throw new Error('Network is not defined')\r\n      } else {\r\n        await value.provider.vite.initAsync(value.provider.networkStore.network)\r\n      }\r\n      await value.provider.bank.initAsync()\r\n      setConnection(value)\r\n      setIsConnected(true)\r\n    }\r\n    initAsync()\r\n    return () => {\r\n      provider.dispose()\r\n    }\r\n  }, [wallet, walletManager, provider])\r\n\r\n  if (!connection) {\r\n    return MainLoading()\r\n  }\r\n\r\n  const value = {\r\n    ...connection\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isConnected ? (\r\n        <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\r\n      ) : (\r\n        <>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const WhenConnected: React.FC<Props> = props => {\r\n  const { account } = useConnectedWeb3Context()\r\n\r\n  return <>{account && props.children}</>\r\n}\r\n","import { Typography } from '@material-ui/core'\r\nimport { Footer, Header, MainScroll, MainWrapper } from './common'\r\n\r\nexport const MainLoading = () => {\r\n\r\n  return (\r\n    <>\r\n      <MainWrapper>\r\n        <Header />\r\n        <MainScroll>\r\n          <Typography>Loading...</Typography>\r\n        </MainScroll>\r\n        <Footer />\r\n      </MainWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { Quota } from '../types'\r\n\r\nexport const useAccountQuota = (context: IConnectedWeb3Context, address?: string) => {\r\n  const [quota, setQuota] = useState(new Quota())\r\n\r\n  const fetchQuota = async () => {\r\n    try {\r\n      if (address) {\r\n        const newQuota = await context.provider.vite.getQuotaByAccount(address)\r\n        setQuota(newQuota)\r\n      }\r\n    } catch (error) {\r\n      setQuota(new Quota())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchQuota()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    quota,\r\n    fetchQuota,\r\n    setQuota\r\n  }\r\n}","import React from 'react';\r\nimport { WalletManager } from '../wallet';\r\nimport { useWeb3Manager } from './web3Manager';\r\n\r\nexport interface IWeb3Context {\r\n  setError: (error: Error) => void,\r\n  error?: Error,\r\n  walletManager: WalletManager\r\n}\r\n\r\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\r\n\r\nexport const useWeb3Context = () => {\r\n  const context = React.useContext(Web3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\r\n  const walletManager = new WalletManager()\r\n\r\n  const {\r\n    setWallet,\r\n    setError,\r\n    error\r\n  } = useWeb3Manager(walletManager.getWallet())\r\n\r\n  walletManager.onSetWalletCallback = setWallet\r\n\r\n  const context: IWeb3Context = {\r\n    setError,\r\n    error,\r\n    walletManager\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Chip, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useAccountBalance, useAccountQuota, useConnectedWeb3Context } from '../../hooks'\r\nimport { commonUtil } from '../../util/commonUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  quota: {\r\n    color: theme.palette.grey[500]\r\n  },\r\n  subtitle: {\r\n    fontWeight: 250\r\n  },\r\n  unit: {\r\n    fontSize: 10,\r\n    display: 'inline',\r\n    color: theme.palette.grey[500]\r\n  },\r\n  chip: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  title?: string\r\n  address?: string\r\n}\r\n\r\nexport const AddressSummaryTable: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles()\r\n  const context = useConnectedWeb3Context()\r\n  const delay = 1000\r\n\r\n  const { quota, fetchQuota } = useAccountQuota(context, props.address)\r\n  const { balance, fetchBalance } = useAccountBalance(context, props.address)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      if (props.address) {\r\n        await fetchBalance()\r\n        await fetchQuota()\r\n      }\r\n    }, delay)\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 15, 10)\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                {props.title}\r\n              </TableCell>\r\n              <TableCell className={classes.quota} align=\"center\" colSpan={3}>\r\n                Quota\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.subtitle}>Balance</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Current</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Max</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Staked</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n                {balance.amountFormatted} <Typography className={classes.unit}>VITE</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.currentQuotaFormatted} <Typography className={classes.unit}>UT</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.maxQuotaFormatted} <Typography className={classes.unit}>UT</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.stakeAmountFormatted} <Typography className={classes.unit}>VITE</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Tooltip title={props.address ?? \"\"} placement=\"top\" arrow interactive>\r\n        <Chip className={classes.chip} size=\"small\" label={truncateAddress(props.address)} />\r\n      </Tooltip>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { Balance } from '../types'\r\n\r\nexport const useAccountBalance = (context: IConnectedWeb3Context, address?: string) => {\r\n  const [balance, setBalance] = useState(new Balance())\r\n\r\n  const fetchBalance = async () => {\r\n    try {\r\n      if (address) {\r\n        const newQuota = await context.provider.vite.getBalanceByAccount(address)\r\n        setBalance(newQuota)\r\n      }\r\n    } catch (error) {\r\n      setBalance(new Balance())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBalance()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    balance,\r\n    fetchBalance,\r\n    setBalance\r\n  }\r\n}","import React from 'react';\r\nimport { Button, PropTypes } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  size?: 'small' | 'medium' | 'large'\r\n  variant?: 'text' | 'outlined' | 'contained'\r\n  color?: PropTypes.Color\r\n  autoFocus?: boolean\r\n  callbackFn: () => Promise<void>\r\n}\r\n\r\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\r\n  const [isDisabled, setIsDisabled] = React.useState(false)\r\n\r\n  const handleClick = async () => {\r\n    setIsDisabled(true)\r\n    try {\r\n      await props.callbackFn()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setIsDisabled(false)\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      size={props.size ?? \"small\"}\r\n      variant={props.variant ?? \"contained\"}\r\n      color={props.color}\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n      autoFocus={props.autoFocus}>\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\nimport { GlobalEvent } from '../../emitters';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport function ConfirmTransactionDialog() {\r\n  const context = useConnectedWeb3Context()\r\n  const emitter = context.provider.emitter\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (open: boolean) => {\r\n      setOpen(open)\r\n    }\r\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\r\n    return () => {\r\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\r\n    };\r\n  }, [emitter, setOpen])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      style={{ zIndex: 9999 }}\r\n    >\r\n      <DialogTitle>ViteConnect</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please confirm transaction on VITE Wallet App\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","export enum DialogType {\r\n  Stake = 'STAKE',\r\n  Withdraw = 'WITHDRAW',\r\n  Delete = 'DELETE',\r\n}","import { Typography } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Root = styled.div<{ paddingBottomSmall?: boolean }>`\r\n  padding-bottom: ${props => (props.paddingBottomSmall ? '10px' : '30px')};\r\n  padding-top: 10px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  text-align: right;\r\n`\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <>\r\n      <Root paddingBottomSmall={true}>\r\n        <Typography>v{process.env.REACT_APP_VERSION}</Typography>\r\n      </Root>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createStyles, FormControl, Icon, IconButton, InputLabel, makeStyles, Select, Theme } from '@material-ui/core';\r\nimport { useWeb3Context } from '../../hooks';\r\nimport { commonUtil } from '../../util/commonUtil';\r\nimport { WalletAccountType } from '../../wallet';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: theme.palette.common.white,\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: theme.palette.common.white,\r\n        },\r\n      },\r\n      '& .MuiSelect-root': {\r\n        color: theme.palette.common.white\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n        color: theme.palette.common.white\r\n      }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nexport const AccountList = () => {\r\n  const classes = useStyles()\r\n  const context = useWeb3Context()\r\n\r\n  const { walletManager } = context\r\n\r\n  const wallet = walletManager.getWallet()\r\n\r\n  const canAddAddress = wallet?.active?.type === WalletAccountType.Web\r\n  const addAddress = () => {\r\n    const account = walletManager.addAccount()\r\n    if (account) {\r\n      walletManager.setActiveAccount(account)\r\n    }\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event.target.value)\r\n    const account = walletManager.getAccountByAddress(event.target.value as string)\r\n    if (account) {\r\n      walletManager.setActiveAccount(account)\r\n    }\r\n  }\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 10, 5)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div hidden={!canAddAddress}>\r\n        <IconButton aria-label=\"add\" onClick={addAddress}>\r\n          <Icon style={{ color: 'white' }}>add_circle_outline</Icon>\r\n        </IconButton>\r\n      </div>\r\n      <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n        <InputLabel id=\"select-address-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"select-address-label\"\r\n          id=\"select-address-label\"\r\n          value={wallet?.active?.address}\r\n          onChange={handleChange}\r\n        >\r\n          {wallet?.accounts?.map(account => {\r\n            return (\r\n              <MenuItem key={account.address} value={account.address}>{truncateAddress(account.address)}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Backdrop, Button, Fade, Modal, Typography } from '@material-ui/core';\r\nimport { QrCode } from '.';\r\nimport { AppConstants } from '../../constants';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    textAlign: 'center'\r\n  },\r\n  codeContainer: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    marginBottom: '10px'\r\n  },\r\n  warning: {\r\n    color: '#611a15',\r\n    backgroundColor: '#fdecea',\r\n    padding: '15px',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport const LoginModal = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [mnemonic, setMnemonic] = React.useState<string>('');\r\n  const context = useConnectedWeb3Context();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { walletManager, provider } = context\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (AppConstants.DefaultMnemonic) {\r\n        setMnemonic(AppConstants.DefaultMnemonic)\r\n      }\r\n      // TODO: init wallet connector to avoid stale URIs\r\n      console.log('login modal opened')\r\n    }\r\n  }, [open])\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const wallet = walletManager.createWebWallet(mnemonic);\r\n    if (!wallet) {\r\n      enqueueSnackbar('Invalid mnemonic')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"inherit\" onClick={handleOpen}>Login</Button>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <div className={classes.codeContainer}>\r\n              <Typography>Scan the QR code via Vite Wallet App</Typography>\r\n              <QrCode text={provider.vite.connector?.uri}></QrCode>\r\n            </div>\r\n            <Button variant=\"contained\" onClick={handleLogin}>Use test account</Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  qrcode: {\r\n    background: '#fff',\r\n    padding: '10px'\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  text?: string\r\n}\r\n\r\nexport const QrCode: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const elementRef = useRef<HTMLDivElement>(null);\r\n\r\n  console.log(props.text)\r\n\r\n  useEffect(() => {\r\n    const defaultOpt = {\r\n      size: 240,\r\n      ecLevel: ecLevel.HIGH,\r\n      minVersion: 4,\r\n      background: '#fff',\r\n      mode: modes.DRAW_WITH_IMAGE_BOX,\r\n      radius: 0,\r\n      image: process.env.PUBLIC_URL + '/icon.png',\r\n      mSize: 0.3\r\n    };\r\n\r\n    if (props.text && elementRef.current) {\r\n      elementRef.current.innerHTML = ''\r\n      const q = new qrcode(elementRef.current);\r\n      q.generate(props.text, defaultOpt).then(() => {\r\n        console.log('QR code generated')\r\n      });\r\n    }\r\n  }, [props.text])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.qrcode} ref={elementRef}></div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, CardContent, Chip, makeStyles, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useBlockHeight, useConnectedWeb3Context } from '../../hooks'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    minHeight: 211,\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    marginBottom: 10\r\n  },\r\n  blockHeight: {\r\n    marginTop: 15\r\n  },\r\n  chip: {\r\n    marginTop: 15\r\n  }\r\n});\r\n\r\nexport const NetworkCard = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n\r\n  const { blockHeight, fetchBlockHeight } = useBlockHeight(context)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      await fetchBlockHeight()\r\n    }, 1000)\r\n    return () => {\r\n      // console.log('NetworkCard interval cleared')\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  const network = context.provider.networkStore.network\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\">\r\n            Network\r\n          </Typography>\r\n          <Chip size=\"small\" label={network?.name} /> / <Chip size=\"small\" label={network?.networkId} />\r\n          <Typography className={classes.blockHeight} variant=\"h5\" component=\"h2\">\r\n            {blockHeight}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            Block height\r\n          </Typography>\r\n          <Chip className={classes.chip} size=\"small\" label={network?.rpcUrl} />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useAccountQuota, useConnectedWeb3Context } from '../../hooks'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    minHeight: 170,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  unit: {\r\n    marginLeft: 5,\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  title?: string\r\n  address?: string\r\n}\r\n\r\nexport const QuotaCard: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n\r\n  const { quota, fetchQuota } = useAccountQuota(context, props.address)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      await fetchQuota()\r\n    }, 1000)\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"div\">\r\n            {props.title}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.currentQuotaFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  UT\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Current\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.maxQuotaFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  UT\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Max\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.stakeAmountFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  VITE\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Staked\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Subject } from 'rxjs';\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { AppConstants } from '../constants';\r\n\r\nexport const useBlockHeight = (context: IConnectedWeb3Context) => {\r\n  const [blockHeight, setBlockHeight] = useState(AppConstants.InitialNetworkBlockHeight)\r\n  const blockHeightSubject = new Subject<string>()\r\n\r\n  const fetchBlockHeight = async () => {\r\n    let newBlockHeight: string\r\n    try {\r\n      newBlockHeight = await context.provider.vite.getSnapshotChainHeightAsync()\r\n\r\n    } catch (error) {\r\n      newBlockHeight = AppConstants.InitialNetworkBlockHeight\r\n    }\r\n    setBlockHeight(newBlockHeight)\r\n    context.provider.networkStore.blockHeight = newBlockHeight\r\n    blockHeightSubject.next(newBlockHeight)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log('useBlockHeightEffect')\r\n    fetchBlockHeight()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    blockHeight,\r\n    blockHeightSubject,\r\n    fetchBlockHeight\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createStyles, FormControl, InputLabel, makeStyles, Select, Theme } from '@material-ui/core';\r\nimport { INetworkStore } from '../../stores';\r\nimport { Network } from '../../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      '& .MuiSelect-root': {\r\n        color: theme.palette.common.white\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n        color: theme.palette.common.white\r\n      }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  networkStore: INetworkStore\r\n}\r\n\r\nexport const NetworkList: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles()\r\n  const networks = props.networkStore.networks\r\n  const [network, setNetwork] = useState<Network>(props.networkStore.network)\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event.target.value)\r\n    const selectedNetwork = networks.find(e => e.id === event.target.value)\r\n    if (selectedNetwork) {\r\n      props.networkStore.network = selectedNetwork\r\n      setNetwork(selectedNetwork)\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n        <InputLabel id=\"select-network-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"select-network-label\"\r\n          id=\"select-network-label\"\r\n          value={network?.id}\r\n          onChange={handleChange}\r\n        >\r\n          {networks.map(e => {\r\n            return (\r\n              <MenuItem key={e.id} value={e.id}>{e.name}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}","import { AppBar, Button, Toolbar, Typography } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\nimport { useConnectedWeb3Context } from '../../../hooks'\r\nimport { NetworkStore } from '../../../stores'\r\nimport { AccountList, LoginModal } from '../../account'\r\nimport { NetworkList } from '../../network'\r\n\r\nconst Root = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TitleTypography = styled(Typography)`\r\n  flex-grow: 1;\r\n  margin-left: 10px !important;\r\n`\r\n\r\nexport const Header: React.FC = (props: any) => {\r\n  const networkStore = new NetworkStore()\r\n\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={\"./icon_white.png\"} alt=\"logo\" width=\"30\" />\r\n          <TitleTypography variant=\"h6\">\r\n            Vite Quota Bank\r\n          </TitleTypography>\r\n          <NetworkList networkStore={networkStore}></NetworkList>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root>\r\n  )\r\n}\r\n\r\nexport const HeaderConnected: React.FC = (props: any) => {\r\n  const context = useConnectedWeb3Context()\r\n  const networkStore = new NetworkStore()\r\n\r\n  const { walletManager, provider } = context\r\n\r\n  const wallet = walletManager.getWallet()\r\n\r\n  const handleLogoutAsync = async () => {\r\n    try {\r\n      await provider.vite.connector?.killSessionAsync()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    walletManager.removeWallet()\r\n    networkStore.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={\"./icon_white.png\"} alt=\"logo\" width=\"30\" />\r\n          <TitleTypography variant=\"h6\">\r\n            Vite Quota Bank\r\n          </TitleTypography>\r\n          <NetworkList networkStore={networkStore}></NetworkList>\r\n          {wallet?.active && (\r\n            <>\r\n              <AccountList></AccountList>\r\n              <Button color=\"inherit\" onClick={async () => { await handleLogoutAsync() }}>Logout</Button>\r\n            </>\r\n          )}\r\n          {!wallet?.active && (\r\n            <LoginModal></LoginModal>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root>\r\n  )\r\n}","import { Link, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    marginBottom: '20px'\r\n  },\r\n  table: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  logo: {\r\n    marginTop: '7px',\r\n    marginRight: '5px',\r\n    width: '45px'\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: 500,\r\n    margin: '0px !important'\r\n  },\r\n  subtitleCell: {\r\n    textAlign: 'right'\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    color: '#535353'\r\n  }\r\n}));\r\n\r\nexport const Logo = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <table className={classes.table}>\r\n          <tbody>\r\n            <tr>\r\n              <td rowSpan={2}>\r\n                <img className={classes.logo} src={\"./icon.png\"} alt=\"logo\" />\r\n              </td>\r\n              <td>\r\n                <Typography className={classes.title}>Vite Quota Bank</Typography>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className={classes.subtitleCell}>\r\n                <Typography className={classes.subtitle}>\r\n                  by&nbsp;\r\n                  <Link href=\"https://github.com/niklr\" color=\"inherit\" target=\"_blank\">\r\n                    github.com/niklr\r\n                  </Link>\r\n                </Typography>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Container } from '@material-ui/core'\r\nimport * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MainScrollStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  padding-top: 30px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst MainScrollInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const MainScroll: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return (\r\n    <MainScrollStyled {...restProps}>\r\n      <Container maxWidth=\"lg\">\r\n        <MainScrollInner>{children}</MainScrollInner>\r\n      </Container>\r\n    </MainScrollStyled>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MainWrapperStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n`\r\n// width: 100vw;\r\n\r\nexport const MainWrapper: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\r\n}\r\n","import React from 'react';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { commonUtil } from '../../util/commonUtil';\r\n\r\ninterface Props {\r\n  value?: string\r\n  maxLength: number\r\n  defaultValue?: string\r\n}\r\n\r\nexport const TruncateTooltip: React.FC<Props> = (props: Props) => {\r\n  const defaultValue = props.defaultValue ?? \"-\"\r\n  const renderTooltip = () => {\r\n    if (props.value && props.value.length > props.maxLength) {\r\n      const truncateValue = commonUtil.truncateString(props.value, props.maxLength)\r\n      return (\r\n        <Tooltip title={props.value} placement=\"top\" arrow interactive>\r\n          <span>{truncateValue ?? defaultValue}</span>\r\n        </Tooltip>\r\n      )\r\n    }\r\n    return (\r\n      <span>{props.value ?? defaultValue}</span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderTooltip()}\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { Chip, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { QuotaRequest } from '../../types';\r\nimport { QuotaRequestDueDate } from '../quota_request';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { TruncateTooltip } from '../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    marginBottom: 20\r\n  },\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n}));\r\n\r\nexport const AccountQuotaRequestTable = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n  const account = context.account\r\n  const emitter = context.provider.emitter\r\n\r\n  const [quotaRequest, setQuotaRequest] = useState<QuotaRequest>(new QuotaRequest());\r\n\r\n  const updateQuotaRequest = useCallback(\r\n    async () => {\r\n      setQuotaRequest(new QuotaRequest())\r\n      if (context.account) {\r\n        try {\r\n          const result = await context.provider.bank.getRequestByAddress(context.account)\r\n          setQuotaRequest(result)\r\n        } catch (error) {\r\n          setQuotaRequest(new QuotaRequest())\r\n        }\r\n      }\r\n    }, [context, setQuotaRequest]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      if (account === update.address) {\r\n        console.log('Handle QuotaRequestUpdated', update.address)\r\n        setQuotaRequest(update)\r\n      }\r\n    }\r\n    const handleDelete = (address: string) => {\r\n      if (account === address) {\r\n        console.log('Handle QuotaRequestDeleted', address)\r\n        setQuotaRequest(new QuotaRequest())\r\n      }\r\n    }\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    emitter.on(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    updateQuotaRequest()\r\n    return () => {\r\n      console.log('AccountQuotaRequestTable disposed')\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n      emitter.off(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    };\r\n  }, [account, emitter, updateQuotaRequest, setQuotaRequest])\r\n\r\n  useEffect(() => {\r\n    const handleNetworkBlockHeight = (height: string) => {\r\n      // Create new instance, otherwise setQuotaRequest has no effect\r\n      const newQuotaRequest = new QuotaRequest(quotaRequest)\r\n      newQuotaRequest.update(height)\r\n      if (!quotaRequest.equals(newQuotaRequest)) {\r\n        console.log('AccountQuotaRequestTable changed', quotaRequest.address, height)\r\n        setQuotaRequest(newQuotaRequest)\r\n      }\r\n    }\r\n    // console.log('AccountQuotaRequestTable created', quotaRequest.address)\r\n    emitter.on(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    return () => {\r\n      // console.log('AccountQuotaRequestTable disposed', quotaRequest.address)\r\n      emitter.off(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    };\r\n  }, [emitter, quotaRequest, setQuotaRequest]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>\r\n        My Quota Request\r\n        <IconButton className={classes.refreshButton} aria-label=\"refresh\" onClick={updateQuotaRequest}>\r\n          <RefreshIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Typography>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Note\r\n                </TableCell>\r\n                <TableCell>\r\n                  Amount\r\n                </TableCell>\r\n                <TableCell>\r\n                  Expected Snapshot Height\r\n                </TableCell>\r\n                <TableCell>\r\n                  Expected Due Date\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TruncateTooltip value={quotaRequest.note} maxLength={24}></TruncateTooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.amountFormatted ?? '-'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.expirationHeight ?? '-'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <QuotaRequestDueDate quotaRequest={quotaRequest}>\r\n                  </QuotaRequestDueDate>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.status ? (\r\n                    <Chip size=\"small\" label={quotaRequest.status} />\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\nimport { ClickOnceButton } from '../common';\r\nimport { formatUtil } from '../../util/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  noteInput: {\r\n    flexGrow: 1,\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\nexport const CreateQuotaRequest: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [requestNote, setRequestNote] = useState<string>('');\r\n  const { provider } = useConnectedWeb3Context();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleConfirmAsync = async () => {\r\n    try {\r\n      await provider.bank.createRequest(requestNote)\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          className={classes.noteInput}\r\n          size=\"small\"\r\n          label=\"Request note\"\r\n          variant=\"outlined\"\r\n          value={requestNote}\r\n          onChange={e => setRequestNote(e.target.value)} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Request Quota</Button>\r\n      </form>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>Confirm quota request</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will receive quota as soon as the Vite Quota Bank accepts the request.\r\n            Please note that this is a manual operation, hence some delays could be associated.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleConfirmAsync}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { QuotaRequest } from '../../types';\r\n\r\ninterface Props {\r\n  quotaRequest?: QuotaRequest\r\n}\r\n\r\nexport const QuotaRequestDueDate: React.FC<Props> = (props: Props) => {\r\n  const renderDueDate = () => {\r\n    if (props?.quotaRequest?.isExpired) {\r\n      if (props?.quotaRequest?.amount) {\r\n        return (\r\n          <Tooltip title={props?.quotaRequest?.expirationDateFormatted ?? \"\"} placement=\"top\" arrow interactive>\r\n            <span>Staking expired!</span>\r\n          </Tooltip>\r\n        )\r\n      } else {\r\n        return (\r\n          <Tooltip title={props?.quotaRequest?.expirationDateFormatted ?? \"\"} placement=\"top\" arrow interactive>\r\n            <span>Request has expired!</span>\r\n          </Tooltip>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <span>{props?.quotaRequest?.expirationDateFormatted ?? '-'}</span>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderDueDate()}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { ClickOnceButton } from '../../common';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankDeleteDialog: React.FC<Props> = (props: Props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleDeleteAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.deleteRequest(props.item.address)\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm deletion</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"secondary\" callbackFn={handleDeleteAsync} autoFocus={true}>\r\n            Delete\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText, makeStyles, TextField } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\nimport { ClickOnceButton } from '../../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%'\r\n  },\r\n  durationInput: {\r\n    float: 'right'\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankStakeDialog: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [amount, setAmount] = useState<string>('');\r\n  const [duration, setDuration] = useState<string>('');\r\n\r\n  const handleStakeAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.stakeRequest(props.item.address, Number.parseInt(amount), Number.parseInt(duration))\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  // const handleInput = (value: string, callbackFn: React.Dispatch<React.SetStateAction<number>>) => {\r\n  //   if (Number.isInteger(value)) {\r\n  //     callbackFn(Number.parseInt(value))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm quota staking</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n          </List>\r\n          <form className={classes.form} autoComplete=\"off\">\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              value={amount}\r\n              inputProps={{ min: 1 }}\r\n              onChange={e => setAmount(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Duration (blocks)\"\r\n              type=\"number\"\r\n              className={classes.durationInput}\r\n              value={duration}\r\n              inputProps={{ min: 1 }}\r\n              onChange={e => setDuration(e.target.value)}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleStakeAsync} autoFocus={true}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\nimport { ClickOnceButton } from '../../common';\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankWithdrawDialog: React.FC<Props> = (props: Props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleWithdrawAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.withdrawRequest(props.item.address)\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm withdraw</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Amount\" secondary={props.item.amountFormatted} />\r\n            </ListItem>\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleWithdrawAsync} autoFocus={true}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Chip, IconButton, makeStyles, TableCell, TableRow, Tooltip } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { DialogType } from './dialogs';\r\nimport { IConnectedWeb3Context } from '../../hooks';\r\nimport { QuotaRequest } from '../../types';\r\nimport { commonUtil } from '../../util/commonUtil';\r\nimport { QuotaRequestDueDate } from '../quota_request';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { AppConstants } from '../../constants';\r\nimport { TruncateTooltip } from '../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n  stakeButton: {\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  context: IConnectedWeb3Context,\r\n  item: QuotaRequest,\r\n  handleClickOpenFn: (type: DialogType, item: QuotaRequest) => void\r\n}\r\n\r\nexport const BankQuotaRequest: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const emitter = props.context.provider.emitter\r\n\r\n  const [quotaRequest, setQuotaRequest] = useState<QuotaRequest>(props.item)\r\n\r\n  // console.log('render BankQuotaRequest', props.item.address)\r\n\r\n  useEffect(() => {\r\n    const handleNetworkBlockHeight = (height: string) => {\r\n      // Create new instance, otherwise setQuotaRequest has no effect\r\n      const newQuotaRequest = new QuotaRequest(quotaRequest)\r\n      newQuotaRequest.update(height)\r\n      if (!quotaRequest.equals(newQuotaRequest)) {\r\n        console.log('BankQuotaRequest changed', quotaRequest.address, height)\r\n        setQuotaRequest(newQuotaRequest)\r\n      }\r\n    }\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      if (quotaRequest.address === update.address) {\r\n        console.log('Handle QuotaRequestUpdated', update.address)\r\n        setQuotaRequest(update)\r\n      }\r\n    }\r\n    // console.log('BankQuotaRequest created', quotaRequest.address)\r\n    emitter.on(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    return () => {\r\n      // console.log('BankQuotaRequest disposed', quotaRequest.address)\r\n      emitter.off(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    };\r\n  }, [emitter, quotaRequest, setQuotaRequest]);\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 10, 5)\r\n  }\r\n\r\n  const isStaked = (item: QuotaRequest) => {\r\n    return item.amount && item.amount !== AppConstants.DefaultZeroString && !item.isExpired\r\n  }\r\n\r\n  const canStake = (item: QuotaRequest) => {\r\n    return commonUtil.isNullOrDefault(item.amount, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  const canDelete = (item: QuotaRequest) => {\r\n    return commonUtil.isNullOrDefault(item.amount, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  const canWithdraw = (item: QuotaRequest) => {\r\n    return item.amount && item.amount !== AppConstants.DefaultZeroString && item.isExpired\r\n  }\r\n\r\n  const showActions = () => {\r\n    return props.context.provider.networkStore.blockHeight !== AppConstants.InitialNetworkBlockHeight\r\n  }\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <Tooltip title={quotaRequest.address ?? \"\"} placement=\"top\" arrow interactive>\r\n          <Chip size=\"small\" label={truncateAddress(quotaRequest.address)} />\r\n        </Tooltip>\r\n      </TableCell>\r\n      <TableCell>\r\n        <TruncateTooltip value={quotaRequest.note} maxLength={24}></TruncateTooltip>\r\n      </TableCell>\r\n      <TableCell>\r\n        {quotaRequest.amountFormatted ?? \"-\"}\r\n      </TableCell>\r\n      <TableCell>\r\n        {quotaRequest.expirationHeight ?? \"-\"}\r\n      </TableCell>\r\n      <TableCell>\r\n        <QuotaRequestDueDate quotaRequest={quotaRequest}>\r\n        </QuotaRequestDueDate>\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        {showActions() && (\r\n          <div>\r\n            {canStake(quotaRequest) && (\r\n              <Button size=\"small\" variant=\"contained\" color=\"primary\" className={classes.stakeButton} onClick={() => { props.handleClickOpenFn(DialogType.Stake, quotaRequest) }}>\r\n                Stake\r\n              </Button>\r\n            )}\r\n            {isStaked(quotaRequest) && (\r\n              <Chip size=\"small\" label=\"Staked\" />\r\n            )}\r\n            {canWithdraw(quotaRequest) && (\r\n              <Button size=\"small\" variant=\"outlined\" onClick={() => { props.handleClickOpenFn(DialogType.Withdraw, quotaRequest) }}>Withdraw</Button>\r\n            )}\r\n            {canDelete(quotaRequest) && (\r\n              <IconButton aria-label=\"delete\" onClick={() => { props.handleClickOpenFn(DialogType.Delete, quotaRequest) }}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { BankQuotaRequest } from '.';\r\nimport { BankDeleteDialog, BankStakeDialog, BankWithdrawDialog, DialogType } from './dialogs';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { useConnectedWeb3Context, useQuotaRequests } from '../../hooks';\r\nimport { QuotaRequest } from '../../types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    marginBottom: 20\r\n  },\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n  stakeButton: {\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\nexport const BankQuotaRequestTable = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n  const emitter = context.provider.emitter\r\n\r\n  const { isLoading: isQuotaRequestsLoading, quotaRequests, fetchQuotaRequests, setQuotaRequests } = useQuotaRequests(context)\r\n\r\n  const [selectedItem, setSelectedItem] = React.useState(new QuotaRequest())\r\n  const [stakeDialogOpen, setStakeDialogOpen] = React.useState(false);\r\n  const [withdrawDialogOpen, setWithdrawDialogOpen] = React.useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false);\r\n\r\n  console.log('render BankQuotaRequestTable', context.provider.networkStore.blockHeight)\r\n\r\n  useEffect(() => {\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      console.log('Handle QuotaRequestUpdated', update.address)\r\n      const index = quotaRequests.findIndex(e => e.address === update.address)\r\n      if (index >= 0) {\r\n        // Replace existing request with update\r\n        const updatedQuotaRequests = [...quotaRequests]\r\n        updatedQuotaRequests[index] = update\r\n        setQuotaRequests(updatedQuotaRequests)\r\n      } else {\r\n        // Prepend update to existing requests\r\n        const newQuotaRequests = [update, ...quotaRequests]\r\n        setQuotaRequests(newQuotaRequests)\r\n      }\r\n    }\r\n    const handleDelete = (address: string) => {\r\n      console.log('Handle QuotaRequestDeleted', address)\r\n      const newQuotaRequests = quotaRequests.filter(e => e.address !== address)\r\n      if (newQuotaRequests.length < quotaRequests.length) {\r\n        setQuotaRequests(newQuotaRequests)\r\n      }\r\n    }\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    emitter.on(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    return () => {\r\n      console.log('AccountQuotaRequestTable disposed')\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n      emitter.off(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    };\r\n  }, [emitter, quotaRequests, setQuotaRequests])\r\n\r\n  const refreshQuotaRequests = () => {\r\n    fetchQuotaRequests(true)\r\n  }\r\n\r\n  const handleClickOpen = (type: DialogType, item: QuotaRequest) => {\r\n    setSelectedItem(item)\r\n    switch (type) {\r\n      case DialogType.Stake:\r\n        setStakeDialogOpen(true);\r\n        break;\r\n      case DialogType.Withdraw:\r\n        setWithdrawDialogOpen(true);\r\n        break;\r\n      case DialogType.Delete:\r\n        setDeleteDialogOpen(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setStakeDialogOpen(false);\r\n    setWithdrawDialogOpen(false);\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>\r\n        Bank Quota Requests\r\n        <IconButton className={classes.refreshButton} aria-label=\"refresh\" onClick={refreshQuotaRequests}>\r\n          <RefreshIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Typography>\r\n      {isQuotaRequestsLoading ? (\r\n        <Typography variant=\"caption\">Loading...</Typography>\r\n      ) : (\r\n        <Paper>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Address\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Note\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Amount\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Expected Snapshot Height\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Expected Due Date\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    Action\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {quotaRequests\r\n                  && quotaRequests.length > 0\r\n                  && quotaRequests.map(item => {\r\n                    return <BankQuotaRequest key={item.address} context={context} item={item} handleClickOpenFn={handleClickOpen}></BankQuotaRequest>\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n      <BankDeleteDialog item={selectedItem} bank={context.provider.bank} open={deleteDialogOpen} closeFn={handleClose}></BankDeleteDialog>\r\n      <BankStakeDialog item={selectedItem} bank={context.provider.bank} open={stakeDialogOpen} closeFn={handleClose}></BankStakeDialog>\r\n      <BankWithdrawDialog item={selectedItem} bank={context.provider.bank} open={withdrawDialogOpen} closeFn={handleClose}></BankWithdrawDialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { QuotaRequest } from '../types'\r\n\r\nexport const useQuotaRequests = (context: IConnectedWeb3Context) => {\r\n  const initialValue: QuotaRequest[] = []\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [quotaRequests, setQuotaRequests] = useState(initialValue)\r\n\r\n  const fetchQuotaRequests = async (force: boolean = false) => {\r\n    setIsLoading(true)\r\n    console.log('fetchQuotaRequests')\r\n    setQuotaRequests([])\r\n    try {\r\n      // TODO: apply pagination\r\n      const addresses = await context.provider.bank.getRequests()\r\n      const tempQuotaRequests: QuotaRequest[] = []\r\n      // TODO: replace loop once supported by smart contracts\r\n      // For now the getter function can only return primitive types. Structs and arrays are not allowed.\r\n      for (let index = 0; index < addresses.length; index++) {\r\n        const address = addresses[index];\r\n        try {\r\n          const quotaRequestResult = await context.provider.bank.getRequestByAddress(address)\r\n          tempQuotaRequests.unshift(quotaRequestResult)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      setQuotaRequests(tempQuotaRequests)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setQuotaRequests(initialValue)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useQuotaRequests')\r\n    fetchQuotaRequests(true)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    isLoading,\r\n    quotaRequests,\r\n    fetchQuotaRequests,\r\n    setQuotaRequests\r\n  }\r\n}","import { useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { AddressSummaryTable, ConfirmTransactionDialog, Footer, HeaderConnected, Logo, MainScroll, MainWrapper } from './common'\r\nimport { NetworkCard } from './network'\r\nimport { AccountQuotaRequestTable, CreateQuotaRequest } from './quota_request'\r\nimport { BankQuotaRequestTable } from './quota_request_list'\r\nimport { useConnectedWeb3Context } from '../hooks'\r\nimport { AppConstants } from '../constants'\r\n\r\nexport const Main: React.FC = (props: any) => {\r\n  const context = useConnectedWeb3Context()\r\n\r\n  useEffect(() => {\r\n    async function getOwnerAsync() {\r\n      const owner = await context.provider.bank.getOwnerAsync()\r\n      console.log('Bank owner:', owner)\r\n    }\r\n    getOwnerAsync()\r\n  }, [context])\r\n\r\n  return (\r\n    <>\r\n      <MainWrapper>\r\n        <HeaderConnected />\r\n        <MainScroll>\r\n          <Logo></Logo>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <AddressSummaryTable title=\"My Account\" address={context.account}></AddressSummaryTable>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <NetworkCard></NetworkCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <AddressSummaryTable title=\"Bank\" address={AppConstants.BankContractAddress}></AddressSummaryTable>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CreateQuotaRequest></CreateQuotaRequest>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <AccountQuotaRequestTable></AccountQuotaRequestTable>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <BankQuotaRequestTable></BankQuotaRequestTable>\r\n            </Grid>\r\n          </Grid>\r\n          <ConfirmTransactionDialog></ConfirmTransactionDialog>\r\n        </MainScroll>\r\n        <Footer />\r\n      </MainWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { SnackbarProvider } from 'notistack';\r\nimport React from 'react';\r\nimport { Main } from './components';\r\nimport { ConnectedWeb3 } from './hooks';\r\nimport { Web3Provider } from './hooks/web3';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <Web3Provider>\r\n        <ConnectedWeb3>\r\n          <Main />\r\n        </ConnectedWeb3>\r\n      </Web3Provider>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\n// https://arth3rs0ng.medium.com/mui-styled-components-and-inspiration-cceab14bec96\r\nexport const theme = createMuiTheme();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './common/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import moment from 'moment';\r\n\r\nexport class momentUtil {\r\n  constructor() {\r\n    moment.locale(navigator.language);\r\n  }\r\n\r\n  public setLocale(language: string): void {\r\n    moment.locale(language);\r\n  }\r\n\r\n  public get(): moment.Moment {\r\n    return moment()\r\n  }\r\n\r\n  public getFromUnix(date: number) {\r\n    return moment.unix(date);\r\n  }\r\n\r\n  public getLocal(date: any): moment.Moment {\r\n    return moment.utc(date).local();\r\n  }\r\n\r\n  public getLocalTime(date: any): string {\r\n    return this.getLocal(date).format('LTS');\r\n  }\r\n\r\n  public getLocalDate(date: any): string {\r\n    return this.getLocal(date).format('L');\r\n  }\r\n\r\n  public getLocalFormatted(date: any): string {\r\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\r\n  }\r\n\r\n  public getLocalReverseFormatted(date: any): string {\r\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\r\n  }\r\n}","import { AppConstants } from './constants';\r\nimport { QuotaRequest } from './types';\r\nimport { bigNumber } from './util/bigNumber';\r\nimport { commonUtil } from './util/commonUtil';\r\nimport { momentUtil } from './util/momentUtil';\r\n\r\nexport class QuotaRequestExtensions {\r\n  private static instance: QuotaRequestExtensions\r\n  private moment: momentUtil\r\n\r\n  private constructor() {\r\n    this.moment = new momentUtil()\r\n  }\r\n\r\n  public static getInstance(): QuotaRequestExtensions {\r\n    if (!QuotaRequestExtensions.instance) {\r\n      QuotaRequestExtensions.instance = new QuotaRequestExtensions()\r\n    }\r\n\r\n    return QuotaRequestExtensions.instance\r\n  }\r\n\r\n  update(quotaRequet?: QuotaRequest, blockHeight?: string): void {\r\n    if (quotaRequet?.expirationHeight) {\r\n      quotaRequet.isExpired = commonUtil.isExpired(quotaRequet.expirationHeight, blockHeight)\r\n      if (!quotaRequet.expirationDate && blockHeight && blockHeight !== AppConstants.InitialNetworkBlockHeight) {\r\n        const secondsDiff = Number.parseInt(bigNumber.minus(quotaRequet.expirationHeight, blockHeight))\r\n        quotaRequet.expirationDate = this.moment.get().add(secondsDiff, 's').toDate()\r\n        quotaRequet.expirationDateFormatted = this.moment.getLocalReverseFormatted(quotaRequet.expirationDate)\r\n      }\r\n      quotaRequet.status = \"Unknown\"\r\n      if (quotaRequet.isExpired) {\r\n        quotaRequet.status = \"Expired\"\r\n      } else {\r\n        if (quotaRequet.amount) {\r\n          quotaRequet.status = \"Active\"\r\n        } else {\r\n          quotaRequet.status = \"Pending\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { AppConstants } from './constants'\r\nimport { QuotaRequestExtensions } from './type-extensions'\r\nimport { formatUtil } from './util/formatUtil'\r\n\r\nexport class Contract {\r\n  address!: string\r\n  contractName!: string\r\n  binary!: string\r\n  offChain!: string\r\n  abi!: any[]\r\n\r\n  constructor(init?: Partial<Contract>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.contractName = data.contractName\r\n      this.binary = data.binary\r\n      this.offChain = data.offChain\r\n      this.abi = data.abi\r\n    }\r\n  }\r\n}\r\n\r\nexport class Balance {\r\n  amount: string = AppConstants.DefaultZeroString\r\n  amountFormatted: string = AppConstants.DefaultZeroString\r\n\r\n  constructor(init?: Partial<Balance>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data?.balanceInfoMap) {\r\n      const vite = data.balanceInfoMap[AppConstants.ViteTokenId]\r\n      this.amount = vite.balance\r\n      this.amountFormatted = formatUtil.formatAmount(vite.balance)\r\n    }\r\n  }\r\n}\r\n\r\nexport class Network {\r\n  id?: number\r\n  networkId?: number\r\n  name?: string\r\n  rpcUrl?: string\r\n  connectorUrl?: string\r\n  mock: boolean = false\r\n\r\n  constructor(init?: Partial<Network>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id\r\n      this.networkId = data.networkId\r\n      this.name = data.name\r\n      this.rpcUrl = data.rpcUrl\r\n      this.connectorUrl = data.connectorUrl\r\n      this.mock = data.mock ?? false\r\n    }\r\n  }\r\n}\r\n\r\nexport class Quota {\r\n  currentQuota: string = AppConstants.DefaultZeroString\r\n  currentQuotaFormatted: string = AppConstants.DefaultZeroString\r\n  maxQuota: string = AppConstants.DefaultZeroString\r\n  maxQuotaFormatted: string = AppConstants.DefaultZeroString\r\n  stakeAmount: string = AppConstants.DefaultZeroString\r\n  stakeAmountFormatted: string = AppConstants.DefaultZeroString\r\n\r\n  constructor(init?: Partial<Quota>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.currentQuota = data.currentQuota\r\n      this.currentQuotaFormatted = formatUtil.formatQuota(data.currentQuota)\r\n      this.maxQuota = data.maxQuota\r\n      this.maxQuotaFormatted = formatUtil.formatQuota(data.maxQuota)\r\n      this.stakeAmount = data.stakeAmount\r\n      this.stakeAmountFormatted = formatUtil.formatAmount(data.stakeAmount)\r\n    }\r\n  }\r\n}\r\n\r\nexport class QuotaRequest {\r\n  address?: string\r\n  note?: string\r\n  amount?: string\r\n  amountFormatted?: string\r\n  expirationHeight?: string\r\n  expirationDate?: Date\r\n  expirationDateFormatted?: string\r\n  isExpired: boolean = false\r\n  status?: string\r\n\r\n  static readonly updater: QuotaRequestExtensions = QuotaRequestExtensions.getInstance()\r\n\r\n  constructor(init?: Partial<QuotaRequest>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.address = data.address\r\n      this.note = data.note\r\n      this.amount = data.amount\r\n      this.amountFormatted = formatUtil.formatAmount(data.amount)\r\n      this.expirationHeight = data.expirationHeight\r\n      this.expirationDate = data.expirationDate\r\n      this.expirationDateFormatted = data.expirationDateFormatted\r\n      this.isExpired = data.isExpired\r\n      this.status = data.status\r\n    }\r\n  }\r\n\r\n  update(height: string): void {\r\n    QuotaRequest.updater.update(this, height)\r\n  }\r\n\r\n  equals(other: QuotaRequest): boolean {\r\n    return this.address === other.address\r\n      && this.note === other.note\r\n      && this.amount === other.amount\r\n      && this.amountFormatted === other.amountFormatted\r\n      && this.expirationHeight === other.expirationHeight\r\n      // && this.expirationDate === other.expirationDate\r\n      && this.expirationDateFormatted === other.expirationDateFormatted\r\n      && this.isExpired === other.isExpired\r\n      && this.status === other.status;\r\n  }\r\n}\r\n\r\nexport interface IVmLog {\r\n  event: string\r\n  topic: string\r\n  args: any\r\n}\r\n\r\nexport enum VmLogEvent {\r\n  RequestCreated = 'RequestCreated',\r\n  RequestDeleted = 'RequestDeleted'\r\n}","import { bigNumber } from './bigNumber';\r\n\r\nexport abstract class commonUtil {\r\n  static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  static isNullOrWhitespace(value?: string): boolean {\r\n    if (!commonUtil.isString(value)) {\r\n      // console.log('Expected a string but got: ', value);\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\r\n    return commonUtil.isNullOrWhitespace(value) || value === defaultValue\r\n  }\r\n\r\n  static isExpired(expirationHeight?: string, blockHeight?: string): boolean {\r\n    if (expirationHeight && blockHeight) {\r\n      return bigNumber.compared(blockHeight, expirationHeight) === 1\r\n    }\r\n    return false\r\n  }\r\n\r\n  static timeout(ms: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\r\n    if (str) {\r\n      if (maxLength < str.length) {\r\n        return `${str.substr(0, maxLength)}...`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\r\n    if (str) {\r\n      const minTruncatedLength = strPositionStart + strPositionEnd\r\n      if (minTruncatedLength < str.length) {\r\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n}","import { AppConstants } from '../constants';\r\nimport { bigNumber } from './bigNumber';\r\nimport { commonUtil } from './commonUtil';\r\n\r\nexport abstract class formatUtil {\r\n  static formatQuota(quota: string): string {\r\n    try {\r\n      const result = bigNumber.toBasic(Number.parseInt(quota) / AppConstants.QuotaPerUT, 0, 3)\r\n      return commonUtil.isNullOrWhitespace(result) ? undefined : result;\r\n    } catch (error) {\r\n      return \"-1\"\r\n    }\r\n  }\r\n\r\n  static formatAmount(amount: string): string {\r\n    try {\r\n      const result = bigNumber.toBasic(Number.parseInt(amount), AppConstants.DefaultDecimals);\r\n      return commonUtil.isNullOrWhitespace(result) ? undefined : result;\r\n    } catch (error) {\r\n      return \"-1\"\r\n    }\r\n  }\r\n\r\n  static formatSnackbarMessage(data: any): string {\r\n    if (data) {\r\n      console.log(data)\r\n      let message: string\r\n      if (!commonUtil.isString(data)) {\r\n        if (data.message) {\r\n          message = data.message\r\n        }\r\n        else if (data.error?.message) {\r\n          message = data.error.message\r\n        } else {\r\n          message = JSON.stringify(data)\r\n        }\r\n      } else {\r\n        message = data\r\n      }\r\n      if (message.length > 128) {\r\n        return message.substr(0, 128) + \"...\"\r\n      }\r\n      return message\r\n    }\r\n    return \"Something went wrong.\"\r\n  }\r\n}","import BigNumber from 'bignumber.js';\r\n\r\nconst groupFormat = {\r\n  decimalSeparator: '.',\r\n  groupSeparator: ',',\r\n  groupSize: 3,\r\n  secondaryGroupSize: 0,\r\n  fractionGroupSeparator: ' ',\r\n  fractionGroupSize: 0\r\n};\r\nconst normalFormat = {\r\n  decimalSeparator: '.',\r\n  groupSeparator: '',\r\n  groupSize: 0,\r\n  secondaryGroupSize: 0,\r\n  fractionGroupSeparator: '',\r\n  fractionGroupSize: 0\r\n};\r\n\r\nconst normalConfig = {\r\n  FORMAT: normalFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN\r\n};\r\n\r\nconst groupConfig = {\r\n  FORMAT: groupFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN\r\n};\r\n\r\nconst ceilConfig = {\r\n  FORMAT: normalFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\r\n};\r\n\r\nBigNumber.config(normalConfig);\r\nconst GroupBigNumber = BigNumber.clone(groupConfig);\r\nconst CeilBigNumber = BigNumber.clone(ceilConfig);\r\n\r\nconst DP = 8;\r\n\r\nexport abstract class bigNumber {\r\n  static compared(x: any, y: any) {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    return x.comparedTo(y);\r\n  }\r\n  static isEqual(num1: any, num2: any) {\r\n    num1 = new BigNumber(num1);\r\n    num2 = new BigNumber(num2);\r\n    return num1.isEqualTo(num2);\r\n  }\r\n  static minus(x: any, y: any, fix = 8, type = 'fix') {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    const result = x.minus(y);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static plus(x: any, y: any, fix = 8, type = 'fix') {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    const result = x.plus(y);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static multi(x: any, y: any, fix = 8) {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    return x.multipliedBy(y).toFormat(fix);\r\n  }\r\n  static dividedToNumber(num1: any, num2: any, fix = 0, type = 'fix') {\r\n    num1 = new BigNumber(num1);\r\n    num2 = new BigNumber(num2);\r\n    if (fix === 0) {\r\n      return num1.dividedBy(num2).integerValue().toString();\r\n    }\r\n\r\n    const result = num1.dividedBy(num2);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static dividedCeil(num1: any, num2: any, fix = 0) {\r\n    num1 = new CeilBigNumber(num1);\r\n    num2 = new CeilBigNumber(num2);\r\n    const result = num1.dividedBy(num2);\r\n    return result.toFormat(fix);\r\n  }\r\n  static toBasic(num: any, minUnit = 0, decimalPlaces = DP) {\r\n    const min = new BigNumber(10).exponentiatedBy(minUnit);\r\n    num = new BigNumber(num);\r\n    if (num.c === null) {\r\n      return '';\r\n    }\r\n\r\n    try {\r\n      return num.dividedBy(min).decimalPlaces(decimalPlaces, 1).toFormat();\r\n    } catch (err) {\r\n      return '';\r\n    }\r\n  }\r\n  static exponentiated(num: any, unit: any, offset = 0) {\r\n    const number = new BigNumber(num).exponentiatedBy(unit);\r\n    const offsetNum = new BigNumber(offset);\r\n    const result = number.plus(offsetNum);\r\n    return result.toFormat();\r\n  }\r\n  static toMin(num: any, minUnit: any) {\r\n    const min = new BigNumber(10).exponentiatedBy(minUnit);\r\n    num = new BigNumber(num);\r\n    if (num.c === null) {\r\n      return '';\r\n    }\r\n\r\n    try {\r\n      return num.multipliedBy(min).toFormat();\r\n    } catch (err) {\r\n      return '';\r\n    }\r\n  }\r\n  static formatNum(num: any, decimal = 8, fix = 8) {\r\n    decimal = decimal >= fix ? fix : decimal;\r\n    const n = new GroupBigNumber(num);\r\n    return n.toFormat(decimal);\r\n  }\r\n  static normalFormatNum(num: any, decimal = 8, fix = 8) {\r\n    decimal = decimal >= fix ? fix : decimal;\r\n    const n = new BigNumber(num);\r\n    return n.toFormat(decimal);\r\n  }\r\n  static onlyFormat(num: any, minDecimals: any) {\r\n    const n = new GroupBigNumber(num);\r\n    let formatN = n.toFormat();\r\n\r\n    if (typeof minDecimals === 'undefined') {\r\n      return formatN;\r\n    }\r\n\r\n    const afterPoint = formatN.split('.')[1] || '';\r\n    if (afterPoint.length >= minDecimals) {\r\n      return formatN;\r\n    }\r\n\r\n    if (!afterPoint.length) {\r\n      formatN += '.';\r\n    }\r\n    for (let i = 0; i < minDecimals - afterPoint.length; i++) {\r\n      formatN += '0';\r\n    }\r\n    return formatN;\r\n  }\r\n};\r\n","export enum WalletType {\r\n  Web = 'Web',\r\n  Session = 'Session'\r\n}\r\n\r\nexport abstract class Wallet<T> {\r\n  private readonly _type: WalletType\r\n\r\n  active?: T\r\n  accounts: T[] = []\r\n\r\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\r\n    this._type = type\r\n    this.baseInitinit(init)\r\n  }\r\n\r\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\r\n    data = typeof data === 'object' ? data : {}\r\n    switch (data._type) {\r\n      case WalletType.Web:\r\n        return new WebWallet(data)\r\n      case WalletType.Session:\r\n        return new SessionWallet(data)\r\n      default:\r\n        break\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  get type(): WalletType {\r\n    return this._type\r\n  }\r\n\r\n  protected abstract createAccount(data: any): T\r\n\r\n  private baseInitinit(data?: any): void {\r\n    if (data) {\r\n      this.active = data.active ? this.createAccount(data.active) : undefined\r\n      if (data.accounts && Array.isArray(data.accounts)) {\r\n        data.accounts.forEach((account: any) => {\r\n          this.accounts.push(this.createAccount(account))\r\n        })\r\n      }\r\n    }\r\n    if (!this.accounts) {\r\n      this.accounts = []\r\n    }\r\n  }\r\n}\r\n\r\nexport class WebWallet extends Wallet<WebWalletAccount> {\r\n  mnemonic!: string\r\n\r\n  constructor(init?: Partial<WebWallet>) {\r\n    super(WalletType.Web, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.mnemonic = data.mnemonic\r\n    }\r\n  }\r\n\r\n  protected createAccount(data: any): WebWalletAccount {\r\n    return new WebWalletAccount(data)\r\n  }\r\n}\r\n\r\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\r\n  session!: string\r\n  timestamp!: number\r\n\r\n  constructor(init?: Partial<SessionWallet>) {\r\n    super(WalletType.Session, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.session = data.session\r\n      this.timestamp = data.timestamp\r\n    }\r\n  }\r\n\r\n  protected createAccount(data: any): SessionWalletAccount {\r\n    return new SessionWalletAccount(data)\r\n  }\r\n}\r\n\r\nexport enum WalletAccountType {\r\n  Web = 'Web',\r\n  Session = 'Session'\r\n}\r\n\r\nexport abstract class WalletAccount {\r\n  private readonly _type: WalletAccountType\r\n\r\n  id!: string\r\n  address!: string\r\n\r\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\r\n    this._type = type\r\n    this.baseInit(init)\r\n  }\r\n\r\n  static fromJS(data: any): Maybe<WalletAccount> {\r\n    data = typeof data === 'object' ? data : {}\r\n    switch (data._type) {\r\n      case WalletType.Web:\r\n        return new WebWalletAccount(data)\r\n      case WalletType.Session:\r\n        return new SessionWalletAccount(data)\r\n      default:\r\n        break\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  get type(): WalletAccountType {\r\n    return this._type\r\n  }\r\n\r\n  private baseInit(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id\r\n      this.address = data.address\r\n    }\r\n  }\r\n}\r\n\r\nexport class WebWalletAccount extends WalletAccount {\r\n  privateKey!: string\r\n\r\n  constructor(init?: Partial<WebWalletAccount>) {\r\n    super(WalletAccountType.Web, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.privateKey = data.privateKey\r\n    }\r\n  }\r\n}\r\n\r\nexport class SessionWalletAccount extends WalletAccount {\r\n  constructor(init?: Partial<SessionWalletAccount>) {\r\n    super(WalletAccountType.Session, init)\r\n  }\r\n}","import Connector from '@vite/connector';\r\nimport { WalletManager } from '.';\r\nimport { SessionWallet, SessionWalletAccount } from './types';\r\n\r\nexport interface IWalletConnector {\r\n  readonly uri: string\r\n  sendTransactionAsync(...args: any): Promise<any>\r\n  signMessageAsync(...args: any): Promise<any>\r\n  killSessionAsync(): Promise<void>\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this\r\n}\r\n\r\nexport class WalletConnector extends Connector implements IWalletConnector {\r\n  private readonly _walletManager: WalletManager;\r\n\r\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\r\n    super(opts, meta);\r\n    this._walletManager = walletManager;\r\n    this.on('connect', (err: any, payload: any) => {\r\n      console.log('WalletConnector.connect', err, payload)\r\n      const { accounts } = payload.params[0];\r\n      this.saveSession(accounts);\r\n    });\r\n    this.on('disconnect', (err: any, payload: any) => {\r\n      console.log('WalletConnector.disconnect', err, payload)\r\n      this.stopBizHeartBeat()\r\n    });\r\n    this.on('session_update', (err: any, payload: any) => {\r\n      console.log('WalletConnector.session_update', err, payload)\r\n      const session = payload[0];\r\n      if (session && session.accounts) {\r\n        this.saveSession(session.accounts);\r\n      }\r\n    });\r\n  }\r\n\r\n  get uri(): string {\r\n    return super.uri\r\n  }\r\n\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\r\n    return super.on(event, listener)\r\n  }\r\n\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\r\n    return super.off(event, listener)\r\n  }\r\n\r\n  saveSession(accounts: string[]): void {\r\n    if (!accounts || !accounts[0]) {\r\n      throw new Error('address is null');\r\n    }\r\n    const sessionAccounts: SessionWalletAccount[] = []\r\n    for (let index = 0; index < accounts.length; index++) {\r\n      const address = accounts[index];\r\n      sessionAccounts.push(new SessionWalletAccount({\r\n        id: index.toString(),\r\n        address: address\r\n      }))\r\n    }\r\n    const wallet = new SessionWallet({\r\n      active: sessionAccounts[0],\r\n      accounts: sessionAccounts,\r\n      session: this.session,\r\n      timestamp: new Date().getTime()\r\n    })\r\n    this._walletManager.setWallet(wallet)\r\n  }\r\n\r\n  updateSession(): void {\r\n    const existing = this._walletManager.getWallet()\r\n    if (existing && existing instanceof SessionWallet) {\r\n      existing.timestamp = new Date().getTime()\r\n      this._walletManager.updateWalletStore(existing)\r\n    }\r\n  }\r\n\r\n  async createSession(): Promise<string> {\r\n    await super.createSession();\r\n    return this.uri;\r\n  }\r\n\r\n  async sendTransactionAsync(...args: any): Promise<any> {\r\n    return new Promise((res, rej) => {\r\n      this.on('disconnect', () => {\r\n        rej(\"Request aborted due to disconnect.\");\r\n      });\r\n\r\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\r\n        this.updateSession();\r\n        res(r);\r\n      }).catch((e: any) => {\r\n        rej(e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async signMessageAsync(...args: any): Promise<any> {\r\n    return new Promise((res, rej) => {\r\n      this.on('disconnect', () => {\r\n        rej(\"Request aborted due to disconnect.\");\r\n      });\r\n\r\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\r\n        this.updateSession();\r\n        res(r);\r\n      }).catch((e: any) => {\r\n        rej(e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async killSessionAsync(): Promise<any> {\r\n    await super.killSession();\r\n  }\r\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\r\nimport { Network } from '../types';\r\n\r\nexport class WalletConnectorFactory {\r\n  private readonly _walletManager: WalletManager\r\n\r\n  constructor(walletManager: WalletManager) {\r\n    this._walletManager = walletManager\r\n  }\r\n\r\n  create(network: Network): IWalletConnector {\r\n    const session = this._walletManager.getValidSession()\r\n    const account = this._walletManager.getActiveAccount()\r\n    const opts = {\r\n      bridge: network.connectorUrl,\r\n      session\r\n    }\r\n    const meta = account ? { lastAccount: account.address } : undefined\r\n    const connector = new WalletConnector(this._walletManager, opts, meta)\r\n\r\n    if (!session) {\r\n      connector.createSession().then(() => console.log('IWalletConnector connected', connector.uri))\r\n    }\r\n\r\n    return connector\r\n  }\r\n}","import { SessionWallet, Wallet, WebWallet } from '.';\r\nimport { AppConstants } from '../constants';\r\nimport { WalletType } from './types';\r\n\r\nexport class WalletStore {\r\n\r\n  private readonly _webWalletKey = AppConstants.WebWalletStorageSpace;\r\n  private readonly _sessionWalletKey = AppConstants.SessionWalletStorageSpace\r\n\r\n  clear(): void {\r\n    localStorage.removeItem(this._webWalletKey);\r\n    sessionStorage.removeItem(this._sessionWalletKey);\r\n  }\r\n\r\n  getItem(): Maybe<WebWallet | SessionWallet> {\r\n    let data;\r\n\r\n    try {\r\n      data = localStorage.getItem(this._webWalletKey);\r\n      if (!data) {\r\n        data = sessionStorage.getItem(this._sessionWalletKey);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      return undefined;\r\n    }\r\n\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n\r\n    try {\r\n      return Wallet.fromJS(JSON.parse(data));\r\n    } catch (err) {\r\n      console.log(err);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  setItem(data: WebWallet | SessionWallet): void {\r\n    const saveData = JSON.stringify(data);\r\n\r\n    try {\r\n      switch (data.type) {\r\n        case WalletType.Web:\r\n          localStorage.setItem(this._webWalletKey, saveData);\r\n          break;\r\n        case WalletType.Session:\r\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\r\n          break;\r\n        default:\r\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n}","import { wallet } from '@vite/vitejs';\r\nimport { EventEmitter } from 'events';\r\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\r\nimport { WalletStore } from './store';\r\n\r\nexport class WalletManager {\r\n  private readonly _emitter: EventEmitter;\r\n  private readonly _store: WalletStore;\r\n  private _wallet?: WebWallet | SessionWallet;\r\n  private _mnemonicDeriveIndex = 0;\r\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\r\n\r\n  constructor() {\r\n    this._emitter = new EventEmitter();\r\n    this._store = new WalletStore();\r\n    this.initWallet();\r\n  }\r\n\r\n  private initWallet(): void {\r\n    const wallet = this._store.getItem();\r\n    if (wallet) {\r\n      this._wallet = wallet;\r\n      this._mnemonicDeriveIndex = wallet.accounts.length;\r\n    }\r\n  }\r\n\r\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\r\n    this._setWalletCallback = cb;\r\n  }\r\n\r\n  getWallet(): Maybe<WebWallet | SessionWallet> {\r\n    return this._wallet;\r\n  }\r\n\r\n  setWallet(wallet?: WebWallet | SessionWallet): void {\r\n    this._wallet = wallet;\r\n    this.updateWalletStore(wallet)\r\n    this.updateWallet()\r\n  }\r\n\r\n  updateWallet(): void {\r\n    if (this._setWalletCallback) {\r\n      this._setWalletCallback(this._wallet);\r\n    }\r\n  }\r\n\r\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\r\n    if (wallet) {\r\n      this._store.setItem(wallet);\r\n    }\r\n  }\r\n\r\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\r\n    if (!this.validateMnemonic(mnemonic)) {\r\n      return undefined;\r\n    }\r\n    this.resetWallet();\r\n    const account = this.createWebWalletAccount(mnemonic, 0);\r\n    const wallet = new WebWallet({\r\n      active: account,\r\n      mnemonic,\r\n      accounts: [\r\n        account\r\n      ]\r\n    });\r\n    this.setWallet(wallet);\r\n    return wallet;\r\n  }\r\n\r\n  removeWallet(): void {\r\n    this.resetWallet();\r\n    this.updateWallet();\r\n  }\r\n\r\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\r\n    return this._wallet?.accounts?.find(e => e.address === address)\r\n  }\r\n\r\n  addAccount(): Maybe<WalletAccount> {\r\n    if (this._wallet instanceof WebWallet) {\r\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\r\n      this._wallet.accounts.push(account);\r\n      this.setActiveAccount(account);\r\n      return account;\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getActiveAccount(): Maybe<WalletAccount> {\r\n    return this._wallet?.active\r\n  }\r\n\r\n  setActiveAccount(account: WalletAccount): boolean {\r\n    if (this._wallet) {\r\n      this._wallet.active = account;\r\n      this._store.setItem(this._wallet);\r\n      this.updateWallet();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAccounts(): WalletAccount[] {\r\n    if (this._wallet) {\r\n      return this._wallet.accounts;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getValidSession(): Maybe<string> {\r\n    const wallet = this._store.getItem();\r\n    if (wallet && wallet instanceof SessionWallet) {\r\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\r\n        return wallet.session;\r\n      } else {\r\n        console.log('Found expired session.', wallet);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private resetWallet(): void {\r\n    this._wallet = undefined;\r\n    this._mnemonicDeriveIndex = 0;\r\n    this._store.clear();\r\n  }\r\n\r\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\r\n    const { privateKey } = wallet.deriveAddress({\r\n      mnemonics: mnemonic,\r\n      index\r\n    });\r\n    let account = new WebWalletAccount({\r\n      id: index.toString(),\r\n      privateKey,\r\n      address: wallet.createAddressByPrivateKey(privateKey).address\r\n    });\r\n    this._mnemonicDeriveIndex = index + 1;\r\n    return account;\r\n  }\r\n\r\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\r\n    if (mnemonic) {\r\n      return wallet.validateMnemonics(mnemonic);\r\n    }\r\n    return false;\r\n  }\r\n}","import { abi as abiutils, accountBlock, utils, ViteAPI } from '@vite/vitejs';\r\nimport { IGlobalEmitter } from '../emitters';\r\nimport { Balance, IVmLog, Network, Quota } from '../types';\r\nimport { Task } from '../util/task';\r\nimport { IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WebWalletAccount } from '../wallet';\r\nconst { WS_RPC } = require('@vite/vitejs-ws');\r\n\r\nconst providerTimeout = 60000;\r\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\r\n\r\nexport interface IViteClient {\r\n  readonly isConnected: boolean\r\n  readonly connector: Maybe<IWalletConnector>\r\n  initAsync(network: Network): Promise<void>\r\n  dispose(): void\r\n  getSnapshotChainHeightAsync(): Promise<string>\r\n  getBalanceByAccount(address: string): Promise<Balance>\r\n  getQuotaByAccount(address: string): Promise<Quota>\r\n  callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, amount: string, toAddress: string): Promise<any>\r\n  callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any>\r\n  decodeVmLog(vmLog: any, abi: any): Maybe<IVmLog>\r\n  createAddressListenerAsync(address: string): Promise<any>\r\n  removeListener(event: any): void\r\n  waitForAccountBlockAsync(address: string, height: string): Promise<any>\r\n}\r\n\r\nexport class ViteClient implements IViteClient {\r\n  private readonly _emitter: IGlobalEmitter;\r\n  private readonly _factory: WalletConnectorFactory;\r\n  private _connector?: IWalletConnector;\r\n  private _provider?: any;\r\n  private _client?: any;\r\n  private _isConnected = false;\r\n\r\n  constructor(emitter: IGlobalEmitter, factory: WalletConnectorFactory) {\r\n    this._emitter = emitter;\r\n    this._factory = factory;\r\n  }\r\n\r\n  get isConnected(): boolean {\r\n    return this._isConnected;\r\n  }\r\n\r\n  get connector(): Maybe<IWalletConnector> {\r\n    return this._connector\r\n  }\r\n\r\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\r\n    this._isConnected = false;\r\n    if (this._provider) {\r\n      this._provider.destroy();\r\n    }\r\n    this._connector = this._factory.create(network)\r\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\r\n    let isResolved = false;\r\n    this._provider.on('error', (err: any) => {\r\n      console.log(err);\r\n      if (isResolved) return;\r\n      reject(err);\r\n      this._isConnected = false;\r\n    });\r\n    this._client = new ViteAPI(this._provider, () => {\r\n      this._isConnected = true;\r\n      console.log(`ViteAPI connected to ${this._provider.path}`);\r\n      isResolved = true;\r\n      resolve();\r\n    });\r\n  });\r\n\r\n  initConnectorAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\r\n\r\n  });\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing ViteClient\");\r\n    this._provider?.disconnect();\r\n    this._isConnected = false;\r\n  }\r\n\r\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\r\n    if (this._isConnected && this._client) {\r\n      return this._client.request(method, ...args);\r\n    } else {\r\n      return Promise.reject('Vite client is not ready to make requests.');\r\n    }\r\n  }\r\n\r\n  async getSnapshotChainHeightAsync(): Promise<string> {\r\n    return this.requestAsync('ledger_getSnapshotChainHeight');\r\n  }\r\n\r\n  async getBalanceByAccount(address: string): Promise<Balance> {\r\n    const result = await this.requestAsync(\"ledger_getAccountInfoByAddress\", address);\r\n    return new Balance(result);\r\n  }\r\n\r\n  async getQuotaByAccount(address: string): Promise<Quota> {\r\n    const result = await this.requestAsync(\"contract_getQuotaByAccount\", address);\r\n    return new Quota(result);\r\n  }\r\n\r\n  async callContractAsync(\r\n    account: WalletAccount, methodName: string, abi: any, params: any, amount: string, toAddress: string\r\n  ): Promise<any> {\r\n    let block = accountBlock\r\n      .createAccountBlock(\"callContract\", {\r\n        address: account.address,\r\n        abi,\r\n        methodName,\r\n        amount,\r\n        toAddress,\r\n        params,\r\n      })\r\n\r\n    if (account instanceof WebWalletAccount) {\r\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\r\n      await block.autoSetPreviousAccountBlock();\r\n      const result = await block.sign().send();\r\n      return result;\r\n    } else if (account instanceof SessionWalletAccount) {\r\n      if (this.connector) {\r\n        this._emitter.emitConfirmTransactionDialog(true);\r\n        try {\r\n          const result = await this.connector.sendTransactionAsync({\r\n            block: block.accountBlock\r\n          });\r\n          this._emitter.emitConfirmTransactionDialog(false);\r\n          return result;\r\n        } catch (error) {\r\n          this._emitter.emitConfirmTransactionDialog(false);\r\n          throw error\r\n        }\r\n      } else {\r\n        throw new Error(\"Connector is not defined\");\r\n      }\r\n    } else {\r\n      throw new Error(\"Account not supported\");\r\n    }\r\n  }\r\n\r\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\r\n    let data = abiutils.encodeFunctionCall(abi, params);\r\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\r\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\r\n      selfAddr: contractAddress,\r\n      offChainCode: offchaincode,\r\n      data: dataBase64,\r\n    });\r\n    if (result) {\r\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\r\n      let outputs = [];\r\n      for (let i = 0; i < abi.outputs.length; i++) {\r\n        outputs.push(abi.outputs[i].type);\r\n      }\r\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\r\n      let resultList = [];\r\n      if (offchainDecodeResult) {\r\n        for (let i = 0; i < abi.outputs.length; i++) {\r\n          if (abi.outputs[i].name) {\r\n            resultList.push({\r\n              name: abi.outputs[i].name,\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          } else {\r\n            resultList.push({\r\n              name: \"\",\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          }\r\n        }\r\n      }\r\n      return resultList;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  decodeVmLog(vmLog: any, abi: any): Maybe<IVmLog> {\r\n    let topics = vmLog.topics;\r\n    for (let j = 0; j < abi.length; j++) {\r\n      let abiItem = abi[j];\r\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\r\n        if (vmLog.data) {\r\n          let log = {\r\n            topic: topics[0],\r\n            args: abiutils.decodeLog(\r\n              abiItem.inputs,\r\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\r\n              topics.slice(1)\r\n            ),\r\n            event: abiItem.name,\r\n          };\r\n          return log;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async createAddressListenerAsync(address: string): Promise<any> {\r\n    const payload = {\r\n      addressHeightRange: {\r\n        placeholder: {\r\n          fromHeight: \"0\",\r\n          toHeight: \"0\",\r\n        },\r\n      },\r\n    };\r\n    let tempPayload = JSON.stringify(payload);\r\n    tempPayload = tempPayload.replace(\"placeholder\", address);\r\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\r\n    return result;\r\n  }\r\n\r\n  removeListener(event: any): void {\r\n    this._client?.unsubscribe(event);\r\n  }\r\n\r\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let result: any = undefined;\r\n      let error: any = undefined;\r\n      const task = new Task(async () => {\r\n        try {\r\n          let blockByHeight = await this.requestAsync(\r\n            'ledger_getAccountBlockByHeight',\r\n            address,\r\n            height\r\n          );\r\n\r\n          if (!blockByHeight) {\r\n            return true;\r\n          }\r\n\r\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\r\n          if (!receiveBlockHash) {\r\n            return true;\r\n          }\r\n\r\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\r\n          if (!blockByHash) {\r\n            return true;\r\n          }\r\n\r\n          result = {\r\n            ...this.getAccountBlockStatus(blockByHash),\r\n            accountBlock: blockByHash\r\n          }\r\n\r\n          return false;\r\n        } catch (err) {\r\n          error = err\r\n          return false;\r\n        }\r\n      }, 500);\r\n      task.start(() => {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private getAccountBlockStatus(accountBlock: any) {\r\n    let status = this.resolveAccountBlockData(accountBlock);\r\n    let statusTxt = '';\r\n    switch (status) {\r\n      case 0:\r\n        statusTxt = '0, Execution succeed';\r\n        break;\r\n      case 1:\r\n        statusTxt = '1, Execution reverted';\r\n        break;\r\n      case 2:\r\n        statusTxt = '2, Max call depth exceeded';\r\n        break;\r\n    }\r\n    return {\r\n      status,\r\n      statusTxt\r\n    };\r\n  }\r\n\r\n  private resolveAccountBlockData(accountBlock: any) {\r\n    if (\r\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\r\n      !accountBlock.data\r\n    ) {\r\n      return 0;\r\n    }\r\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\r\n\r\n    if (bytes.length !== 33) {\r\n      return 0;\r\n    }\r\n    return bytes[32];\r\n  }\r\n}"],"sourceRoot":""}