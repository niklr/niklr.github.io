{"version":3,"sources":["util/task.ts","constants.ts","emitters/types.ts","clients/viteMock.ts","emitters/globalEmitter.ts","util/ensure.ts","util/fileUtil.ts","hooks/web3Manager.tsx","services/bank.ts","services/bankMock.ts","stores/network.ts","providers/serviceProvider.ts","hooks/connectedWeb3.tsx","components/MainLoading.tsx","hooks/useAccountQuota.tsx","wallet/store.ts","wallet/manager.ts","wallet/types.ts","components/quota_request_list/dialogs/types.ts","hooks/web3.tsx","components/common/AddressSummaryTable.tsx","hooks/useAccountBalance.tsx","components/common/ClickOnceButton.tsx","components/common/layout/Footer.tsx","components/account/AccountList.tsx","components/account/LoginModal.tsx","components/network/NetworkCard.tsx","components/account/QuotaCard.tsx","hooks/useBlockHeight.tsx","components/network/NetworkList.tsx","components/common/layout/Header.tsx","components/common/layout/MainScroll.tsx","components/common/layout/MainWrapper.tsx","components/common/TruncateTooltip.tsx","components/quota_request/AccountQuotaRequestTable.tsx","components/quota_request/CreateQuotaRequest.tsx","components/quota_request/QuotaRequestDueDate.tsx","components/quota_request_list/dialogs/BankDeleteDialog.tsx","components/quota_request_list/dialogs/BankStakeDialog.tsx","components/quota_request_list/dialogs/BankWithdrawDialog.tsx","components/quota_request_list/BankQuotaRequest.tsx","components/quota_request_list/BankQuotaRequestTable.tsx","hooks/useQuotaRequests.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","common/theme.ts","index.tsx","util/momentUtil.ts","type-extensions.ts","types.ts","util/commonUtil.ts","util/formatUtil.ts","util/bigNumber.ts","clients/vite.ts"],"names":["Task","task","interval","_taskTimer","_taskInterval","_task","_callback","this","setTimeout","a","_onStop","_run","callback","window","clearTimeout","undefined","AppConstants","QuotaPerUT","DefaultDecimals","DefaultZeroString","InitialNetworkBlockHeight","ViteTokenId","QuotaContractAddress","BankContractAddress","NetworkStorageSpace","WebWalletStorageSpace","DefaultMnemonic","GlobalEvent","ViteMockClient","ViteClient","GlobalEmitter","height","emit","NetworkBlockHeight","update","QuotaRequestUpdated","address","QuotaRequestDeleted","EventEmitter","Ensure","property","propertyName","Error","trim","fileUtil","_fileUtil","browserFileUtil","path","readFileAsync","instance","ActionType","fetch","response","text","BankService","vite","emitter","networkStore","walletManager","_vite","_emitter","_networkStore","_walletManager","_contract","_offchainMethods","Map","_listener","handleResponseAsync","Promise","resolve","reject","waitForAccountBlockAsync","then","result","status","statusTxt","objectFromEntries","entries","Object","fromEntries","map","entry","name","value","account","getActiveAccount","removeListener","removeAddressListener","getInstance","contract","Contract","JSON","parse","console","log","contractName","createAddressListenerAsync","on","results","abi","index","length","vmLog","decodeVmLog","vmlog","handleVmLogAsync","ensureContractExists","callOffChainMethodAsync","getOffchainMethodAbi","offChain","request","QuotaRequest","isEmptyRequest","blockHeight","note","ensureAccountExists","callContractAsync","amount","duration","has","get","find","e","type","set","commonUtil","isNullOrDefault","expirationHeight","event","VmLogEvent","RequestCreated","notNullOrWhiteSpace","args","addr","getRequestByAddress","emitQuotaRequestUpdated","RequestDeleted","emitQuotaRequestDeleted","quotaRequests","BankMockService","getRequests","flatMap","createRequest","newItem","push","stakeRequest","existing","bigNumber","toMin","updatedItem","withdrawRequest","deleteRequest","indexOf","splice","NetworkStore","_key","_blockHeight","_network","_defaultNetwork","_networks","Network","id","networkId","url","mock","emitNetworkBlockHeight","data","localStorage","getItem","err","error","defaultNetwork","parsedNetwork","setItem","stringify","removeItem","ServiceProvider","bank","network","dispose","ConnectedWeb3Context","React","createContext","useConnectedWeb3Context","context","useContext","ConnectedWeb3","props","useState","connection","setConnection","isConnected","setIsConnected","useWeb3Context","wallet","provider","useMemo","useEffect","active","initAsync","Header","Typography","Provider","children","useAccountQuota","Quota","quota","setQuota","fetchQuota","getQuotaByAccount","newQuota","WalletStore","Wallet","saveData","WalletManager","_store","_wallet","_mnemonicDeriveIndex","initWallet","accounts","mnemonic","removeWallet","validateMnemonic","createAccount","clear","setActiveAccount","deriveAddress","mnemonics","privateKey","Account","toString","createAddressByPrivateKey","validateMnemonics","init","Array","isArray","forEach","reducer","state","payload","UPDATE","ERROR","onError","DialogType","Web3Context","Web3Provider","useReducer","dispatch","setWallet","useCallback","setError","useWeb3Manager","getWallet","useStyles","makeStyles","theme","root","minWidth","color","palette","grey","subtitle","fontWeight","unit","fontSize","display","chip","margin","AddressSummaryTable","classes","Balance","balance","setBalance","fetchBalance","getBalanceByAccount","useAccountBalance","setInterval","clearInterval","Paper","TableContainer","Table","TableHead","TableRow","TableCell","title","className","align","colSpan","TableBody","amountFormatted","currentQuotaFormatted","maxQuotaFormatted","stakeAmountFormatted","Tooltip","placement","arrow","interactive","Chip","size","label","truncateStringInTheMiddle","ClickOnceButton","isDisabled","setIsDisabled","handleClick","callbackFn","Button","variant","onClick","disabled","autoFocus","Root","styled","div","paddingBottomSmall","Footer","process","createStyles","formControl","spacing","borderColor","common","white","selectEmpty","marginTop","AccountList","IconButton","aria-label","addAccount","Icon","style","FormControl","InputLabel","Select","labelId","onChange","target","getAccountByAddress","MenuItem","modal","alignItems","justifyContent","paper","backgroundColor","background","border","boxShadow","shadows","padding","warning","textAlign","LoginModal","open","setOpen","setMnemonic","enqueueSnackbar","useSnackbar","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","hidden","TextField","placeholder","fullWidth","newMnemonic","createWallet","minHeight","marginLeft","marginBottom","NetworkCard","setBlockHeight","blockHeightSubject","Subject","fetchBlockHeight","getSnapshotChainHeightAsync","newBlockHeight","next","useBlockHeight","Card","CardContent","component","NetworkList","networks","setNetwork","selectedNetwork","location","reload","TitleTypography","AppBar","position","Toolbar","src","alt","width","MainScrollStyled","MainScrollInner","MainScroll","restProps","Container","maxWidth","MainWrapperStyled","MainWrapper","TruncateTooltip","defaultValue","maxLength","truncateValue","truncateString","renderTooltip","refreshButton","float","AccountQuotaRequestTable","quotaRequest","setQuotaRequest","updateQuotaRequest","handleUpdate","handleDelete","off","handleNetworkBlockHeight","newQuotaRequest","equals","noteInput","flexGrow","marginRight","CreateQuotaRequest","requestNote","setRequestNote","handleConfirmAsync","formatUtil","formatSnackbarMessage","handleClose","noValidate","autoComplete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","QuotaRequestDueDate","isExpired","expirationDateFormatted","renderDueDate","BankDeleteDialog","handleDeleteAsync","item","closeFn","List","ListItem","ListItemText","primary","secondary","form","durationInput","BankStakeDialog","setAmount","setDuration","handleStakeAsync","Number","parseInt","inputProps","min","BankWithdrawDialog","handleWithdrawAsync","stakeButton","BankQuotaRequest","handleClickOpenFn","Stake","isStaked","canWithdraw","Withdraw","canDelete","Delete","BankQuotaRequestTable","initialValue","isLoading","setIsLoading","setQuotaRequests","fetchQuotaRequests","addresses","tempQuotaRequests","quotaRequestResult","unshift","useQuotaRequests","isQuotaRequestsLoading","selectedItem","setSelectedItem","stakeDialogOpen","setStakeDialogOpen","withdrawDialogOpen","setWithdrawDialogOpen","deleteDialogOpen","setDeleteDialogOpen","findIndex","updatedQuotaRequests","newQuotaRequests","filter","handleClickOpen","Main","getOwnerAsync","owner","Grid","container","xs","sm","md","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById","momentUtil","moment","locale","navigator","language","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","QuotaRequestExtensions","quotaRequet","expirationDate","secondsDiff","minus","add","toDate","getLocalReverseFormatted","binary","balanceInfoMap","formatAmount","currentQuota","maxQuota","stakeAmount","formatQuota","updater","other","String","isString","isNullOrWhitespace","compared","str","substr","strPositionStart","strPositionEnd","toBasic","message","normalFormat","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","normalConfig","FORMAT","ROUNDING_MODE","BigNumber","ROUND_DOWN","groupConfig","ceilConfig","ROUND_CEIL","config","GroupBigNumber","clone","CeilBigNumber","x","y","comparedTo","num1","num2","isEqualTo","fix","toFormat","decimalPlaces","plus","multipliedBy","dividedBy","integerValue","num","minUnit","exponentiatedBy","c","offset","number","offsetNum","decimal","n","minDecimals","formatN","afterPoint","split","i","WS_RPC","require","providerOptions","retryTimes","retryInterval","_provider","_client","_isConnected","destroy","isResolved","ViteAPI","disconnect","method","requestAsync","methodName","params","toAddress","block","accountBlock","createAccountBlock","setProvider","setPrivateKey","autoSetPreviousAccountBlock","sign","send","contractAddress","offchaincode","abiutils","encodeFunctionCall","dataBase64","Buffer","from","selfAddr","offChainCode","resultBytes","outputs","offchainDecodeResult","decodeParameters","resultList","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","addressHeightRange","fromHeight","toHeight","tempPayload","replace","subscribe","unsubscribe","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","resolveAccountBlockData","blockType","bytes"],"mappings":"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","file":"static/js/main.10b61d97.chunk.js","sourcesContent":["export class Task {\r\n  private _taskTimer: NodeJS.Timeout | undefined\r\n  private _taskInterval: number\r\n  private _task: () => Promise<boolean>\r\n  private _callback?: () => any\r\n\r\n  constructor(task: () => Promise<boolean>, interval: number) {\r\n    this._task = task;\r\n    this._taskInterval = interval;\r\n\r\n    return this;\r\n  }\r\n\r\n  _run(): void {\r\n    this._taskTimer = setTimeout(async () => {\r\n      if (!this._task) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      if (!(await this._task())) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      this._run();\r\n    }, this._taskInterval);\r\n  }\r\n\r\n  _onStop() {\r\n    this._callback && this._callback();\r\n  }\r\n\r\n  start(callback?: () => any): void {\r\n    this._callback = callback;\r\n    if (this._taskTimer) {\r\n      return;\r\n    }\r\n\r\n    this._run();\r\n  }\r\n\r\n\r\n  stop(): void {\r\n    this._onStop();\r\n    if (!this._taskTimer) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this._taskTimer);\r\n    this._taskTimer = undefined;\r\n  }\r\n}","export const AppConstants = {\r\n  QuotaPerUT: 21000,\r\n  DefaultDecimals: 18,\r\n  DefaultZeroString: \"0\",\r\n  InitialNetworkBlockHeight: \"0\",\r\n  ViteTokenId: \"tti_5649544520544f4b454e6e40\",\r\n  QuotaContractAddress: \"vite_0000000000000000000000000000000000000003f6af7459b9\",\r\n  BankContractAddress: \"vite_091e12441cc09f51bb84b7950c7a4a3c44b77442eccb789f7a\",\r\n  NetworkStorageSpace: 'VQB_NETWORK',\r\n  WebWalletStorageSpace: 'VQB_WEB_WALLET',\r\n  DefaultMnemonic: 'spell barely teach wisdom best tragic three lyrics second notable excuse hobby example tenant business midnight member canal energy evoke debate tortoise high infant'\r\n}","export enum GlobalEvent {\r\n  NetworkBlockHeight = 'NetworkBlockHeight',\r\n  QuotaRequestUpdated = 'QuotaRequestUpdated',\r\n  QuotaRequestDeleted = 'QuotaRequestDeleted'\r\n}","import { ViteClient } from './vite';\r\n\r\nexport class ViteMockClient extends ViteClient {\r\n\r\n}","import EventEmitter from 'events';\r\nimport { QuotaRequest } from '../types';\r\nimport { GlobalEvent } from './types';\r\n\r\nexport interface IGlobalEmitter {\r\n  emitNetworkBlockHeight(height: string): void\r\n  emitQuotaRequestUpdated(update: QuotaRequest): void\r\n  emitQuotaRequestDeleted(address: string): void\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this\r\n}\r\n\r\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\r\n  emitNetworkBlockHeight(height: string): void {\r\n    this.emit(GlobalEvent.NetworkBlockHeight, height)\r\n  }\r\n  emitQuotaRequestUpdated(update: QuotaRequest): void {\r\n    this.emit(GlobalEvent.QuotaRequestUpdated, update)\r\n  }\r\n  emitQuotaRequestDeleted(address: string): void {\r\n    this.emit(GlobalEvent.QuotaRequestDeleted, address)\r\n  }\r\n}","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string) {\r\n    if (property === null || property === undefined) {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: string, propertyName: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n}\r\n","export interface IFileUtil {\r\n  readFileAsync(path: string): Promise<any>\r\n}\r\n\r\nexport class fileUtil implements IFileUtil {\r\n  private static instance: fileUtil\r\n  private _fileUtil: IFileUtil\r\n\r\n  private constructor() {\r\n    this._fileUtil = new browserFileUtil()\r\n  }\r\n\r\n  static getInstance(): fileUtil {\r\n    if (!fileUtil.instance) {\r\n      fileUtil.instance = new fileUtil()\r\n    }\r\n\r\n    return fileUtil.instance\r\n  }\r\n\r\n  readFileAsync(path: string): Promise<any> {\r\n    return this._fileUtil.readFileAsync(path)\r\n  }\r\n}\r\n\r\nexport class browserFileUtil {\r\n  async readFileAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return response.text();\r\n  }\r\n}","import { useCallback, useReducer } from 'react'\r\nimport { Wallet } from '../wallet'\r\n\r\ninterface Web3ManagerState {\r\n  wallet?: Wallet\r\n  onError?: (error: Error) => void\r\n  error?: Error\r\n}\r\n\r\nenum ActionType {\r\n  UPDATE,\r\n  ERROR\r\n}\r\n\r\ninterface Action {\r\n  type: ActionType\r\n  payload?: any\r\n}\r\n\r\nfunction reducer(state: Web3ManagerState, { type, payload }: Action): Web3ManagerState {\r\n  switch (type) {\r\n    case ActionType.UPDATE: {\r\n      const { wallet } = payload\r\n      return {\r\n        ...state,\r\n        ...({ wallet })\r\n      }\r\n    }\r\n    case ActionType.ERROR: {\r\n      const { error } = payload\r\n      const { onError } = state\r\n      return {\r\n        error,\r\n        onError\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const useWeb3Manager = (initWallet?: Wallet) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    wallet: initWallet\r\n  })\r\n  // const { account, onError, error } = state\r\n  const { wallet, error } = state\r\n\r\n  const setWallet = useCallback((wallet?: Wallet): void => {\r\n    dispatch({ type: ActionType.UPDATE, payload: { wallet } })\r\n  }, [])\r\n\r\n  const setError = useCallback((error: Error): void => {\r\n    dispatch({ type: ActionType.ERROR, payload: { error } })\r\n  }, [])\r\n\r\n  // const handleError = useCallback(\r\n  //   (error: Error): void => {\r\n  //     onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\r\n  //   },\r\n  //   [onError]\r\n  // )\r\n\r\n  // ensure that events emitted from the set connector are handled appropriately\r\n  // useEffect((): (() => void) => {\r\n  //   if (connector) {\r\n  //     connector\r\n  //       .on(ConnectorEvent.Update, handleUpdate)\r\n  //       .on(ConnectorEvent.Error, handleError)\r\n  //       .on(ConnectorEvent.Deactivate, handleDeactivate)\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (connector) {\r\n  //       connector\r\n  //         .off(ConnectorEvent.Update, handleUpdate)\r\n  //         .off(ConnectorEvent.Error, handleError)\r\n  //         .off(ConnectorEvent.Deactivate, handleDeactivate)\r\n  //     }\r\n  //   }\r\n  // }, [connector, handleUpdate, handleError, handleDeactivate])\r\n\r\n  return { setWallet, wallet, setError, error }\r\n}","import { IViteClient } from '../clients';\r\nimport { AppConstants } from '../constants';\r\nimport { IGlobalEmitter } from '../emitters/globalEmitter';\r\nimport { INetworkStore } from '../stores';\r\nimport { Contract, IVmLog, QuotaRequest, VmLogEvent } from '../types';\r\nimport { commonUtil } from '../util/commonUtil';\r\nimport { Ensure } from '../util/ensure';\r\nimport { fileUtil } from '../util/fileUtil';\r\nimport { Account, WalletManager } from '../wallet';\r\n\r\nexport interface IBankService {\r\n  readonly listener: void\r\n  initAsync(): Promise<void>\r\n  dispose(): void\r\n  getOwnerAsync(): Promise<string>\r\n  getRequests(): Promise<string[]>\r\n  getRequestByAddress(address: string): Promise<QuotaRequest>\r\n  createRequest(note?: string): Promise<void>\r\n  stakeRequest(address: string, amount: number, duration: number): Promise<void>\r\n  withdrawRequest(address: string): Promise<void>\r\n  deleteRequest(address: string): Promise<void>\r\n}\r\n\r\nexport class BankService implements IBankService {\r\n\r\n  protected readonly _vite: IViteClient\r\n  protected readonly _emitter: IGlobalEmitter\r\n  protected readonly _networkStore: INetworkStore\r\n  private readonly _walletManager: WalletManager\r\n  private _contract?: Contract\r\n  private _offchainMethods: Map<string, string> = new Map<string, string>()\r\n  private _listener: any\r\n\r\n  constructor(vite: IViteClient, emitter: IGlobalEmitter, networkStore: INetworkStore, walletManager: WalletManager) {\r\n    this._vite = vite\r\n    this._emitter = emitter\r\n    this._networkStore = networkStore\r\n    this._walletManager = walletManager\r\n  }\r\n\r\n  get listener(): any {\r\n    if (!this._listener) {\r\n      throw new Error(\"Listener is not defined.\")\r\n    }\r\n    return this._listener\r\n  }\r\n\r\n  private ensureContractExists(): Contract {\r\n    if (this._contract?.address === undefined) {\r\n      throw new Error(\"Bank contract is not defined.\")\r\n    } else {\r\n      return this._contract\r\n    }\r\n  }\r\n\r\n  protected ensureAccountExists(): Account {\r\n    const account = this._walletManager.getActiveAccount()\r\n    if (account?.address === undefined) {\r\n      throw new Error(\"Login and try again.\")\r\n    } else {\r\n      return account\r\n    }\r\n  }\r\n\r\n  private removeAddressListener(): void {\r\n    if (this._listener) {\r\n      this._vite.removeListener(this._listener)\r\n    }\r\n  }\r\n\r\n  async initAsync(): Promise<void> {\r\n    this.removeAddressListener()\r\n    const contract = await fileUtil.getInstance().readFileAsync('./assets/contracts/QuotaBank.json')\r\n    this._contract = new Contract(JSON.parse(contract))\r\n    this._contract.address = AppConstants.BankContractAddress\r\n    console.log('Contract name:', this._contract?.contractName)\r\n    // TODO: listen for vmlogs emitted by the specified contract\r\n    // -> emit with GlobalEmitter\r\n    this._listener = await this._vite.createAddressListenerAsync(this._contract.address)\r\n    this._listener.on((results: any[]) => {\r\n      if (!this._contract?.abi) {\r\n        console.log('Could not decode vmlog because contract abi is not defined.')\r\n      } else {\r\n        for (let index = 0; index < results.length; index++) {\r\n          const result = results[index];\r\n          const vmLog = this._vite.decodeVmLog(result.vmlog, this._contract.abi);\r\n          console.log(vmLog ?? result)\r\n          if (vmLog) {\r\n            this.handleVmLogAsync(vmLog)\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing BankService\")\r\n    this.removeAddressListener()\r\n  }\r\n\r\n  async getOwnerAsync(): Promise<string> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getOwner'), contract.offChain, [])\r\n    return result[0].value;\r\n  }\r\n\r\n  async getRequests(): Promise<string[]> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getRequestors'), contract.offChain, [])\r\n    return result[0].value;\r\n  }\r\n\r\n  async getRequestByAddress(address: string): Promise<QuotaRequest> {\r\n    const contract = this.ensureContractExists()\r\n    const result = await this._vite.callOffChainMethodAsync(contract.address, this.getOffchainMethodAbi('getRequest'), contract.offChain, [address])\r\n    const request = new QuotaRequest(this.objectFromEntries(result))\r\n    if (this.isEmptyRequest(request)) {\r\n      throw new Error(`No request found for '${address}'.`)\r\n    }\r\n    request.address = address\r\n    request.update(this._networkStore.blockHeight)\r\n    return request;\r\n  }\r\n\r\n  async createRequest(note?: string): Promise<void> {\r\n    const contract = this.ensureContractExists()\r\n    const account = this.ensureAccountExists()\r\n    const result = await this._vite.callContractAsync(account, 'CreateRequest', contract.abi, [note], AppConstants.DefaultZeroString, contract.address)\r\n    await this.handleResponseAsync(account.address, result.height)\r\n  }\r\n\r\n  async stakeRequest(address: string, amount: number, duration: number): Promise<void> {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  async withdrawRequest(address: string): Promise<void> {\r\n    return Promise.resolve()\r\n  }\r\n\r\n  async deleteRequest(address: string): Promise<void> {\r\n    const contract = this.ensureContractExists()\r\n    const account = this.ensureAccountExists()\r\n    const result = await this._vite.callContractAsync(account, 'DeleteRequest', contract.abi, [address], AppConstants.DefaultZeroString, contract.address)\r\n    await this.handleResponseAsync(account.address, result.height)\r\n  }\r\n\r\n  private getOffchainMethodAbi(name: string): string {\r\n    const contract = this.ensureContractExists()\r\n    let result: Maybe<string>\r\n    if (this._offchainMethods.has(name)) {\r\n      result = this._offchainMethods.get(name)\r\n    } else {\r\n      result = contract.abi.find(e => e.type === \"offchain\" && e.name === name)\r\n      if (result) {\r\n        this._offchainMethods.set(name, result)\r\n      }\r\n    }\r\n    if (result) {\r\n      return result\r\n    } else {\r\n      throw new Error(`The offchain method '${name}' does not exist.'`)\r\n    }\r\n  }\r\n\r\n  private isEmptyRequest(request: QuotaRequest): boolean {\r\n    return commonUtil.isNullOrDefault(request.expirationHeight, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\r\n    this._vite.waitForAccountBlockAsync(address, height).then((result: any) => {\r\n      if (result?.status === 0) {\r\n        resolve()\r\n      } else {\r\n        reject(result?.statusTxt ?? \"Something went wrong.\")\r\n      }\r\n    })\r\n  })\r\n\r\n  private async handleVmLogAsync(vmlog: IVmLog): Promise<void> {\r\n    try {\r\n      if (vmlog.event === VmLogEvent.RequestCreated) {\r\n        Ensure.notNullOrWhiteSpace(vmlog.args?.addr, 'vmlog.args.addr')\r\n        const request = await this.getRequestByAddress(vmlog.args?.addr)\r\n        this._emitter.emitQuotaRequestUpdated(request)\r\n      } else if (vmlog.event === VmLogEvent.RequestDeleted) {\r\n        Ensure.notNullOrWhiteSpace(vmlog.args?.addr, 'vmlog.args.addr')\r\n        this._emitter.emitQuotaRequestDeleted(vmlog.args?.addr)\r\n      } else {\r\n        console.log('Unknown vmlog event.')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  private objectFromEntries = (entries: any) => {\r\n    return Object.fromEntries(\r\n      entries.map((entry: any) => {\r\n        return [entry.name, entry.value];\r\n      })\r\n    );\r\n  };\r\n}","import { AppConstants } from '../constants';\r\nimport { QuotaRequest } from '../types';\r\nimport { bigNumber } from '../util/bigNumber';\r\nimport { BankService } from './bank';\r\n\r\nconst quotaRequests = [\r\n  new QuotaRequest({\r\n    address: 'vite_48e7436290e300268ed360a28704d9df9dbcbe485f7ed24cf1',\r\n    expirationHeight: '1487686'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_7fb28c2b8c3ee3fd5d271f632b16ef81f1f98d136445a1c1cb',\r\n    expirationHeight: '1987866',\r\n    note: 'Twitter: 0xRomanNiklaus'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_ce9499905e2dacab4972574cc4319f9b9d44020af89a239463',\r\n    expirationHeight: '1587687',\r\n    note: 'GitHub: niklr',\r\n    amount: '1500000000000000000000'\r\n  }),\r\n  new QuotaRequest({\r\n    address: 'vite_df81e81a5e552f54fccdad71aa0b951ebec6e456f9d0c69ee4',\r\n    expirationHeight: '1350998',\r\n    amount: '1500000000000000000000'\r\n  }),\r\n  new QuotaRequest({\r\n    note: 'Test 1324'\r\n  })\r\n]\r\n\r\nexport class BankMockService extends BankService {\r\n  getRequests = async () => new Promise<string[]>((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(quotaRequests.flatMap(e => e.address ? e.address : []))\r\n    }, 1000)\r\n  })\r\n\r\n  getRequestByAddress = async (address: string) => new Promise<QuotaRequest>((resolve, reject) => {\r\n    const result = quotaRequests.find(e => e.address === address);\r\n    result?.update(this._networkStore.blockHeight)\r\n    if (result) {\r\n      setTimeout(() => {\r\n        resolve(result)\r\n      }, 100)\r\n    } else {\r\n      reject(`Quota request for '${address}' not found.`)\r\n    }\r\n  })\r\n\r\n  createRequest = async (note?: string) => new Promise<void>((resolve, reject) => {\r\n    const account = this.ensureAccountExists()\r\n    if (note) {\r\n      if (account.address && quotaRequests.find(e => e.address === account.address)) {\r\n        reject(\"Request already exists.\")\r\n      } else {\r\n        const newItem = new QuotaRequest({\r\n          address: account.address,\r\n          note,\r\n          expirationHeight: this._networkStore.blockHeight + 10\r\n        })\r\n        newItem.update(this._networkStore.blockHeight)\r\n        quotaRequests.push(newItem)\r\n        resolve()\r\n        setTimeout(() => {\r\n          this._emitter.emitQuotaRequestUpdated(newItem)\r\n        }, 500)\r\n      }\r\n    } else {\r\n      setTimeout(() => {\r\n        reject(\"Request failed. Please try again later.\")\r\n      }, 2000)\r\n    }\r\n  })\r\n\r\n  stakeRequest = async (address: string, amount: number, duration: number) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    if (!amount || amount <= 0) {\r\n      reject(\"Please provide a valid amount.\")\r\n      return\r\n    }\r\n    if (!duration || duration <= 0) {\r\n      reject(\"Please provide a valid duration.\")\r\n      return\r\n    }\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      existing.amount = bigNumber.toMin(amount, AppConstants.DefaultDecimals)\r\n      existing.expirationHeight = this._networkStore.blockHeight + duration\r\n      const updatedItem = new QuotaRequest(existing)\r\n      updatedItem.update(this._networkStore.blockHeight)\r\n      resolve()\r\n      setTimeout(() => {\r\n        this._emitter.emitQuotaRequestUpdated(updatedItem)\r\n      }, 500)\r\n    }\r\n  })\r\n\r\n  withdrawRequest = async (address: string) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      existing.amount = undefined\r\n      const updatedItem = new QuotaRequest(existing)\r\n      updatedItem.update(this._networkStore.blockHeight)\r\n      resolve()\r\n      setTimeout(() => {\r\n        this._emitter.emitQuotaRequestUpdated(updatedItem)\r\n      }, 500)\r\n    }\r\n  })\r\n\r\n  deleteRequest = async (address: string) => new Promise<void>((resolve, reject) => {\r\n    this.ensureAccountExists()\r\n    const existing = quotaRequests.find(e => e.address === address)\r\n    if (!existing) {\r\n      reject(\"Request does not exist.\")\r\n    } else {\r\n      const index = quotaRequests.indexOf(existing);\r\n      if (index > -1) {\r\n        quotaRequests.splice(index, 1);\r\n      }\r\n      setTimeout(() => {\r\n        resolve()\r\n        this._emitter.emitQuotaRequestDeleted(address)\r\n      }, 500)\r\n    }\r\n  })\r\n}","import { AppConstants } from '../constants';\r\nimport { IGlobalEmitter } from '../emitters/globalEmitter';\r\nimport { Network } from '../types';\r\n\r\nexport interface INetworkStore {\r\n  blockHeight: string\r\n  network: Network\r\n  defaultNetwork: Network\r\n  networks: Network[]\r\n  getById(networkId: number): Maybe<Network>\r\n  clear(): void\r\n}\r\n\r\nexport class NetworkStore implements INetworkStore {\r\n\r\n  private readonly _key: string = AppConstants.NetworkStorageSpace;\r\n  private _emitter?: IGlobalEmitter\r\n  private _blockHeight: string\r\n  private _network?: Network\r\n  private _defaultNetwork: Network\r\n  private _networks: Network[] = [\r\n    // new Network({\r\n    //   id: 1,\r\n    //   networkId: 1,\r\n    //   name: 'MAINNET',\r\n    //   url: 'wss://node.vite.net/gvite/ws'\r\n    // }),\r\n    new Network({\r\n      id: 2,\r\n      networkId: 2,\r\n      name: 'TESTNET',\r\n      url: 'wss://buidl.vite.net/gvite/ws' // https://buidl.vite.net/gvite\r\n    }),\r\n    new Network({\r\n      id: 3,\r\n      networkId: 2,\r\n      name: 'TESTNET+MOCK',\r\n      url: 'wss://buidl.vite.net/gvite/ws',\r\n      mock: true\r\n    }),\r\n    new Network({\r\n      id: 4,\r\n      networkId: 5,\r\n      name: 'DEBUG',\r\n      url: 'ws://localhost:23457'\r\n    })\r\n  ]\r\n\r\n  constructor(emitter?: IGlobalEmitter) {\r\n    this._emitter = emitter\r\n    this._blockHeight = AppConstants.InitialNetworkBlockHeight\r\n    this._defaultNetwork = this._networks[1]\r\n  }\r\n\r\n  get blockHeight(): string {\r\n    return this._blockHeight\r\n  }\r\n\r\n  set blockHeight(height: string) {\r\n    this._blockHeight = height\r\n    this._emitter?.emitNetworkBlockHeight(height)\r\n  }\r\n\r\n  get network(): Network {\r\n    if (this._network) {\r\n      return this._network\r\n    }\r\n\r\n    let data;\r\n\r\n    try {\r\n      data = localStorage.getItem(this._key);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    if (!data) {\r\n      return this.defaultNetwork;\r\n    }\r\n\r\n    try {\r\n      const parsedNetwork = new Network(JSON.parse(data))\r\n      this._network = this._networks.find(e => e.id === parsedNetwork.id)\r\n      return this._network ?? this.defaultNetwork;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return this.defaultNetwork;\r\n    }\r\n  }\r\n\r\n  set network(value: Network) {\r\n    if (value) {\r\n      this._network = value\r\n      localStorage.setItem(this._key, JSON.stringify(value))\r\n    } else {\r\n      this._network = undefined\r\n      localStorage.removeItem(this._key)\r\n    }\r\n  }\r\n\r\n  get defaultNetwork(): Network {\r\n    return this._defaultNetwork\r\n  }\r\n\r\n  get networks(): Network[] {\r\n    return this._networks ?? []\r\n  }\r\n\r\n  getById(networkId: number): Maybe<Network> {\r\n    return this._networks.find(e => e.id === networkId)\r\n  }\r\n\r\n  clear(): void {\r\n    this._network = undefined\r\n    localStorage.removeItem(this._key)\r\n  }\r\n}","import { IViteClient, ViteClient, ViteMockClient } from '../clients';\r\nimport { GlobalEmitter, IGlobalEmitter } from '../emitters/globalEmitter';\r\nimport { BankMockService, BankService, IBankService } from '../services';\r\nimport { INetworkStore, NetworkStore } from '../stores';\r\nimport { WalletManager } from '../wallet';\r\n\r\nexport class ServiceProvider {\r\n  emitter: IGlobalEmitter\r\n  networkStore: INetworkStore\r\n  vite: IViteClient\r\n  bank: IBankService\r\n\r\n  constructor(walletManager: WalletManager) {\r\n    this.emitter = new GlobalEmitter()\r\n    this.networkStore = new NetworkStore(this.emitter)\r\n    if (this.networkStore.network?.mock) {\r\n      this.vite = new ViteMockClient()\r\n      this.bank = new BankMockService(this.vite, this.emitter, this.networkStore, walletManager)\r\n    } else {\r\n      this.vite = new ViteClient()\r\n      this.bank = new BankService(this.vite, this.emitter, this.networkStore, walletManager)\r\n    }\r\n  }\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing ServiceProvider\")\r\n    this.vite.dispose()\r\n    this.bank.dispose()\r\n  }\r\n}","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useWeb3Context } from '.';\r\nimport { MainLoading } from '../components/MainLoading';\r\nimport { ServiceProvider } from '../providers';\r\n\r\nexport interface IConnectedWeb3Context {\r\n  account?: string\r\n  provider: ServiceProvider\r\n}\r\n\r\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\r\n\r\n/**\r\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\r\n */\r\nexport const useConnectedWeb3Context = () => {\r\n  const context = React.useContext(ConnectedWeb3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\n/**\r\n * Component used to render components that depend on Web3 being available. These components can then\r\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\r\n */\r\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\r\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const context = useWeb3Context()\r\n\r\n  const { wallet, walletManager } = context\r\n\r\n  const provider = useMemo(() => {\r\n    return new ServiceProvider(walletManager)\r\n  }, [walletManager])\r\n\r\n  useEffect(() => {\r\n    const network = provider.networkStore.network\r\n    if (!network) throw new Error('Network is not defined')\r\n\r\n    const value = {\r\n      account: wallet?.active?.address,\r\n      provider\r\n    }\r\n\r\n    console.log('ConnectedWeb3.account', wallet?.active?.address)\r\n\r\n    const initAsync = async () => {\r\n      console.log('initAsync')\r\n      if (!value.provider.networkStore.network?.url) {\r\n        throw new Error('Network is not defined')\r\n      } else {\r\n        await value.provider.vite.initAsync(value.provider.networkStore.network.url)\r\n      }\r\n      await value.provider.bank.initAsync()\r\n      setConnection(value)\r\n      setIsConnected(true)\r\n    }\r\n    initAsync()\r\n    return () => {\r\n      provider.dispose()\r\n    }\r\n  }, [wallet, walletManager, provider])\r\n\r\n  if (!connection) {\r\n    return MainLoading()\r\n  }\r\n\r\n  const value = {\r\n    ...connection\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isConnected ? (\r\n        <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\r\n      ) : (\r\n        <>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const WhenConnected: React.FC<Props> = props => {\r\n  const { account } = useConnectedWeb3Context()\r\n\r\n  return <>{account && props.children}</>\r\n}\r\n","import { Typography } from '@material-ui/core'\r\nimport { Footer, Header, MainScroll, MainWrapper } from './common'\r\n\r\nexport const MainLoading = () => {\r\n\r\n  return (\r\n    <>\r\n      <MainWrapper>\r\n        <Header />\r\n        <MainScroll>\r\n          <Typography>Loading...</Typography>\r\n        </MainScroll>\r\n        <Footer />\r\n      </MainWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { Quota } from '../types'\r\n\r\nexport const useAccountQuota = (context: IConnectedWeb3Context, address?: string) => {\r\n  const [quota, setQuota] = useState(new Quota())\r\n\r\n  const fetchQuota = async () => {\r\n    try {\r\n      if (address) {\r\n        const newQuota = await context.provider.vite.getQuotaByAccount(address)\r\n        setQuota(newQuota)\r\n      }\r\n    } catch (error) {\r\n      setQuota(new Quota())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchQuota()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    quota,\r\n    fetchQuota,\r\n    setQuota\r\n  }\r\n}","import { Wallet } from '.';\r\nimport { AppConstants } from '../constants';\r\n\r\nexport class WalletStore {\r\n\r\n  private readonly _key = AppConstants.WebWalletStorageSpace;\r\n\r\n  clear(): void {\r\n    localStorage.removeItem(this._key);\r\n  }\r\n\r\n  getItem(): Maybe<Wallet> {\r\n    let data;\r\n\r\n    try {\r\n      data = localStorage.getItem(this._key);\r\n    } catch (err) {\r\n      console.error(err);\r\n      return undefined;\r\n    }\r\n\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n\r\n    try {\r\n      return new Wallet(JSON.parse(data));\r\n    } catch (err) {\r\n      console.log(err);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  setItem(data: Wallet): void {\r\n    const saveData = typeof data === 'string' ? data : JSON.stringify(data);\r\n\r\n    try {\r\n      localStorage.setItem(this._key, saveData);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n}","import { wallet } from '@vite/vitejs';\r\nimport { Account, Wallet } from '.';\r\nimport { WalletStore } from './store';\r\n\r\nexport class WalletManager {\r\n\r\n  private readonly _store: WalletStore;\r\n  private _wallet?: Wallet;\r\n  private _mnemonicDeriveIndex = 0;\r\n\r\n  constructor() {\r\n    this._store = new WalletStore();\r\n    this.initWallet();\r\n  }\r\n\r\n  private initWallet(): void {\r\n    const wallet = this._store.getItem();\r\n    if (wallet) {\r\n      this._wallet = wallet;\r\n      this._mnemonicDeriveIndex = wallet.accounts.length;\r\n    }\r\n  }\r\n\r\n  getWallet(): Maybe<Wallet> {\r\n    return this._wallet;\r\n  }\r\n\r\n  createWallet(mnemonic: string): Maybe<Wallet> {\r\n    this.removeWallet();\r\n    if (this.validateMnemonic(mnemonic)) {\r\n      const account = this.createAccount(mnemonic, 0);\r\n      this._wallet = new Wallet({\r\n        active: account,\r\n        mnemonic,\r\n        accounts: [\r\n          account\r\n        ]\r\n      });\r\n      this._store.setItem(this._wallet);\r\n    }\r\n    return this._wallet;\r\n  }\r\n\r\n  removeWallet(): void {\r\n    this._wallet = undefined;\r\n    this._mnemonicDeriveIndex = 0;\r\n    this._store.clear();\r\n  }\r\n\r\n  getAccountByAddress(address: string): Maybe<Account> {\r\n    return this._wallet?.accounts?.find(e => e.address === address)\r\n  }\r\n\r\n  addAccount(): Maybe<Account> {\r\n    if (this._wallet?.mnemonic) {\r\n      const account = this.createAccount(this._wallet.mnemonic);\r\n      this._wallet.accounts.push(account);\r\n      this.setActiveAccount(account);\r\n      return account;\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getActiveAccount(): Maybe<Account> {\r\n    return this._wallet?.active\r\n  }\r\n\r\n  setActiveAccount(account: Account): boolean {\r\n    if (this._wallet) {\r\n      this._wallet.active = account;\r\n      this._store.setItem(this._wallet);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAccounts(): Account[] {\r\n    if (this._wallet) {\r\n      return this._wallet.accounts;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private createAccount(mnemonic: string, index = this._mnemonicDeriveIndex): Account {\r\n    const { privateKey } = wallet.deriveAddress({\r\n      mnemonics: mnemonic,\r\n      index\r\n    });\r\n    let account = new Account({\r\n      id: index.toString(),\r\n      privateKey,\r\n      address: wallet.createAddressByPrivateKey(privateKey).address\r\n    });\r\n    this._mnemonicDeriveIndex = index + 1;\r\n    return account;\r\n  }\r\n\r\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\r\n    if (mnemonic) {\r\n      return wallet.validateMnemonics(mnemonic);\r\n    }\r\n    return false;\r\n  }\r\n}","export class Account {\r\n  id!: string\r\n  privateKey!: string\r\n  address!: string\r\n\r\n  constructor(init?: Partial<Account>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id\r\n      this.privateKey = data.privateKey\r\n      this.address = data.address\r\n    }\r\n  }\r\n}\r\n\r\nexport class Wallet {\r\n  active?: Account\r\n  mnemonic?: string\r\n  accounts: Account[] = [];\r\n\r\n  constructor(init?: Partial<Wallet>) {\r\n    this.init(init)\r\n    if (!this.accounts) {\r\n      this.accounts = []\r\n    }\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.active = data.active ? new Account(data.active) : undefined\r\n      this.mnemonic = data.mnemonic\r\n      if (data.accounts && Array.isArray(data.accounts)) {\r\n        data.accounts.forEach((account: any) => {\r\n          this.accounts.push(new Account(account))\r\n        });\r\n      }\r\n    }\r\n  }\r\n}","export enum DialogType {\r\n  Stake = 'STAKE',\r\n  Withdraw = 'WITHDRAW',\r\n  Delete = 'DELETE',\r\n}","import React from 'react';\r\nimport { Wallet, WalletManager } from '../wallet';\r\nimport { useWeb3Manager } from './web3Manager';\r\n\r\nexport interface IWeb3Context {\r\n  setWallet: (wallet?: Wallet) => void,\r\n  wallet?: Wallet,\r\n  setError: (error: Error) => void,\r\n  error?: Error,\r\n  walletManager: WalletManager\r\n}\r\n\r\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\r\n\r\nexport const useWeb3Context = () => {\r\n  const context = React.useContext(Web3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\r\n  const walletManager = new WalletManager()\r\n\r\n  const {\r\n    setWallet,\r\n    wallet,\r\n    setError,\r\n    error\r\n  } = useWeb3Manager(walletManager.getWallet())\r\n\r\n  const context: IWeb3Context = {\r\n    setWallet,\r\n    wallet,\r\n    setError,\r\n    error,\r\n    walletManager\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Chip, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tooltip, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useAccountBalance, useAccountQuota, useConnectedWeb3Context } from '../../hooks'\r\nimport { commonUtil } from '../../util/commonUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  quota: {\r\n    color: theme.palette.grey[500]\r\n  },\r\n  subtitle: {\r\n    fontWeight: 250\r\n  },\r\n  unit: {\r\n    fontSize: 10,\r\n    display: 'inline',\r\n    color: theme.palette.grey[500]\r\n  },\r\n  chip: {\r\n    margin: 10\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  title?: string\r\n  address?: string\r\n}\r\n\r\nexport const AddressSummaryTable: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles()\r\n  const context = useConnectedWeb3Context()\r\n  const delay = 1000\r\n\r\n  const { quota, fetchQuota } = useAccountQuota(context, props.address)\r\n  const { balance, fetchBalance } = useAccountBalance(context, props.address)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      if (props.address) {\r\n        await fetchBalance()\r\n        await fetchQuota()\r\n      }\r\n    }, delay)\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 15, 10)\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                {props.title}\r\n              </TableCell>\r\n              <TableCell className={classes.quota} align=\"center\" colSpan={3}>\r\n                Quota\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell className={classes.subtitle}>Balance</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Current</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Max</TableCell>\r\n              <TableCell className={classes.subtitle} align=\"right\">Staked</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n                {balance.amountFormatted} <Typography className={classes.unit}>VITE</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.currentQuotaFormatted} <Typography className={classes.unit}>UT</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.maxQuotaFormatted} <Typography className={classes.unit}>UT</Typography>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {quota.stakeAmountFormatted} <Typography className={classes.unit}>VITE</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Tooltip title={props.address ?? \"\"} placement=\"top\" arrow interactive>\r\n        <Chip className={classes.chip} size=\"small\" label={truncateAddress(props.address)} />\r\n      </Tooltip>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { Balance } from '../types'\r\n\r\nexport const useAccountBalance = (context: IConnectedWeb3Context, address?: string) => {\r\n  const [balance, setBalance] = useState(new Balance())\r\n\r\n  const fetchBalance = async () => {\r\n    try {\r\n      if (address) {\r\n        const newQuota = await context.provider.vite.getBalanceByAccount(address)\r\n        setBalance(newQuota)\r\n      }\r\n    } catch (error) {\r\n      setBalance(new Balance())\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBalance()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    balance,\r\n    fetchBalance,\r\n    setBalance\r\n  }\r\n}","import React from 'react';\r\nimport { Button, PropTypes } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  size?: 'small' | 'medium' | 'large'\r\n  variant?: 'text' | 'outlined' | 'contained'\r\n  color?: PropTypes.Color\r\n  autoFocus?: boolean\r\n  callbackFn: () => Promise<void>\r\n}\r\n\r\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\r\n  const [isDisabled, setIsDisabled] = React.useState(false)\r\n\r\n  const handleClick = async () => {\r\n    setIsDisabled(true)\r\n    try {\r\n      await props.callbackFn()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setIsDisabled(false)\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      size={props.size ?? \"small\"}\r\n      variant={props.variant ?? \"contained\"}\r\n      color={props.color}\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n      autoFocus={props.autoFocus}>\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}\r\n","import { Typography } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Root = styled.div<{ paddingBottomSmall?: boolean }>`\r\n  padding-bottom: ${props => (props.paddingBottomSmall ? '10px' : '30px')};\r\n  padding-top: 10px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  text-align: right;\r\n`\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <>\r\n      <Root paddingBottomSmall={true}>\r\n        <Typography>v{process.env.REACT_APP_VERSION}</Typography>\r\n      </Root>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createStyles, FormControl, Icon, IconButton, InputLabel, makeStyles, Select, Theme } from '@material-ui/core';\r\nimport { useWeb3Context } from '../../hooks';\r\nimport { commonUtil } from '../../util/commonUtil';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: theme.palette.common.white,\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: theme.palette.common.white,\r\n        },\r\n      },\r\n      '& .MuiSelect-root': {\r\n        color: theme.palette.common.white\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n        color: theme.palette.common.white\r\n      }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nexport const AccountList = () => {\r\n  const classes = useStyles()\r\n  const context = useWeb3Context()\r\n\r\n  const { wallet } = context\r\n\r\n  const addAddress = () => {\r\n    context.walletManager.addAccount()\r\n    context.setWallet(context.walletManager.getWallet())\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event.target.value)\r\n    const account = context.walletManager.getAccountByAddress(event.target.value as string)\r\n    if (account && context.walletManager.setActiveAccount(account)) {\r\n      context.setWallet(context.walletManager.getWallet())\r\n    }\r\n  }\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 10, 5)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton aria-label=\"add\" onClick={addAddress}>\r\n        <Icon style={{ color: 'white' }}>add_circle_outline</Icon>\r\n      </IconButton>\r\n      <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n        <InputLabel id=\"select-address-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"select-address-label\"\r\n          id=\"select-address-label\"\r\n          value={wallet?.active?.address}\r\n          onChange={handleChange}\r\n        >\r\n          {wallet?.accounts?.map(account => {\r\n            return (\r\n              <MenuItem key={account.address} value={account.address}>{truncateAddress(account.address)}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Backdrop, Button, Fade, Modal, Paper, TextField, Typography } from '@material-ui/core';\r\nimport { AppConstants } from '../../constants';\r\nimport { useWeb3Context } from '../../hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  warning: {\r\n    color: '#611a15',\r\n    backgroundColor: '#fdecea',\r\n    padding: '15px',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport const LoginModal = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isDisabled, setIsDisabled] = React.useState(false);\r\n  const [mnemonic, setMnemonic] = React.useState<string>('');\r\n  const context = useWeb3Context()\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { setWallet } = context\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (AppConstants.DefaultMnemonic) {\r\n        setMnemonic(AppConstants.DefaultMnemonic)\r\n        setIsDisabled(true)\r\n      }\r\n      console.log('login modal opened')\r\n    }\r\n  }, [open])\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const wallet = context.walletManager.createWallet(mnemonic);\r\n    if (wallet) {\r\n      setWallet(wallet)\r\n    } else {\r\n      enqueueSnackbar('Invalid mnemonic')\r\n    }\r\n  }\r\n\r\n  const handleInput = (e: any) => {\r\n    const newMnemonic = e.target.value\r\n    setMnemonic(newMnemonic)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"inherit\" onClick={handleOpen}>Login</Button>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Paper hidden={!isDisabled}>\r\n              <div className={classes.warning}>\r\n                <Typography>This login is for showcasing the <strong>proof-of-concept</strong> on TESTNET only.</Typography>\r\n                <Typography>Entering your own mnemonic is not supported or recommended!</Typography>\r\n              </div>\r\n            </Paper>\r\n            <TextField\r\n              id=\"outlined-full-width\"\r\n              label=\"Default mnemonic\"\r\n              placeholder=\"...\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              value={mnemonic}\r\n              onChange={handleInput}\r\n              disabled={isDisabled}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, CardContent, Chip, makeStyles, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useBlockHeight, useConnectedWeb3Context } from '../../hooks'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    minHeight: 211,\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    marginBottom: 10\r\n  },\r\n  blockHeight: {\r\n    marginTop: 15\r\n  },\r\n  chip: {\r\n    marginTop: 15\r\n  }\r\n});\r\n\r\nexport const NetworkCard = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n\r\n  const { blockHeight, fetchBlockHeight } = useBlockHeight(context)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      await fetchBlockHeight()\r\n    }, 1000)\r\n    return () => {\r\n      // console.log('NetworkCard interval cleared')\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  const network = context.provider.networkStore.network\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\">\r\n            Network\r\n          </Typography>\r\n          <Chip size=\"small\" label={network?.name} /> / <Chip size=\"small\" label={network?.networkId} />\r\n          <Typography className={classes.blockHeight} variant=\"h5\" component=\"h2\">\r\n            {blockHeight}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            Block height\r\n          </Typography>\r\n          <Chip className={classes.chip} size=\"small\" label={network?.url} />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport { useAccountQuota, useConnectedWeb3Context } from '../../hooks'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    minHeight: 170,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  unit: {\r\n    marginLeft: 5,\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  title?: string\r\n  address?: string\r\n}\r\n\r\nexport const QuotaCard: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n\r\n  const { quota, fetchQuota } = useAccountQuota(context, props.address)\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      await fetchQuota()\r\n    }, 1000)\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"div\">\r\n            {props.title}\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.currentQuotaFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  UT\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Current\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.maxQuotaFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  UT\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Max\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {quota.stakeAmountFormatted}\r\n                <Typography className={classes.unit} color=\"textSecondary\" component=\"span\">\r\n                  VITE\r\n                </Typography>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Staked\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Subject } from 'rxjs';\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { AppConstants } from '../constants';\r\n\r\nexport const useBlockHeight = (context: IConnectedWeb3Context) => {\r\n  const [blockHeight, setBlockHeight] = useState(AppConstants.InitialNetworkBlockHeight)\r\n  const blockHeightSubject = new Subject<string>()\r\n\r\n  const fetchBlockHeight = async () => {\r\n    let newBlockHeight: string\r\n    try {\r\n      newBlockHeight = await context.provider.vite.getSnapshotChainHeightAsync()\r\n\r\n    } catch (error) {\r\n      newBlockHeight = AppConstants.InitialNetworkBlockHeight\r\n    }\r\n    setBlockHeight(newBlockHeight)\r\n    context.provider.networkStore.blockHeight = newBlockHeight\r\n    blockHeightSubject.next(newBlockHeight)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log('useBlockHeightEffect')\r\n    fetchBlockHeight()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    blockHeight,\r\n    blockHeightSubject,\r\n    fetchBlockHeight\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createStyles, FormControl, InputLabel, makeStyles, Select, Theme } from '@material-ui/core';\r\nimport { INetworkStore } from '../../stores';\r\nimport { Network } from '../../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      '& .MuiSelect-root': {\r\n        color: theme.palette.common.white\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n        color: theme.palette.common.white\r\n      }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  networkStore: INetworkStore\r\n}\r\n\r\nexport const NetworkList: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles()\r\n  const networks = props.networkStore.networks\r\n  const [network, setNetwork] = useState<Network>(props.networkStore.network)\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    console.log(event.target.value)\r\n    const selectedNetwork = networks.find(e => e.id === event.target.value)\r\n    if (selectedNetwork) {\r\n      props.networkStore.network = selectedNetwork\r\n      setNetwork(selectedNetwork)\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n        <InputLabel id=\"select-network-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"select-network-label\"\r\n          id=\"select-network-label\"\r\n          value={network?.id}\r\n          onChange={handleChange}\r\n        >\r\n          {networks.map(e => {\r\n            return (\r\n              <MenuItem key={e.id} value={e.id}>{e.name}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}","import { AppBar, Button, Toolbar, Typography } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\nimport { useWeb3Context } from '../../../hooks'\r\nimport { NetworkStore } from '../../../stores'\r\nimport { AccountList, LoginModal } from '../../account'\r\nimport { NetworkList } from '../../network'\r\n\r\nconst Root = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TitleTypography = styled(Typography)`\r\n  flex-grow: 1;\r\n  margin-left: 10px !important;\r\n`\r\n\r\nconst HeaderContainer: React.FC = (props: any) => {\r\n  const context = useWeb3Context()\r\n  const networkStore = new NetworkStore()\r\n\r\n  const { wallet } = context\r\n\r\n  const handleLogout = () => {\r\n    context.walletManager.removeWallet()\r\n    context.setWallet(context.walletManager.getWallet())\r\n    networkStore.clear()\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={\"./icon_white.png\"} alt=\"logo\" width=\"30\" />\r\n          <TitleTypography variant=\"h6\">\r\n            Vite Quota Bank\r\n          </TitleTypography>\r\n          <NetworkList networkStore={networkStore}></NetworkList>\r\n          {wallet?.active && (\r\n            <>\r\n              <AccountList></AccountList>\r\n              <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\r\n            </>\r\n          )}\r\n          {!wallet?.active && (\r\n            <LoginModal></LoginModal>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root>\r\n  )\r\n}\r\n\r\nexport const Header = HeaderContainer","import { Container } from '@material-ui/core'\r\nimport * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MainScrollStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  padding-top: 30px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst MainScrollInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const MainScroll: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return (\r\n    <MainScrollStyled {...restProps}>\r\n      <Container maxWidth=\"lg\">\r\n        <MainScrollInner>{children}</MainScrollInner>\r\n      </Container>\r\n    </MainScrollStyled>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MainWrapperStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n`\r\n// width: 100vw;\r\n\r\nexport const MainWrapper: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\r\n}\r\n","import React from 'react';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { commonUtil } from '../../util/commonUtil';\r\n\r\ninterface Props {\r\n  value?: string\r\n  maxLength: number\r\n  defaultValue?: string\r\n}\r\n\r\nexport const TruncateTooltip: React.FC<Props> = (props: Props) => {\r\n  const defaultValue = props.defaultValue ?? \"-\"\r\n  const renderTooltip = () => {\r\n    if (props.value && props.value.length > props.maxLength) {\r\n      const truncateValue = commonUtil.truncateString(props.value, props.maxLength)\r\n      return (\r\n        <Tooltip title={props.value} placement=\"top\" arrow interactive>\r\n          <span>{truncateValue ?? defaultValue}</span>\r\n        </Tooltip>\r\n      )\r\n    }\r\n    return (\r\n      <span>{props.value ?? defaultValue}</span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderTooltip()}\r\n    </>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { Chip, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { QuotaRequest } from '../../types';\r\nimport { QuotaRequestDueDate } from '../quota_request';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { TruncateTooltip } from '../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    marginBottom: 20\r\n  },\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n}));\r\n\r\nexport const AccountQuotaRequestTable = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n  const account = context.account\r\n  const emitter = context.provider.emitter\r\n\r\n  const [quotaRequest, setQuotaRequest] = useState<QuotaRequest>(new QuotaRequest());\r\n\r\n  const updateQuotaRequest = useCallback(\r\n    async () => {\r\n      setQuotaRequest(new QuotaRequest())\r\n      if (context.account) {\r\n        try {\r\n          const result = await context.provider.bank.getRequestByAddress(context.account)\r\n          setQuotaRequest(result)\r\n        } catch (error) {\r\n          setQuotaRequest(new QuotaRequest())\r\n        }\r\n      }\r\n    }, [context, setQuotaRequest]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      if (account === update.address) {\r\n        console.log('Handle QuotaRequestUpdated', update.address)\r\n        setQuotaRequest(update)\r\n      }\r\n    }\r\n    const handleDelete = (address: string) => {\r\n      if (account === address) {\r\n        console.log('Handle QuotaRequestDeleted', address)\r\n        setQuotaRequest(new QuotaRequest())\r\n      }\r\n    }\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    emitter.on(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    updateQuotaRequest()\r\n    return () => {\r\n      console.log('AccountQuotaRequestTable disposed')\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n      emitter.off(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    };\r\n  }, [account, emitter, updateQuotaRequest, setQuotaRequest])\r\n\r\n  useEffect(() => {\r\n    const handleNetworkBlockHeight = (height: string) => {\r\n      // Create new instance, otherwise setQuotaRequest has no effect\r\n      const newQuotaRequest = new QuotaRequest(quotaRequest)\r\n      newQuotaRequest.update(height)\r\n      if (!quotaRequest.equals(newQuotaRequest)) {\r\n        console.log('AccountQuotaRequestTable changed', quotaRequest.address, height)\r\n        setQuotaRequest(newQuotaRequest)\r\n      }\r\n    }\r\n    // console.log('AccountQuotaRequestTable created', quotaRequest.address)\r\n    emitter.on(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    return () => {\r\n      // console.log('AccountQuotaRequestTable disposed', quotaRequest.address)\r\n      emitter.off(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    };\r\n  }, [emitter, quotaRequest, setQuotaRequest]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>\r\n        My Quota Request\r\n        <IconButton className={classes.refreshButton} aria-label=\"refresh\" onClick={updateQuotaRequest}>\r\n          <RefreshIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Typography>\r\n      <Paper>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Note\r\n                </TableCell>\r\n                <TableCell>\r\n                  Amount\r\n                </TableCell>\r\n                <TableCell>\r\n                  Expected Snapshot Height\r\n                </TableCell>\r\n                <TableCell>\r\n                  Expected Due Date\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>\r\n                  <TruncateTooltip value={quotaRequest.note} maxLength={24}></TruncateTooltip>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.amountFormatted ?? '-'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.expirationHeight ?? '-'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <QuotaRequestDueDate quotaRequest={quotaRequest}>\r\n                  </QuotaRequestDueDate>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {quotaRequest?.status ? (\r\n                    <Chip size=\"small\" label={quotaRequest.status} />\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core';\r\nimport { useConnectedWeb3Context } from '../../hooks';\r\nimport { ClickOnceButton } from '../common';\r\nimport { formatUtil } from '../../util/formatUtil';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  noteInput: {\r\n    flexGrow: 1,\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\nexport const CreateQuotaRequest: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [requestNote, setRequestNote] = useState<string>('');\r\n  const { provider } = useConnectedWeb3Context();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleConfirmAsync = async () => {\r\n    try {\r\n      await provider.bank.createRequest(requestNote)\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          className={classes.noteInput}\r\n          size=\"small\"\r\n          label=\"Request note\"\r\n          variant=\"outlined\"\r\n          value={requestNote}\r\n          onChange={e => setRequestNote(e.target.value)} />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Request Quota</Button>\r\n      </form>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>Confirm quota request</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You will receive quota as soon as the Vite Quota Bank accepts the request.\r\n            Please note that this is a manual operation, hence some delays could be associated.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleConfirmAsync}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { QuotaRequest } from '../../types';\r\n\r\ninterface Props {\r\n  quotaRequest?: QuotaRequest\r\n}\r\n\r\nexport const QuotaRequestDueDate: React.FC<Props> = (props: Props) => {\r\n  const renderDueDate = () => {\r\n    if (props?.quotaRequest?.isExpired) {\r\n      if (props?.quotaRequest?.amount) {\r\n        return (\r\n          <Tooltip title={props?.quotaRequest?.expirationDateFormatted ?? \"\"} placement=\"top\" arrow interactive>\r\n            <span>Staking expired!</span>\r\n          </Tooltip>\r\n        )\r\n      } else {\r\n        return (\r\n          <Tooltip title={props?.quotaRequest?.expirationDateFormatted ?? \"\"} placement=\"top\" arrow interactive>\r\n            <span>Request has expired!</span>\r\n          </Tooltip>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <span>{props?.quotaRequest?.expirationDateFormatted ?? '-'}</span>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {renderDueDate()}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { ClickOnceButton } from '../../common';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankDeleteDialog: React.FC<Props> = (props: Props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleDeleteAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.deleteRequest(props.item.address)\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm deletion</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"secondary\" callbackFn={handleDeleteAsync} autoFocus={true}>\r\n            Delete\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText, makeStyles, TextField } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\nimport { ClickOnceButton } from '../../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%'\r\n  },\r\n  durationInput: {\r\n    float: 'right'\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankStakeDialog: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [amount, setAmount] = useState<string>('');\r\n  const [duration, setDuration] = useState<string>('');\r\n\r\n  const handleStakeAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.stakeRequest(props.item.address, Number.parseInt(amount), Number.parseInt(duration))\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  // const handleInput = (value: string, callbackFn: React.Dispatch<React.SetStateAction<number>>) => {\r\n  //   if (Number.isInteger(value)) {\r\n  //     callbackFn(Number.parseInt(value))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm quota staking</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n          </List>\r\n          <form className={classes.form} autoComplete=\"off\">\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              value={amount}\r\n              inputProps={{ min: 1 }}\r\n              onChange={e => setAmount(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Duration (blocks)\"\r\n              type=\"number\"\r\n              className={classes.durationInput}\r\n              value={duration}\r\n              inputProps={{ min: 1 }}\r\n              onChange={e => setDuration(e.target.value)}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleStakeAsync} autoFocus={true}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport { QuotaRequest } from '../../../types';\r\nimport { IBankService } from '../../../services';\r\nimport { formatUtil } from '../../../util/formatUtil';\r\nimport { ClickOnceButton } from '../../common';\r\n\r\ninterface Props {\r\n  open: boolean\r\n  item: QuotaRequest\r\n  bank: IBankService\r\n  closeFn: () => void\r\n}\r\n\r\nexport const BankWithdrawDialog: React.FC<Props> = (props: Props) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleWithdrawAsync = async () => {\r\n    try {\r\n      if (props.item.address) {\r\n        await props.bank.withdrawRequest(props.item.address)\r\n        props.closeFn()\r\n      } else {\r\n        throw new Error('No address provided.')\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(formatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.closeFn}\r\n      >\r\n        <DialogTitle>Confirm withdraw</DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary=\"Address\" secondary={props.item.address} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Note\" secondary={props.item.note} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary=\"Amount\" secondary={props.item.amountFormatted} />\r\n            </ListItem>\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={props.closeFn}>\r\n            Cancel\r\n          </Button>\r\n          <ClickOnceButton color=\"primary\" callbackFn={handleWithdrawAsync} autoFocus={true}>\r\n            Confirm\r\n          </ClickOnceButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Chip, IconButton, makeStyles, TableCell, TableRow, Tooltip } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { DialogType } from './dialogs';\r\nimport { IConnectedWeb3Context } from '../../hooks';\r\nimport { QuotaRequest } from '../../types';\r\nimport { commonUtil } from '../../util/commonUtil';\r\nimport { QuotaRequestDueDate } from '../quota_request';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { AppConstants } from '../../constants';\r\nimport { TruncateTooltip } from '../common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n  stakeButton: {\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  context: IConnectedWeb3Context,\r\n  item: QuotaRequest,\r\n  handleClickOpenFn: (type: DialogType, item: QuotaRequest) => void\r\n}\r\n\r\nexport const BankQuotaRequest: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const emitter = props.context.provider.emitter\r\n\r\n  const [quotaRequest, setQuotaRequest] = useState<QuotaRequest>(props.item)\r\n\r\n  // console.log('render BankQuotaRequest', props.item.address)\r\n\r\n  useEffect(() => {\r\n    const handleNetworkBlockHeight = (height: string) => {\r\n      // Create new instance, otherwise setQuotaRequest has no effect\r\n      const newQuotaRequest = new QuotaRequest(quotaRequest)\r\n      newQuotaRequest.update(height)\r\n      if (!quotaRequest.equals(newQuotaRequest)) {\r\n        console.log('BankQuotaRequest changed', quotaRequest.address, height)\r\n        setQuotaRequest(newQuotaRequest)\r\n      }\r\n    }\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      if (quotaRequest.address === update.address) {\r\n        console.log('Handle QuotaRequestUpdated', update.address)\r\n        setQuotaRequest(update)\r\n      }\r\n    }\r\n    // console.log('BankQuotaRequest created', quotaRequest.address)\r\n    emitter.on(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    return () => {\r\n      // console.log('BankQuotaRequest disposed', quotaRequest.address)\r\n      emitter.off(GlobalEvent.NetworkBlockHeight, handleNetworkBlockHeight)\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    };\r\n  }, [emitter, quotaRequest, setQuotaRequest]);\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return commonUtil.truncateStringInTheMiddle(address, 10, 5)\r\n  }\r\n\r\n  const isStaked = (item: QuotaRequest) => {\r\n    return item.amount && item.amount !== AppConstants.DefaultZeroString && !item.isExpired\r\n  }\r\n\r\n  const canStake = (item: QuotaRequest) => {\r\n    return commonUtil.isNullOrDefault(item.amount, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  const canDelete = (item: QuotaRequest) => {\r\n    return commonUtil.isNullOrDefault(item.amount, AppConstants.DefaultZeroString)\r\n  }\r\n\r\n  const canWithdraw = (item: QuotaRequest) => {\r\n    return item.amount && item.amount !== AppConstants.DefaultZeroString && item.isExpired\r\n  }\r\n\r\n  const showActions = () => {\r\n    return props.context.provider.networkStore.blockHeight !== AppConstants.InitialNetworkBlockHeight\r\n  }\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <Tooltip title={quotaRequest.address ?? \"\"} placement=\"top\" arrow interactive>\r\n          <Chip size=\"small\" label={truncateAddress(quotaRequest.address)} />\r\n        </Tooltip>\r\n      </TableCell>\r\n      <TableCell>\r\n        <TruncateTooltip value={quotaRequest.note} maxLength={24}></TruncateTooltip>\r\n      </TableCell>\r\n      <TableCell>\r\n        {quotaRequest.amountFormatted ?? \"-\"}\r\n      </TableCell>\r\n      <TableCell>\r\n        {quotaRequest.expirationHeight ?? \"-\"}\r\n      </TableCell>\r\n      <TableCell>\r\n        <QuotaRequestDueDate quotaRequest={quotaRequest}>\r\n        </QuotaRequestDueDate>\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        {showActions() && (\r\n          <div>\r\n            {canStake(quotaRequest) && (\r\n              <Button size=\"small\" variant=\"contained\" color=\"primary\" className={classes.stakeButton} onClick={() => { props.handleClickOpenFn(DialogType.Stake, quotaRequest) }}>\r\n                Stake\r\n              </Button>\r\n            )}\r\n            {isStaked(quotaRequest) && (\r\n              <Chip size=\"small\" label=\"Staked\" />\r\n            )}\r\n            {canWithdraw(quotaRequest) && (\r\n              <Button size=\"small\" variant=\"outlined\" onClick={() => { props.handleClickOpenFn(DialogType.Withdraw, quotaRequest) }}>Withdraw</Button>\r\n            )}\r\n            {canDelete(quotaRequest) && (\r\n              <IconButton aria-label=\"delete\" onClick={() => { props.handleClickOpenFn(DialogType.Delete, quotaRequest) }}>\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { BankQuotaRequest } from '.';\r\nimport { BankDeleteDialog, BankStakeDialog, BankWithdrawDialog, DialogType } from './dialogs';\r\nimport { GlobalEvent } from '../../emitters';\r\nimport { useConnectedWeb3Context, useQuotaRequests } from '../../hooks';\r\nimport { QuotaRequest } from '../../types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    marginBottom: 20\r\n  },\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n  stakeButton: {\r\n    marginRight: 20\r\n  }\r\n}));\r\n\r\nexport const BankQuotaRequestTable = () => {\r\n  const classes = useStyles();\r\n  const context = useConnectedWeb3Context()\r\n  const emitter = context.provider.emitter\r\n\r\n  const { isLoading: isQuotaRequestsLoading, quotaRequests, fetchQuotaRequests, setQuotaRequests } = useQuotaRequests(context)\r\n\r\n  const [selectedItem, setSelectedItem] = React.useState(new QuotaRequest())\r\n  const [stakeDialogOpen, setStakeDialogOpen] = React.useState(false);\r\n  const [withdrawDialogOpen, setWithdrawDialogOpen] = React.useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = React.useState(false);\r\n\r\n  console.log('render BankQuotaRequestTable', context.provider.networkStore.blockHeight)\r\n\r\n  useEffect(() => {\r\n    const handleUpdate = (update: QuotaRequest) => {\r\n      console.log('Handle QuotaRequestUpdated', update.address)\r\n      const index = quotaRequests.findIndex(e => e.address === update.address)\r\n      if (index >= 0) {\r\n        // Replace existing request with update\r\n        const updatedQuotaRequests = [...quotaRequests]\r\n        updatedQuotaRequests[index] = update\r\n        setQuotaRequests(updatedQuotaRequests)\r\n      } else {\r\n        // Prepend update to existing requests\r\n        const newQuotaRequests = [update, ...quotaRequests]\r\n        setQuotaRequests(newQuotaRequests)\r\n      }\r\n    }\r\n    const handleDelete = (address: string) => {\r\n      console.log('Handle QuotaRequestDeleted', address)\r\n      const newQuotaRequests = quotaRequests.filter(e => e.address !== address)\r\n      if (newQuotaRequests.length < quotaRequests.length) {\r\n        setQuotaRequests(newQuotaRequests)\r\n      }\r\n    }\r\n    emitter.on(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n    emitter.on(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    return () => {\r\n      console.log('AccountQuotaRequestTable disposed')\r\n      emitter.off(GlobalEvent.QuotaRequestUpdated, handleUpdate)\r\n      emitter.off(GlobalEvent.QuotaRequestDeleted, handleDelete)\r\n    };\r\n  }, [emitter, quotaRequests, setQuotaRequests])\r\n\r\n  const refreshQuotaRequests = () => {\r\n    fetchQuotaRequests(true)\r\n  }\r\n\r\n  const handleClickOpen = (type: DialogType, item: QuotaRequest) => {\r\n    setSelectedItem(item)\r\n    switch (type) {\r\n      case DialogType.Stake:\r\n        setStakeDialogOpen(true);\r\n        break;\r\n      case DialogType.Withdraw:\r\n        setWithdrawDialogOpen(true);\r\n        break;\r\n      case DialogType.Delete:\r\n        setDeleteDialogOpen(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setStakeDialogOpen(false);\r\n    setWithdrawDialogOpen(false);\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.title}>\r\n        Bank Quota Requests\r\n        <IconButton className={classes.refreshButton} aria-label=\"refresh\" onClick={refreshQuotaRequests}>\r\n          <RefreshIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Typography>\r\n      {isQuotaRequestsLoading ? (\r\n        <Typography variant=\"caption\">Loading...</Typography>\r\n      ) : (\r\n        <Paper>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Address\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Note\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Amount\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Expected Snapshot Height\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Expected Due Date\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    Action\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {quotaRequests\r\n                  && quotaRequests.length > 0\r\n                  && quotaRequests.map(item => {\r\n                    return <BankQuotaRequest key={item.address} context={context} item={item} handleClickOpenFn={handleClickOpen}></BankQuotaRequest>\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n      <BankDeleteDialog item={selectedItem} bank={context.provider.bank} open={deleteDialogOpen} closeFn={handleClose}></BankDeleteDialog>\r\n      <BankStakeDialog item={selectedItem} bank={context.provider.bank} open={stakeDialogOpen} closeFn={handleClose}></BankStakeDialog>\r\n      <BankWithdrawDialog item={selectedItem} bank={context.provider.bank} open={withdrawDialogOpen} closeFn={handleClose}></BankWithdrawDialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { IConnectedWeb3Context } from '.'\r\nimport { QuotaRequest } from '../types'\r\n\r\nexport const useQuotaRequests = (context: IConnectedWeb3Context) => {\r\n  const initialValue: QuotaRequest[] = []\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [quotaRequests, setQuotaRequests] = useState(initialValue)\r\n\r\n  const fetchQuotaRequests = async (force: boolean = false) => {\r\n    setIsLoading(true)\r\n    console.log('fetchQuotaRequests')\r\n    setQuotaRequests([])\r\n    try {\r\n      // TODO: apply pagination\r\n      const addresses = await context.provider.bank.getRequests()\r\n      const tempQuotaRequests: QuotaRequest[] = []\r\n      // TODO: replace loop once supported by smart contracts\r\n      // For now the getter function can only return primitive types. Structs and arrays are not allowed.\r\n      for (let index = 0; index < addresses.length; index++) {\r\n        const address = addresses[index];\r\n        try {\r\n          const quotaRequestResult = await context.provider.bank.getRequestByAddress(address)\r\n          tempQuotaRequests.unshift(quotaRequestResult)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      setQuotaRequests(tempQuotaRequests)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setQuotaRequests(initialValue)\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('useQuotaRequests')\r\n    fetchQuotaRequests(true)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [context])\r\n\r\n  return {\r\n    isLoading,\r\n    quotaRequests,\r\n    fetchQuotaRequests,\r\n    setQuotaRequests\r\n  }\r\n}","import { useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { AddressSummaryTable, Footer, Header, MainScroll, MainWrapper } from './common'\r\nimport { NetworkCard } from './network'\r\nimport { AccountQuotaRequestTable, CreateQuotaRequest } from './quota_request'\r\nimport { BankQuotaRequestTable } from './quota_request_list'\r\nimport { useConnectedWeb3Context } from '../hooks'\r\nimport { AppConstants } from '../constants'\r\n\r\nexport const Main: React.FC = (props: any) => {\r\n  const context = useConnectedWeb3Context()\r\n\r\n  useEffect(() => {\r\n    async function getOwnerAsync() {\r\n      const owner = await context.provider.bank.getOwnerAsync()\r\n      console.log('Bank owner:', owner)\r\n    }\r\n    getOwnerAsync()\r\n  }, [context])\r\n\r\n  return (\r\n    <>\r\n      <MainWrapper>\r\n        <Header />\r\n        <MainScroll>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <AddressSummaryTable title=\"My Account\" address={context.account}></AddressSummaryTable>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <NetworkCard></NetworkCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <AddressSummaryTable title=\"Bank\" address={AppConstants.BankContractAddress}></AddressSummaryTable>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CreateQuotaRequest></CreateQuotaRequest>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <AccountQuotaRequestTable></AccountQuotaRequestTable>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <BankQuotaRequestTable></BankQuotaRequestTable>\r\n            </Grid>\r\n          </Grid>\r\n        </MainScroll>\r\n        <Footer />\r\n      </MainWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { SnackbarProvider } from 'notistack';\r\nimport React from 'react';\r\nimport { Main } from './components';\r\nimport { ConnectedWeb3 } from './hooks';\r\nimport { Web3Provider } from './hooks/web3';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <Web3Provider>\r\n        <ConnectedWeb3>\r\n          <Main />\r\n        </ConnectedWeb3>\r\n      </Web3Provider>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\n// https://arth3rs0ng.medium.com/mui-styled-components-and-inspiration-cceab14bec96\r\nexport const theme = createMuiTheme();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './common/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import moment from 'moment';\r\n\r\nexport class momentUtil {\r\n  constructor() {\r\n    moment.locale(navigator.language);\r\n  }\r\n\r\n  public setLocale(language: string): void {\r\n    moment.locale(language);\r\n  }\r\n\r\n  public get(): moment.Moment {\r\n    return moment()\r\n  }\r\n\r\n  public getFromUnix(date: number) {\r\n    return moment.unix(date);\r\n  }\r\n\r\n  public getLocal(date: any): moment.Moment {\r\n    return moment.utc(date).local();\r\n  }\r\n\r\n  public getLocalTime(date: any): string {\r\n    return this.getLocal(date).format('LTS');\r\n  }\r\n\r\n  public getLocalDate(date: any): string {\r\n    return this.getLocal(date).format('L');\r\n  }\r\n\r\n  public getLocalFormatted(date: any): string {\r\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\r\n  }\r\n\r\n  public getLocalReverseFormatted(date: any): string {\r\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\r\n  }\r\n}","import { AppConstants } from './constants';\r\nimport { QuotaRequest } from './types';\r\nimport { bigNumber } from './util/bigNumber';\r\nimport { commonUtil } from './util/commonUtil';\r\nimport { momentUtil } from './util/momentUtil';\r\n\r\nexport class QuotaRequestExtensions {\r\n  private static instance: QuotaRequestExtensions\r\n  private moment: momentUtil\r\n\r\n  private constructor() {\r\n    this.moment = new momentUtil()\r\n  }\r\n\r\n  public static getInstance(): QuotaRequestExtensions {\r\n    if (!QuotaRequestExtensions.instance) {\r\n      QuotaRequestExtensions.instance = new QuotaRequestExtensions()\r\n    }\r\n\r\n    return QuotaRequestExtensions.instance\r\n  }\r\n\r\n  update(quotaRequet?: QuotaRequest, blockHeight?: string): void {\r\n    if (quotaRequet?.expirationHeight) {\r\n      quotaRequet.isExpired = commonUtil.isExpired(quotaRequet.expirationHeight, blockHeight)\r\n      if (!quotaRequet.expirationDate && blockHeight && blockHeight !== AppConstants.InitialNetworkBlockHeight) {\r\n        const secondsDiff = Number.parseInt(bigNumber.minus(quotaRequet.expirationHeight, blockHeight))\r\n        quotaRequet.expirationDate = this.moment.get().add(secondsDiff, 's').toDate()\r\n        quotaRequet.expirationDateFormatted = this.moment.getLocalReverseFormatted(quotaRequet.expirationDate)\r\n      }\r\n      quotaRequet.status = \"Unknown\"\r\n      if (quotaRequet.isExpired) {\r\n        quotaRequet.status = \"Expired\"\r\n      } else {\r\n        if (quotaRequet.amount) {\r\n          quotaRequet.status = \"Active\"\r\n        } else {\r\n          quotaRequet.status = \"Pending\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { AppConstants } from './constants'\r\nimport { QuotaRequestExtensions } from './type-extensions'\r\nimport { formatUtil } from './util/formatUtil'\r\n\r\nexport class Contract {\r\n  address!: string\r\n  contractName!: string\r\n  binary!: string\r\n  offChain!: string\r\n  abi!: any[]\r\n\r\n  constructor(init?: Partial<Contract>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.contractName = data.contractName\r\n      this.binary = data.binary\r\n      this.offChain = data.offChain\r\n      this.abi = data.abi\r\n    }\r\n  }\r\n}\r\n\r\nexport class Balance {\r\n  amount: string = AppConstants.DefaultZeroString\r\n  amountFormatted: string = AppConstants.DefaultZeroString\r\n\r\n  constructor(init?: Partial<Balance>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data?.balanceInfoMap) {\r\n      const vite = data.balanceInfoMap[AppConstants.ViteTokenId]\r\n      this.amount = vite.balance\r\n      this.amountFormatted = formatUtil.formatAmount(vite.balance)\r\n    }\r\n  }\r\n}\r\n\r\nexport class Network {\r\n  id?: number\r\n  networkId?: number\r\n  name?: string\r\n  url?: string\r\n  mock: boolean = false\r\n\r\n  constructor(init?: Partial<Network>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id\r\n      this.networkId = data.networkId\r\n      this.name = data.name\r\n      this.url = data.url\r\n      this.mock = data.mock ?? false\r\n    }\r\n  }\r\n}\r\n\r\nexport class Quota {\r\n  currentQuota: string = AppConstants.DefaultZeroString\r\n  currentQuotaFormatted: string = AppConstants.DefaultZeroString\r\n  maxQuota: string = AppConstants.DefaultZeroString\r\n  maxQuotaFormatted: string = AppConstants.DefaultZeroString\r\n  stakeAmount: string = AppConstants.DefaultZeroString\r\n  stakeAmountFormatted: string = AppConstants.DefaultZeroString\r\n\r\n  constructor(init?: Partial<Quota>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.currentQuota = data.currentQuota\r\n      this.currentQuotaFormatted = formatUtil.formatQuota(data.currentQuota)\r\n      this.maxQuota = data.maxQuota\r\n      this.maxQuotaFormatted = formatUtil.formatQuota(data.maxQuota)\r\n      this.stakeAmount = data.stakeAmount\r\n      this.stakeAmountFormatted = formatUtil.formatAmount(data.stakeAmount)\r\n    }\r\n  }\r\n}\r\n\r\nexport class QuotaRequest {\r\n  address?: string\r\n  note?: string\r\n  amount?: string\r\n  amountFormatted?: string\r\n  expirationHeight?: string\r\n  expirationDate?: Date\r\n  expirationDateFormatted?: string\r\n  isExpired: boolean = false\r\n  status?: string\r\n\r\n  static readonly updater: QuotaRequestExtensions = QuotaRequestExtensions.getInstance()\r\n\r\n  constructor(init?: Partial<QuotaRequest>) {\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.address = data.address\r\n      this.note = data.note\r\n      this.amount = data.amount\r\n      this.amountFormatted = formatUtil.formatAmount(data.amount)\r\n      this.expirationHeight = data.expirationHeight\r\n      this.expirationDate = data.expirationDate\r\n      this.expirationDateFormatted = data.expirationDateFormatted\r\n      this.isExpired = data.isExpired\r\n      this.status = data.status\r\n    }\r\n  }\r\n\r\n  update(height: string): void {\r\n    QuotaRequest.updater.update(this, height)\r\n  }\r\n\r\n  equals(other: QuotaRequest): boolean {\r\n    return this.address === other.address\r\n      && this.note === other.note\r\n      && this.amount === other.amount\r\n      && this.amountFormatted === other.amountFormatted\r\n      && this.expirationHeight === other.expirationHeight\r\n      // && this.expirationDate === other.expirationDate\r\n      && this.expirationDateFormatted === other.expirationDateFormatted\r\n      && this.isExpired === other.isExpired\r\n      && this.status === other.status;\r\n  }\r\n}\r\n\r\nexport interface IVmLog {\r\n  event: string\r\n  topic: string\r\n  args: any\r\n}\r\n\r\nexport enum VmLogEvent {\r\n  RequestCreated = 'RequestCreated',\r\n  RequestDeleted = 'RequestDeleted'\r\n}","import { bigNumber } from './bigNumber';\r\n\r\nexport abstract class commonUtil {\r\n  static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  static isNullOrWhitespace(value?: string): boolean {\r\n    if (!commonUtil.isString(value)) {\r\n      // console.log('Expected a string but got: ', value);\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\r\n    return commonUtil.isNullOrWhitespace(value) || value === defaultValue\r\n  }\r\n\r\n  static isExpired(expirationHeight?: string, blockHeight?: string): boolean {\r\n    if (expirationHeight && blockHeight) {\r\n      return bigNumber.compared(blockHeight, expirationHeight) === 1\r\n    }\r\n    return false\r\n  }\r\n\r\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\r\n    if (str) {\r\n      if (maxLength < str.length) {\r\n        return `${str.substr(0, maxLength)}...`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\r\n    if (str) {\r\n      const minTruncatedLength = strPositionStart + strPositionEnd\r\n      if (minTruncatedLength < str.length) {\r\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n}","import { AppConstants } from '../constants';\r\nimport { bigNumber } from './bigNumber';\r\nimport { commonUtil } from './commonUtil';\r\n\r\nexport abstract class formatUtil {\r\n  static formatQuota(quota: string): string {\r\n    try {\r\n      const result = bigNumber.toBasic(Number.parseInt(quota) / AppConstants.QuotaPerUT, 0, 3)\r\n      return commonUtil.isNullOrWhitespace(result) ? undefined : result;\r\n    } catch (error) {\r\n      return \"-1\"\r\n    }\r\n  }\r\n\r\n  static formatAmount(amount: string): string {\r\n    try {\r\n      const result = bigNumber.toBasic(Number.parseInt(amount), AppConstants.DefaultDecimals);\r\n      return commonUtil.isNullOrWhitespace(result) ? undefined : result;\r\n    } catch (error) {\r\n      return \"-1\"\r\n    }\r\n  }\r\n\r\n  static formatSnackbarMessage(data: any): string {\r\n    if (data) {\r\n      console.log(data)\r\n      let message: string\r\n      if (!commonUtil.isString(data)) {\r\n        if (data.message) {\r\n          message = data.message\r\n        }\r\n        else if (data.error?.message) {\r\n          message = data.error.message\r\n        } else {\r\n          message = JSON.stringify(data)\r\n        }\r\n      } else {\r\n        message = data\r\n      }\r\n      if (message.length > 128) {\r\n        return message.substr(0, 128) + \"...\"\r\n      }\r\n      return message\r\n    }\r\n    return \"Something went wrong.\"\r\n  }\r\n}","import BigNumber from 'bignumber.js';\r\n\r\nconst groupFormat = {\r\n  decimalSeparator: '.',\r\n  groupSeparator: ',',\r\n  groupSize: 3,\r\n  secondaryGroupSize: 0,\r\n  fractionGroupSeparator: ' ',\r\n  fractionGroupSize: 0\r\n};\r\nconst normalFormat = {\r\n  decimalSeparator: '.',\r\n  groupSeparator: '',\r\n  groupSize: 0,\r\n  secondaryGroupSize: 0,\r\n  fractionGroupSeparator: '',\r\n  fractionGroupSize: 0\r\n};\r\n\r\nconst normalConfig = {\r\n  FORMAT: normalFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN\r\n};\r\n\r\nconst groupConfig = {\r\n  FORMAT: groupFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_DOWN\r\n};\r\n\r\nconst ceilConfig = {\r\n  FORMAT: normalFormat,\r\n  ROUNDING_MODE: BigNumber.ROUND_CEIL\r\n};\r\n\r\nBigNumber.config(normalConfig);\r\nconst GroupBigNumber = BigNumber.clone(groupConfig);\r\nconst CeilBigNumber = BigNumber.clone(ceilConfig);\r\n\r\nconst DP = 8;\r\n\r\nexport abstract class bigNumber {\r\n  static compared(x: any, y: any) {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    return x.comparedTo(y);\r\n  }\r\n  static isEqual(num1: any, num2: any) {\r\n    num1 = new BigNumber(num1);\r\n    num2 = new BigNumber(num2);\r\n    return num1.isEqualTo(num2);\r\n  }\r\n  static minus(x: any, y: any, fix = 8, type = 'fix') {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    const result = x.minus(y);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static plus(x: any, y: any, fix = 8, type = 'fix') {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    const result = x.plus(y);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static multi(x: any, y: any, fix = 8) {\r\n    x = new BigNumber(x);\r\n    y = new BigNumber(y);\r\n    return x.multipliedBy(y).toFormat(fix);\r\n  }\r\n  static dividedToNumber(num1: any, num2: any, fix = 0, type = 'fix') {\r\n    num1 = new BigNumber(num1);\r\n    num2 = new BigNumber(num2);\r\n    if (fix === 0) {\r\n      return num1.dividedBy(num2).integerValue().toString();\r\n    }\r\n\r\n    const result = num1.dividedBy(num2);\r\n    return type === 'fix' ? result.toFormat(fix) : result.decimalPlaces(fix, 1).toFormat();\r\n  }\r\n  static dividedCeil(num1: any, num2: any, fix = 0) {\r\n    num1 = new CeilBigNumber(num1);\r\n    num2 = new CeilBigNumber(num2);\r\n    const result = num1.dividedBy(num2);\r\n    return result.toFormat(fix);\r\n  }\r\n  static toBasic(num: any, minUnit = 0, decimalPlaces = DP) {\r\n    const min = new BigNumber(10).exponentiatedBy(minUnit);\r\n    num = new BigNumber(num);\r\n    if (num.c === null) {\r\n      return '';\r\n    }\r\n\r\n    try {\r\n      return num.dividedBy(min).decimalPlaces(decimalPlaces, 1).toFormat();\r\n    } catch (err) {\r\n      return '';\r\n    }\r\n  }\r\n  static exponentiated(num: any, unit: any, offset = 0) {\r\n    const number = new BigNumber(num).exponentiatedBy(unit);\r\n    const offsetNum = new BigNumber(offset);\r\n    const result = number.plus(offsetNum);\r\n    return result.toFormat();\r\n  }\r\n  static toMin(num: any, minUnit: any) {\r\n    const min = new BigNumber(10).exponentiatedBy(minUnit);\r\n    num = new BigNumber(num);\r\n    if (num.c === null) {\r\n      return '';\r\n    }\r\n\r\n    try {\r\n      return num.multipliedBy(min).toFormat();\r\n    } catch (err) {\r\n      return '';\r\n    }\r\n  }\r\n  static formatNum(num: any, decimal = 8, fix = 8) {\r\n    decimal = decimal >= fix ? fix : decimal;\r\n    const n = new GroupBigNumber(num);\r\n    return n.toFormat(decimal);\r\n  }\r\n  static normalFormatNum(num: any, decimal = 8, fix = 8) {\r\n    decimal = decimal >= fix ? fix : decimal;\r\n    const n = new BigNumber(num);\r\n    return n.toFormat(decimal);\r\n  }\r\n  static onlyFormat(num: any, minDecimals: any) {\r\n    const n = new GroupBigNumber(num);\r\n    let formatN = n.toFormat();\r\n\r\n    if (typeof minDecimals === 'undefined') {\r\n      return formatN;\r\n    }\r\n\r\n    const afterPoint = formatN.split('.')[1] || '';\r\n    if (afterPoint.length >= minDecimals) {\r\n      return formatN;\r\n    }\r\n\r\n    if (!afterPoint.length) {\r\n      formatN += '.';\r\n    }\r\n    for (let i = 0; i < minDecimals - afterPoint.length; i++) {\r\n      formatN += '0';\r\n    }\r\n    return formatN;\r\n  }\r\n};\r\n","import { abi as abiutils, accountBlock, utils, ViteAPI } from '@vite/vitejs';\r\nimport { Balance, IVmLog, Quota } from '../types';\r\nimport { Task } from '../util/task';\r\nimport { Account } from '../wallet';\r\nconst { WS_RPC } = require('@vite/vitejs-ws');\r\n\r\nconst providerTimeout = 60000;\r\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\r\n\r\nexport interface IViteClient {\r\n  readonly isConnected: boolean\r\n  initAsync(url: string): Promise<void>\r\n  dispose(): void\r\n  getSnapshotChainHeightAsync(): Promise<string>\r\n  getBalanceByAccount(address: string): Promise<Balance>\r\n  getQuotaByAccount(address: string): Promise<Quota>\r\n  callContractAsync(account: Account, methodName: string, abi: any, params: any, amount: string, toAddress: string): Promise<any>\r\n  callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any>\r\n  decodeVmLog(vmLog: any, abi: any): Maybe<IVmLog>\r\n  createAddressListenerAsync(address: string): Promise<any>\r\n  removeListener(event: any): void\r\n  waitForAccountBlockAsync(address: string, height: string): Promise<any>\r\n}\r\n\r\nexport class ViteClient implements IViteClient {\r\n\r\n  private _provider: any;\r\n  private _client: any;\r\n  private _isConnected = false;\r\n\r\n  get isConnected(): boolean {\r\n    return this._isConnected;\r\n  }\r\n\r\n  initAsync = async (url: string) => new Promise<void>((resolve, reject) => {\r\n    this._isConnected = false;\r\n    if (this._provider) {\r\n      this._provider.destroy();\r\n    }\r\n    this._provider = new WS_RPC(url, providerTimeout, providerOptions);\r\n    let isResolved = false;\r\n    this._provider.on('error', (err: any) => {\r\n      console.log(err);\r\n      if (isResolved) return;\r\n      reject(err);\r\n      this._isConnected = false;\r\n    });\r\n    this._client = new ViteAPI(this._provider, () => {\r\n      this._isConnected = true;\r\n      console.log(`ViteAPI connected to ${this._provider.path}`);\r\n      isResolved = true;\r\n      resolve();\r\n    });\r\n  });\r\n\r\n  dispose(): void {\r\n    console.log(\"Disposing ViteClient\");\r\n    this._provider.disconnect();\r\n    this._isConnected = false;\r\n  }\r\n\r\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\r\n    if (this._isConnected) {\r\n      return this._client.request(method, ...args);\r\n    } else {\r\n      return Promise.reject('Vite client is not ready to make requests.');\r\n    }\r\n  }\r\n\r\n  async getSnapshotChainHeightAsync(): Promise<string> {\r\n    return this.requestAsync('ledger_getSnapshotChainHeight');\r\n  }\r\n\r\n  async getBalanceByAccount(address: string): Promise<Balance> {\r\n    const result = await this.requestAsync(\"ledger_getAccountInfoByAddress\", address);\r\n    return new Balance(result);\r\n  }\r\n\r\n  async getQuotaByAccount(address: string): Promise<Quota> {\r\n    const result = await this.requestAsync(\"contract_getQuotaByAccount\", address);\r\n    return new Quota(result);\r\n  }\r\n\r\n  async callContractAsync(\r\n    account: Account, methodName: string, abi: any, params: any, amount: string, toAddress: string\r\n  ): Promise<any> {\r\n    const block = accountBlock\r\n      .createAccountBlock(\"callContract\", {\r\n        address: account.address,\r\n        abi,\r\n        methodName,\r\n        amount,\r\n        toAddress,\r\n        params,\r\n      })\r\n      .setProvider(this._client)\r\n      .setPrivateKey(account.privateKey);\r\n\r\n    await block.autoSetPreviousAccountBlock();\r\n    const result = await block.sign().send();\r\n    return result;\r\n  }\r\n\r\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\r\n    let data = abiutils.encodeFunctionCall(abi, params);\r\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\r\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\r\n      selfAddr: contractAddress,\r\n      offChainCode: offchaincode,\r\n      data: dataBase64,\r\n    });\r\n    if (result) {\r\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\r\n      let outputs = [];\r\n      for (let i = 0; i < abi.outputs.length; i++) {\r\n        outputs.push(abi.outputs[i].type);\r\n      }\r\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\r\n      let resultList = [];\r\n      if (offchainDecodeResult) {\r\n        for (let i = 0; i < abi.outputs.length; i++) {\r\n          if (abi.outputs[i].name) {\r\n            resultList.push({\r\n              name: abi.outputs[i].name,\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          } else {\r\n            resultList.push({\r\n              name: \"\",\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          }\r\n        }\r\n      }\r\n      return resultList;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  decodeVmLog(vmLog: any, abi: any): Maybe<IVmLog> {\r\n    let topics = vmLog.topics;\r\n    for (let j = 0; j < abi.length; j++) {\r\n      let abiItem = abi[j];\r\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\r\n        if (vmLog.data) {\r\n          let log = {\r\n            topic: topics[0],\r\n            args: abiutils.decodeLog(\r\n              abiItem.inputs,\r\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\r\n              topics.slice(1)\r\n            ),\r\n            event: abiItem.name,\r\n          };\r\n          return log;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async createAddressListenerAsync(address: string): Promise<any> {\r\n    const payload = {\r\n      addressHeightRange: {\r\n        placeholder: {\r\n          fromHeight: \"0\",\r\n          toHeight: \"0\",\r\n        },\r\n      },\r\n    };\r\n    let tempPayload = JSON.stringify(payload);\r\n    tempPayload = tempPayload.replace(\"placeholder\", address);\r\n    const result = await this._client.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\r\n    console.log(result)\r\n    return result;\r\n  }\r\n\r\n  removeListener(event: any): void {\r\n    this._client.unsubscribe(event);\r\n  }\r\n\r\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let result: any = undefined;\r\n      let error: any = undefined;\r\n      const task = new Task(async () => {\r\n        try {\r\n          let blockByHeight = await this.requestAsync(\r\n            'ledger_getAccountBlockByHeight',\r\n            address,\r\n            height\r\n          );\r\n\r\n          if (!blockByHeight) {\r\n            return true;\r\n          }\r\n\r\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\r\n          if (!receiveBlockHash) {\r\n            return true;\r\n          }\r\n\r\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\r\n          if (!blockByHash) {\r\n            return true;\r\n          }\r\n\r\n          result = {\r\n            ...this.getAccountBlockStatus(blockByHash),\r\n            accountBlock: blockByHash\r\n          }\r\n\r\n          return false;\r\n        } catch (err) {\r\n          error = err\r\n          return false;\r\n        }\r\n      }, 500);\r\n      task.start(() => {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private getAccountBlockStatus(accountBlock: any) {\r\n    let status = this.resolveAccountBlockData(accountBlock);\r\n    let statusTxt = '';\r\n    switch (status) {\r\n      case 0:\r\n        statusTxt = '0, Execution succeed';\r\n        break;\r\n      case 1:\r\n        statusTxt = '1, Execution reverted';\r\n        break;\r\n      case 2:\r\n        statusTxt = '2, Max call depth exceeded';\r\n        break;\r\n    }\r\n    return {\r\n      status,\r\n      statusTxt\r\n    };\r\n  }\r\n\r\n  private resolveAccountBlockData(accountBlock: any) {\r\n    if (\r\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\r\n      !accountBlock.data\r\n    ) {\r\n      return 0;\r\n    }\r\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\r\n\r\n    if (bytes.length !== 33) {\r\n      return 0;\r\n    }\r\n    return bytes[32];\r\n  }\r\n}"],"sourceRoot":""}