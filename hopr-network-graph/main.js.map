{"version":3,"sources":["./src/app/components/d3/d3.component.ts","./src/app/components/d3/d3.component.html","./src/app/enums/chain.enum.ts","./src/app/components/cytoscape/cytoscape.component.ts","./src/app/components/cytoscape/cytoscape.component.html","buffer (ignored)","./src/environments/environment.ts","./src/app/components/graph/graph.component.ts","./src/app/components/graph/graph.component.html","./src/app/utils/common.util.ts","./src/app/enums/graph.enum.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/graph.service.ts","./src/app/models/graph.model.ts","./src/app/app.module.ts","./src/app/utils/ensure.util.ts","./src/app/models/library.model.ts","./src/app/app.constants.ts","./src/app/utils/json.util.ts","./src/app/models/transfer.model.ts","./src/app/models/config.model.ts","./src/app/services/config.service.ts","./src/app/models/chain.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as d3 from 'd3';\nimport { Subscription } from 'rxjs';\nimport { AppConstants } from '../../app.constants';\nimport { ChainTxEventType } from '../../enums/chain.enum';\nimport { GraphElementType, GraphEventType } from '../../enums/graph.enum';\nimport { EdgeDataModel, EdgeGraphModel, GraphEventModel, GraphScratchModel, NodeDataModel, NodeGraphModel } from '../../models/graph.model';\nimport { GraphService } from '../../services/graph.service';\n\n@Component({\n  selector: 'hopr-d3',\n  templateUrl: './d3.component.html',\n  styleUrls: ['./d3.component.css']\n})\nexport class D3Component implements OnInit, OnDestroy {\n\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\n\n  private width: number;\n  private height: number;\n  private svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  private g: d3.Selection<SVGGElement, unknown, HTMLElement, any>;\n  private zoom: d3.ZoomBehavior<Element, unknown>;\n  private edge: d3.Selection<d3.BaseType | SVGLineElement, unknown, SVGGElement, unknown>;\n  private node: d3.Selection<d3.BaseType | SVGCircleElement, unknown, SVGGElement, unknown>;\n  private simulation: d3.Simulation<d3.SimulationNodeDatum, undefined>;\n  private isDestroyed = false;\n  private connectedLookup: any = {};\n  private subs: Subscription[] = [];\n\n  constructor(private graphService: GraphService) {\n\n  }\n\n  ngOnInit(): void {\n    if (this.graphService.onChangeSubject) {\n      const sub1 = this.graphService.onChangeSubject.subscribe({\n        next: (data: GraphEventModel) => {\n          setTimeout(() => {\n            this.handleOnChangeSubject(data);\n          }, 0);\n        }\n      });\n      this.subs.push(sub1);\n    }\n  }\n\n  ngOnDestroy(): void {\n    console.log('D3 destroy called.');\n    this.stopSimulation();\n    this.isDestroyed = true;\n    this.subs.forEach(sub => {\n      sub.unsubscribe();\n    });\n    this.subs = [];\n  }\n\n  private handleOnChangeSubject(data: GraphEventModel) {\n    if (data && !this.isDestroyed) {\n      switch (data.type) {\n        case GraphEventType.DATA_CHANGED:\n          this.render(data.payload);\n          break;\n        case GraphEventType.STOP_SIMULATION:\n          this.stopSimulation();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private stopSimulation(): void {\n    console.log('D3 stop simulation called.');\n    this.simulation?.stop();\n    this.graphService.isSimulating = false;\n  }\n\n  private render(data: any): void {\n    this.graphService.isLoading = true;\n    this.width = this.containerElementRef.nativeElement.clientWidth;\n    this.height = this.containerElementRef.nativeElement.clientHeight;\n    this.createSvg();\n    if (data) {\n      const nodes = data.nodes.map((e: NodeGraphModel) => {\n        return {\n          type: GraphElementType.NODE,\n          id: e.data.id,\n          name: e.data.name,\n          weight: e.data.weight\n        };\n      });\n      const edges = data.edges.map((e: EdgeGraphModel) => {\n        return {\n          type: GraphElementType.EDGE,\n          source: e.data.source,\n          target: e.data.target,\n          strength: e.data.strength,\n          transfer: e.scratch?.transfer\n        };\n      });\n      if (this.simulation) {\n        this.simulation.stop();\n      }\n      this.simulation = d3.forceSimulation(nodes)\n        .force('link', d3.forceLink(edges).id((d: any) => d.id))\n        .force('charge', d3.forceManyBody().strength(-400))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY())\n        .on('end', () => {\n          this.graphService.isSimulating = false;\n        });\n      this.graphService.isSimulating = true;\n\n      this.edge = this.g\n        .selectAll('line')\n        .data(edges)\n        .join('line')\n        .attr('stroke', (d: any) => {\n          if (d?.transfer?.type) {\n            switch (d.transfer.type) {\n              case ChainTxEventType.MINT:\n                return AppConstants.TX_EVENT_MINT_COLOR;\n              case ChainTxEventType.BURN:\n                return AppConstants.TX_EVENT_BURN_COLOR;\n              default:\n                break;\n            }\n          }\n          return AppConstants.TX_EVENT_TRANSFER_COLOR;\n        })\n        .attr('stroke-opacity', 0.6)\n        .attr('class', 'graphElement')\n        .attr('stroke-width', 2)\n        .on('click', this.handleEdgeClick);\n\n      this.node = this.g\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('stroke', '#fff')\n        .attr('stroke-width', 1.5)\n        .attr('class', 'graphElement')\n        .attr('r', (d: any) => Math.max(5, (d.weight / 10) + 5))\n        .attr('fill', AppConstants.NODE_COLOR)\n        .on('click', this.handleNodeClick)\n        .call(this.drag());\n\n      this.node.append('title')\n        .text((d: any) => d.id);\n\n      this.simulation.on('tick', () => {\n        this.graphService.isSimulating = true;\n        this.edge\n          .attr('x1', (d: any) => d.source.x)\n          .attr('y1', (d: any) => d.source.y)\n          .attr('x2', (d: any) => d.target.x)\n          .attr('y2', (d: any) => d.target.y);\n        this.node\n          .attr('cx', (d: any) => d.x)\n          .attr('cy', (d: any) => d.y);\n      });\n\n      this.connectedLookup = {};\n      edges.forEach((d: any) => {\n        this.connectedLookup[`${d.source.id},${d.target.id}`] = true;\n      });\n\n      this.center(0);\n      this.graphService.isLoading = false;\n    }\n  }\n\n  private createSvg(): void {\n    d3.select('#svgContainer').remove();\n    this.svg = d3.select('#container')\n      .append('svg')\n      .attr('id', 'svgContainer')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', [-this.width / 2, -this.height / 2, this.width, this.height].toString())\n      .on('click', () => {\n        this.g.selectAll('g > .graphElement').style('opacity', 1);\n        this.selectEmitter.emit(undefined);\n      });\n\n    this.g = this.svg.append('g');\n\n    this.zoom = d3.zoom()\n      .extent([[0, 0], [this.width, this.height]])\n      .scaleExtent([0, 10])\n      .on('zoom', (e: any) => {\n        this.g.attr('transform', e.transform);\n      });\n    this.svg.call(this.zoom);\n  }\n\n  private drag(): any {\n    const dragstarted = (event: any, d: any) => {\n      if (!event.active) {\n        this.simulation.alphaTarget(0.3).restart();\n      }\n      d.fx = d.x;\n      d.fy = d.y;\n    };\n\n    const dragged = (event: any, d: any) => {\n      d.fx = event.x;\n      d.fy = event.y;\n    };\n\n    const dragended = (event: any, d: any) => {\n      if (!event.active) {\n        this.simulation.alphaTarget(0);\n      }\n      d.fx = null;\n      d.fy = null;\n    };\n\n    return d3.drag()\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n  }\n\n  private isConnected(a: any, b: any): boolean {\n    return this.isConnectedAsTarget(a, b) || this.isConnectedAsSource(a, b) || a === b;\n  }\n\n  private isConnectedAsSource(a: any, b: any): boolean {\n    return this.connectedLookup[`${a},${b}`];\n  }\n\n  private isConnectedAsTarget(a: any, b: any): boolean {\n    return this.connectedLookup[`${b},${a}`];\n  }\n\n  private handleClick(event: any): void {\n    event.stopPropagation();\n    this.g.selectAll('.graphElement').style('opacity', 0);\n    d3.select(event.target).style('opacity', 1);\n  }\n\n  private handleNodeClick = (event: any, d: any) => {\n    this.handleClick(event);\n\n    this.node.style('opacity', (o: any) => {\n      if (o.id === d.id) {\n        return 1;\n      }\n      if (this.isConnected(o.id, d.id)) {\n        return 0.5;\n      }\n      return 0;\n    });\n\n    this.edge.style('opacity', (o: any) => {\n      if (o.source.id === d.id || o.target.id === d.id) {\n        return 1.0;\n      }\n      return 0;\n    });\n\n    this.selectEmitter.emit(new NodeGraphModel({\n      data: new NodeDataModel({\n        id: d.id,\n        name: d.name,\n        weight: d.weight\n      })\n    }));\n  }\n\n  private handleEdgeClick = (event: any, d: any) => {\n    this.handleClick(event);\n\n    this.node.style('opacity', (o: any) => {\n      if (o.id === d.source.id || o.id === d.target.id) {\n        return 1.0;\n      }\n      return 0;\n    });\n\n    this.selectEmitter.emit(new EdgeGraphModel({\n      data: new EdgeDataModel({\n        source: d.source.id,\n        target: d.target.id,\n        strength: d.strength\n      }),\n      scratch: new GraphScratchModel({\n        transfer: d.transfer\n      })\n    }));\n  }\n\n  private center(count: number): void {\n    if (!this.isDestroyed) {\n      const { width, height } = this.g.node().getBBox();\n      if (width && height) {\n        const scale = Math.min(this.width / width, this.height / height) * 0.8;\n        if (scale < 10) {\n          this.svg.transition()\n            .duration(750)\n            .call(this.zoom.transform, d3.zoomIdentity.translate(0, 0).scale(scale));\n        }\n      }\n      if (this.graphService.isSimulating && count < 5) {\n        setTimeout(() => {\n          this.center(++count);\n        }, 1000);\n      }\n    }\n  }\n}\n","<div id=\"container\" #containerElementRef></div>","export enum ChainType {\r\n  TEST = 0,\r\n  ETH_MAIN = 1,\r\n  XDAI_MAIN = 2\r\n}\r\n\r\nexport enum ChainTxEventType {\r\n  UNKNOWN = 0,\r\n  MINT = 1,\r\n  TRANSFER = 2,\r\n  BURN = 3\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport cytoscape from 'cytoscape';\r\nimport fcose from 'cytoscape-fcose';\r\nimport klay from 'cytoscape-klay';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../app.constants';\r\nimport { ChainTxEventType } from '../../enums/chain.enum';\r\nimport { GraphEventType } from '../../enums/graph.enum';\r\nimport { EdgeDataModel, EdgeGraphModel, GraphEventModel, GraphScratchModel, NodeDataModel, NodeGraphModel } from '../../models/graph.model';\r\nimport { GraphService } from '../../services/graph.service';\r\n\r\n@Component({\r\n  selector: 'hopr-cytoscape',\r\n  templateUrl: './cytoscape.component.html',\r\n  styleUrls: ['./cytoscape.component.css'],\r\n})\r\n\r\nexport class CytoscapeComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() public style: any;\r\n  @Input() public layout: any;\r\n  @Input() public zoom: any;\r\n\r\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\r\n\r\n  private cy: cytoscape.Core;\r\n  private subs: Subscription[] = [];\r\n\r\n  constructor(private graphService: GraphService) {\r\n\r\n    cytoscape.use(fcose);\r\n    cytoscape.use(klay);\r\n\r\n    this.layout = this.layout || {\r\n      name: 'grid',\r\n      animate: false,\r\n      spacingFactor: 2\r\n    };\r\n\r\n    this.zoom = this.zoom || {\r\n      min: 0.01,\r\n      max: 3.0\r\n    };\r\n\r\n    this.style = this.style || [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          'height': 'mapData(weight, 1, 100, 20, 60)',\r\n          'width': 'mapData(weight, 1, 100, 20, 60)',\r\n          'font-size': 'mapData(weight, 1, 100, 5, 10)',\r\n          // 'content': 'data(name)',\r\n          'text-valign': 'center',\r\n          'background-color': AppConstants.NODE_COLOR\r\n        }\r\n      },\r\n      {\r\n        selector: ':selected',\r\n        style: {\r\n          'border-width': 3,\r\n          'border-color': 'black',\r\n          'background-color': '#999'\r\n        }\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          // 'curve-style': 'bezier',\r\n          'curve-style': 'straight',\r\n          // 'curve-style': 'haystack',\r\n          'opacity': 0.666,\r\n          'width': 1,\r\n          // 'width': 'mapData(strength, 1, 100, 1, 10)',\r\n          'target-arrow-shape': 'triangle',\r\n          'line-color': (d: any) => {\r\n            switch (d?.scratch('transfer')?.type || ChainTxEventType.UNKNOWN) {\r\n              case ChainTxEventType.MINT:\r\n                return AppConstants.TX_EVENT_MINT_COLOR;\r\n              case ChainTxEventType.BURN:\r\n                return AppConstants.TX_EVENT_BURN_COLOR;\r\n              default:\r\n                break;\r\n            }\r\n            return AppConstants.TX_EVENT_TRANSFER_COLOR;\r\n          }\r\n        }\r\n      },\r\n      {\r\n        selector: '.faded',\r\n        style: {\r\n          'opacity': 0,\r\n          'text-opacity': 0\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.graphService.onChangeSubject) {\r\n      const sub1 = this.graphService.onChangeSubject.subscribe({\r\n        next: (data: GraphEventModel) => {\r\n          setTimeout(() => {\r\n            this.handleOnChangeSubject(data);\r\n          }, 0);\r\n        }\r\n      });\r\n      this.subs.push(sub1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    console.log('Cytoscape destroy called.');\r\n    this.cy.destroy();\r\n    this.subs.forEach(sub => {\r\n      sub.unsubscribe();\r\n    });\r\n    this.subs = [];\r\n  }\r\n\r\n  private handleOnChangeSubject(data: GraphEventModel) {\r\n    if (data) {\r\n      switch (data.type) {\r\n        case GraphEventType.DATA_CHANGED:\r\n          this.render(data.payload);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(data: any): void {\r\n    this.graphService.isLoading = true;\r\n    if (data) {\r\n      if (this.cy) {\r\n        this.cy.destroy();\r\n      }\r\n      this.cy = cytoscape({\r\n        container: this.containerElementRef.nativeElement,\r\n        layout: this.layout,\r\n        minZoom: this.zoom.min,\r\n        maxZoom: this.zoom.max,\r\n        style: this.style,\r\n        elements: data,\r\n      });\r\n\r\n      this.cy.on('tap', 'node', (e: any) => {\r\n        const node: cytoscape.NodeSingular = e.target;\r\n        if (node.selected()) {\r\n          node.unselect();\r\n          this.unselectAll();\r\n        } else {\r\n          const neighborhood = node.neighborhood().add(node);\r\n          this.cy.elements().addClass('faded');\r\n          neighborhood.removeClass('faded');\r\n          this.selectEmitter.emit(new NodeGraphModel({\r\n            data: new NodeDataModel({\r\n              id: node.data('id'),\r\n              name: node.data('name'),\r\n              weight: node.data('weight')\r\n            })\r\n          }));\r\n        }\r\n      });\r\n\r\n      this.cy.on('tap', 'edge', (e: any) => {\r\n        const edge: cytoscape.EdgeSingular = e.target;\r\n        if (edge.selected()) {\r\n          edge.unselect();\r\n          this.unselectAll();\r\n        } else {\r\n          this.cy.elements().addClass('faded');\r\n          edge.removeClass('faded');\r\n          edge.source().removeClass('faded');\r\n          edge.target().removeClass('faded');\r\n          this.selectEmitter.emit(new EdgeGraphModel({\r\n            data: new EdgeDataModel({\r\n              source: edge.data('source'),\r\n              target: edge.data('target'),\r\n              strength: edge.data('strength')\r\n            }),\r\n            scratch: new GraphScratchModel({\r\n              transfer: edge.scratch('transfer')\r\n            })\r\n          }));\r\n        }\r\n      });\r\n\r\n      this.cy.on('tap', (e: any) => {\r\n        if (e.target === this.cy) {\r\n          this.unselectAll();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.graphService.isLoading = false;\r\n  }\r\n\r\n  private unselectAll(): void {\r\n    this.cy.elements().removeClass('faded');\r\n    this.selectEmitter.emit(undefined);\r\n  }\r\n}\r\n","<div id=\"container\" #containerElementRef></div>","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { GraphEventType, GraphLibraryType } from '../../enums/graph.enum';\nimport { ChainFilterItemModel } from '../../models/chain.model';\nimport { BaseGraphModel, EdgeGraphModel, GraphEventModel, NodeGraphModel } from '../../models/graph.model';\nimport { ConfigService } from '../../services/config.service';\nimport { GraphService } from '../../services/graph.service';\n\n@Component({\n  selector: 'hopr-network-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\n\nexport class GraphComponent implements OnInit, OnDestroy {\n\n  private subs: Subscription[] = [];\n\n  public node: NodeGraphModel;\n  public edge: EdgeGraphModel;\n  public message: string;\n\n  constructor(private configService: ConfigService, private graphService: GraphService) {\n  }\n\n  ngOnInit(): void {\n    if (this.graphService.onChangeSubject) {\n      const sub1 = this.graphService.onChangeSubject.subscribe({\n        next: (data: GraphEventModel) => {\n          setTimeout(() => {\n            this.handleOnChangeSubject(data);\n          }, 0);\n        }\n      });\n      this.subs.push(sub1);\n    }\n  }\n\n  ngOnDestroy(): any {\n    this.subs.forEach(sub => {\n      sub.unsubscribe();\n    });\n    this.subs = [];\n  }\n\n  private handleOnChangeSubject(data: GraphEventModel): void {\n    if (data) {\n      switch (data.type) {\n        case GraphEventType.DATA_CHANGED:\n          this.onDataChanged(data.payload);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private onDataChanged(data: any): void {\n    if (Array.isArray(data?.nodes) && data.nodes.length > 0) {\n      this.message = undefined;\n    } else {\n      this.message = 'Graph is empty. Consider changing the minimum weight.';\n    }\n  }\n\n  public nodeChange(event: BaseGraphModel): void {\n    if (event instanceof NodeGraphModel) {\n      this.node = event;\n      this.edge = undefined;\n    } else if (event instanceof EdgeGraphModel) {\n      this.edge = event;\n      this.node = undefined;\n    } else {\n      this.node = undefined;\n      this.edge = undefined;\n    }\n  }\n\n  public get isLoading(): boolean {\n    return this.graphService.isLoading;\n  }\n\n  public get useCytoscapeLibrary(): boolean {\n    return this.configService.config.selectedGraphLibraryType === GraphLibraryType.CYTOSCAPE;\n  }\n\n  public get filter(): Map<string, ChainFilterItemModel> {\n    return this.graphService.filter;\n  }\n\n  public buildAddressUrl(address: string): string {\n    if (address && this.configService.config?.selectedChain?.addressUrl) {\n      return this.configService.config.selectedChain.addressUrl.replace('{address}', address);\n    }\n    return undefined;\n  }\n\n  public buildTxUrl(transactionHash: string): string {\n    if (transactionHash && this.configService.config?.selectedChain?.txUrl) {\n      return this.configService.config.selectedChain.txUrl.replace('{transactionHash}', transactionHash);\n    }\n    return undefined;\n  }\n\n  public changeFilter(id: string, event: any): void {\n    this.graphService.changeFilter(id);\n  }\n}\n","<div id=\"graphContainer\" [ngClass]=\"{'loading': isLoading}\">\r\n  <hopr-cytoscape (selectEmitter)=\"nodeChange($event)\" *ngIf=\"useCytoscapeLibrary; else showD3Block\">\r\n  </hopr-cytoscape>\r\n  <ng-template #showD3Block>\r\n    <hopr-d3 (selectEmitter)=\"nodeChange($event)\"></hopr-d3>\r\n  </ng-template>\r\n</div>\r\n\r\n<div id=\"infoContainer\">\r\n  <div *ngIf=\"isLoading; else showMessageBlock\">\r\n    Loading...\r\n  </div>\r\n  <ng-template #showMessageBlock>\r\n    {{message}}\r\n  </ng-template>\r\n  <div *ngIf=\"node || edge\">\r\n    <div *ngIf=\"node; else showEdgeBlock\">\r\n      Selected node\r\n      <ul>\r\n        <li>address: <a [href]=\"buildAddressUrl(node?.data?.id)\" target=\"_blank\">{{node?.data?.id}}</a></li>\r\n        <li>weight: {{node?.data?.weight}}</li>\r\n      </ul>\r\n    </div>\r\n\r\n    <ng-template #showEdgeBlock>\r\n      Selected edge (transactionHash:\r\n      <a [href]=\"buildTxUrl(edge?.scratch?.transfer?.transactionHash)\"\r\n        target=\"_blank\">{{edge?.scratch?.transfer?.transactionHash}})</a>\r\n      <ul>\r\n        <li>source: <a [href]=\"buildAddressUrl(edge?.data?.source)\" target=\"_blank\">{{edge?.data?.source}}</a></li>\r\n        <li>target: <a [href]=\"buildAddressUrl(edge?.data?.target)\" target=\"_blank\">{{edge?.data?.target}}</a></li>\r\n        <li>amount: {{edge?.scratch?.transfer?.args?.amount}}</li>\r\n      </ul>\r\n    </ng-template>\r\n  </div>\r\n  <div id=\"filter\">\r\n    <ng-container *ngFor=\"let kvp of filter | keyvalue\">\r\n      <input type=\"checkbox\" [id]=\"kvp.key\" [name]=\"kvp.key\" [checked]=\"kvp.value.isSelected\"\r\n        (change)=\"changeFilter(kvp.key,$event)\">\r\n      <label [for]=\"kvp.key\"><b [style.color]=\"kvp.value.color\">{{kvp.value.name}}</b></label>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { BigNumber } from '@ethersproject/bignumber';\r\n\r\nexport class CommonUtil {\r\n\r\n  public static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  public static isNullOrWhitespace(value: string): boolean {\r\n    if (!CommonUtil.isString(value)) {\r\n      // console.log('Expected a string but got: ', value);\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  public static download(blob: Blob): void {\r\n    const textFile = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.setAttribute('download', 'data.json');\r\n    link.href = textFile;\r\n    document.body.appendChild(link);\r\n\r\n    // wait for the link to be added to the document\r\n    window.requestAnimationFrame(() => {\r\n      const event = new MouseEvent('click');\r\n      link.dispatchEvent(event);\r\n      document.body.removeChild(link);\r\n      // revoke the object URL to avoid memory leaks.\r\n      window.URL.revokeObjectURL(textFile);\r\n    });\r\n  }\r\n\r\n  public static toBigNumber(bn: any): BigNumber {\r\n    return BigNumber.from(bn);\r\n  }\r\n\r\n}\r\n","export enum GraphElementType {\r\n  NODE = 0,\r\n  EDGE = 1\r\n}\r\n\r\nexport enum GraphLibraryType {\r\n  D3 = 0,\r\n  CYTOSCAPE = 1\r\n}\r\n\r\nexport enum GraphEventType {\r\n  DATA_CHANGED = 0,\r\n  STOP_SIMULATION = 1\r\n}\r\n","import { Component } from '@angular/core';\nimport { ChainType } from './enums/chain.enum';\nimport { GraphLibraryType } from './enums/graph.enum';\nimport { ChainModel } from './models/chain.model';\nimport { LibraryModel } from './models/library.model';\nimport { ConfigService } from './services/config.service';\nimport { GraphService } from './services/graph.service';\n\n@Component({\n  selector: 'hopr-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public minWeight = 0;\n  public selectedLibraryType: GraphLibraryType = GraphLibraryType.D3;\n  public selectedChainType: ChainType = ChainType.TEST;\n  public chains: ChainModel[] = [\n    new ChainModel({\n      type: ChainType.ETH_MAIN,\n      name: 'ETH mainnet'\n    }),\n    new ChainModel({\n      type: ChainType.XDAI_MAIN,\n      name: 'xDai chain'\n    })\n  ];\n  public libraries: LibraryModel[] = [\n    new LibraryModel({\n      type: GraphLibraryType.D3,\n      name: 'd3'\n    }),\n    new LibraryModel({\n      type: GraphLibraryType.CYTOSCAPE,\n      name: 'cytoscape'\n    })\n  ];\n\n  constructor(private configService: ConfigService, private graphService: GraphService) {\n    this.setMinWeight();\n    this.setSelectedLibraryType();\n    this.setSelectedChainType();\n    this.load();\n  }\n\n  public changeMinWeight($event: any): void {\n    this.configService.config.minWeight = $event.target.value;\n    this.setMinWeight();\n    this.load();\n  }\n\n  public changeChain($event: any): void {\n    this.configService.config.selectedChainType = ChainType[ChainType[$event.target.value]];\n    this.setSelectedChainType();\n    this.load();\n  }\n\n  public changeLibrary($event: any): void {\n    this.configService.config.selectedGraphLibraryType = ChainType[ChainType[$event.target.value]];\n    this.setSelectedLibraryType();\n    this.load();\n  }\n\n  public get showStopSimulationButton(): boolean {\n    return this.graphService.isSimulating && this.configService.config.selectedGraphLibraryType === GraphLibraryType.D3;\n  }\n\n  public stopSimulation(): void {\n    this.graphService.stopSimulation();\n  }\n\n  private setMinWeight(): void {\n    this.minWeight = this.configService.config.minWeight;\n  }\n\n  private setSelectedChainType(): void {\n    this.selectedChainType = this.configService.config.selectedChainType;\n  }\n\n  private setSelectedLibraryType(): void {\n    this.selectedLibraryType = this.configService.config.selectedGraphLibraryType;\n  }\n\n  private load(): void {\n    this.graphService.load();\n  }\n}\n","HOPR network graph\r\n\r\n<select (change)=\"changeChain($event)\" #dropdown>\r\n  <option [value]=\"chain.type\" [selected]=\"chain.type === selectedChainType\" *ngFor=\"let chain of chains\">{{chain.name}}\r\n  </option>\r\n</select>\r\n\r\nmin. weight <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" [value]=\"minWeight\" (change)=\"changeMinWeight($event)\">\r\n{{minWeight}}\r\n\r\n<select (change)=\"changeLibrary($event)\" #dropdown>\r\n  <option [value]=\"library.type\" [selected]=\"library.type === selectedLibraryType\" *ngFor=\"let library of libraries\">\r\n    {{library.name}}\r\n  </option>\r\n</select>\r\n\r\n<button *ngIf=\"showStopSimulationButton\" (click)=\"stopSimulation()\">Stop simulation</button>\r\n\r\n<hopr-network-graph></hopr-network-graph>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConstants } from '../app.constants';\r\nimport { ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { GraphEventType } from '../enums/graph.enum';\r\nimport { ChainFilterItemModel } from '../models/chain.model';\r\nimport { ConfigChainModel } from '../models/config.model';\r\nimport {\r\n  EdgeDataModel,\r\n  EdgeGraphModel,\r\n  GraphContainerModel,\r\n  GraphEventModel,\r\n  GraphScratchModel,\r\n  NodeDataModel,\r\n  NodeGraphModel\r\n} from '../models/graph.model';\r\nimport { TransferModel } from '../models/transfer.model';\r\nimport { Ensure } from '../utils/ensure.util';\r\nimport { JsonUtil } from '../utils/json.util';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GraphService {\r\n\r\n  private _onChangeSubject: Subject<any>;\r\n  private _data: GraphContainerModel;\r\n  private _nodeMap: Map<string, NodeGraphModel>;\r\n\r\n  public isLoading = false;\r\n  public isSimulating = false;\r\n  public readonly filter: Map<string, ChainFilterItemModel>;\r\n\r\n  constructor(private configService: ConfigService) {\r\n    this._onChangeSubject = new Subject<any>();\r\n    this.filter = new Map<string, ChainFilterItemModel>([\r\n      [\r\n        ChainTxEventType[ChainTxEventType.MINT],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.MINT],\r\n          name: 'Mint',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_MINT_COLOR\r\n        })\r\n      ],\r\n      [\r\n        ChainTxEventType[ChainTxEventType.TRANSFER],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.TRANSFER],\r\n          name: 'Transfer',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_TRANSFER_COLOR\r\n        })\r\n      ],\r\n      [\r\n        ChainTxEventType[ChainTxEventType.BURN],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.BURN],\r\n          name: 'Burn',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_BURN_COLOR\r\n        })\r\n      ]\r\n    ]);\r\n  }\r\n\r\n  public get onChangeSubject(): Subject<GraphEventModel> {\r\n    return this._onChangeSubject;\r\n  }\r\n\r\n  public load(): void {\r\n    this.isLoading = true;\r\n    this.loadAsync().finally();\r\n  }\r\n\r\n  public async loadAsync(): Promise<void> {\r\n    this._nodeMap = new Map<string, NodeGraphModel>();\r\n    if (this.configService.config?.selectedChain) {\r\n      const data = await this.init(this.configService.config?.selectedChain);\r\n      this.submitDataSubjectEvent(data);\r\n    } else {\r\n      this.submitDataSubjectEvent(undefined);\r\n    }\r\n  }\r\n\r\n  public async init(chain: ConfigChainModel): Promise<GraphContainerModel> {\r\n    Ensure.notNull(chain, ConfigChainModel.name);\r\n    const rawData = await JsonUtil.loadLocalAsync(chain.jsonPath);\r\n    if (chain.type === ChainType.TEST) {\r\n      this._data = this.convertTestData(rawData);\r\n    } else {\r\n      this._data = this.convertChainData(rawData);\r\n    }\r\n    return this.applyFilters(this._data);\r\n  }\r\n\r\n  public stopSimulation(): void {\r\n    this._onChangeSubject.next(new GraphEventModel({\r\n      type: GraphEventType.STOP_SIMULATION,\r\n      payload: undefined\r\n    }));\r\n  }\r\n\r\n  public changeFilter(id: string): void {\r\n    this.isLoading = true;\r\n    const item = this.filter.get(id);\r\n    if (item) {\r\n      item.isSelected = !item.isSelected;\r\n    }\r\n    const data = this.applyFilters(this._data);\r\n    this.submitDataSubjectEvent(data);\r\n  }\r\n\r\n  private convertTestData(testData: any): GraphContainerModel {\r\n    const data = this.createGraphContainerModel();\r\n    if (Array.isArray(testData?.nodes) && Array.isArray(testData?.edges)) {\r\n      data.nodes = testData?.nodes;\r\n      data.edges = testData?.edges;\r\n      for (const node of data.nodes) {\r\n        this._nodeMap.set(node.data.id, node);\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private convertChainData(chainData: any): GraphContainerModel {\r\n    const data = this.createGraphContainerModel();\r\n    if (Array.isArray(chainData)) {\r\n      for (const element of chainData) {\r\n        if (element.event === 'Transfer') {\r\n          this.addGraphElements(this.createTransferModel(element), data);\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private addGraphElements(transfer: TransferModel, data: GraphContainerModel): void {\r\n    this.tryAddNode(transfer.args.from, data);\r\n    this.tryAddNode(transfer.args.to, data);\r\n    data.edges.push(this.createEdgeModel(transfer));\r\n  }\r\n\r\n  private tryAddNode(address: string, data: GraphContainerModel): void {\r\n    if (this._nodeMap.has(address)) {\r\n      const node = this._nodeMap.get(address);\r\n      node.data.weight = Math.min(++node.data.weight, 100);\r\n    } else {\r\n      const node = this.createNodeModel(address);\r\n      this._nodeMap.set(address, node);\r\n      data.nodes.push(node);\r\n    }\r\n  }\r\n\r\n  private applyFilters(data: GraphContainerModel): GraphContainerModel {\r\n    let filteredData: GraphContainerModel;\r\n    filteredData = this.filterByWeight(data, this.configService.config.minWeight);\r\n    filteredData = this.filterBySelection(filteredData);\r\n    return filteredData;\r\n  }\r\n\r\n  private filterByWeight(data: GraphContainerModel, minWeight: number): GraphContainerModel {\r\n    console.log('nodes/edges before filterByWeight', data.nodes.length, '/', data.edges.length);\r\n    const result = this.createGraphContainerModel();\r\n    result.nodes = data.nodes.filter(\r\n      (e: NodeGraphModel) => this._nodeMap.get(e.data.id)?.data.weight > minWeight);\r\n    result.edges = data.edges.filter(\r\n      (e: EdgeGraphModel) => this._nodeMap.get(e.data.source)?.data.weight > minWeight\r\n        && this._nodeMap.get(e.data.target)?.data.weight > minWeight);\r\n    console.log('nodes/edges after filterByWeight', result.nodes.length, '/', result.edges.length);\r\n    return result;\r\n  }\r\n\r\n  private filterBySelection(data: GraphContainerModel): GraphContainerModel {\r\n    let result: GraphContainerModel;\r\n    const filterItems: ChainFilterItemModel[] = Array.from(this.filter.values());\r\n    // Check if any item is not selected\r\n    if (filterItems.filter(e => !e.isSelected).length > 0) {\r\n      result = this.createGraphContainerModel();\r\n      // Check if any item is selected\r\n      const selectedItems: ChainFilterItemModel[] = filterItems.filter(e => e.isSelected);\r\n      if (selectedItems.length === 0) {\r\n        return result;\r\n      }\r\n      const types: string[] = selectedItems.map(e => e.id);\r\n      for (const edge of data.edges) {\r\n        if (types.includes(ChainTxEventType[edge.scratch?.transfer?.type])) {\r\n          result.edges.push(edge);\r\n          result.nodes.push(this._nodeMap.get(edge.data.source));\r\n          result.nodes.push(this._nodeMap.get(edge.data.target));\r\n        }\r\n      }\r\n      // Remove duplicates\r\n      result.nodes = [...new Set(result.nodes)];\r\n    } else {\r\n      result = data;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private submitDataSubjectEvent(data: GraphContainerModel): void {\r\n    this._onChangeSubject.next(new GraphEventModel({\r\n      type: GraphEventType.DATA_CHANGED,\r\n      payload: data\r\n    }));\r\n  }\r\n\r\n  private createGraphContainerModel(): GraphContainerModel {\r\n    // Cytoscape does not work with instance of GraphContainerModel\r\n    // TODO: replace with \"return new GraphContainerModel();\"\r\n    return {\r\n      nodes: [],\r\n      edges: []\r\n    };\r\n  }\r\n\r\n  private createTransferModel(element: any): TransferModel {\r\n    if (element) {\r\n      const model = new TransferModel(element);\r\n      model.type = ChainTxEventType.TRANSFER;\r\n      if (model.args.from === AppConstants.VOID_ADDRESS) {\r\n        model.type = ChainTxEventType.MINT;\r\n      } else if (model.args.to === AppConstants.VOID_ADDRESS) {\r\n        model.type = ChainTxEventType.BURN;\r\n      }\r\n      return model;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private createNodeModel(address: string): NodeGraphModel {\r\n    return new NodeGraphModel({\r\n      data: new NodeDataModel({\r\n        id: address,\r\n        name: address.substring(0, 4)\r\n      })\r\n    });\r\n  }\r\n\r\n  private createEdgeModel(transfer: TransferModel): EdgeGraphModel {\r\n    return new EdgeGraphModel({\r\n      data: new EdgeDataModel({\r\n        source: transfer.args.from,\r\n        target: transfer.args.to\r\n      }),\r\n      scratch: new GraphScratchModel({\r\n        transfer\r\n      })\r\n    });\r\n  }\r\n}\r\n","import { GraphEventType } from '../enums/graph.enum';\r\nimport { PositionModel } from './position.model';\r\nimport { TransferModel } from './transfer.model';\r\n\r\nexport abstract class BaseGraphModel {\r\n  selected = false; // whether the element is selected (default false)\r\n  selectable = true; // whether the selection state is mutable (default true)\r\n  locked = false; // when locked a node's position is immutable (default false)\r\n  grabbable = true; // whether the node can be grabbed and moved by the user\r\n  pannable = false; // whether dragging the node causes panning instead of grabbing\r\n  classes: string[]; // an array of class names that the element has\r\n  position: PositionModel; // the model position of the node (optional on init, mandatory after)\r\n  renderedPosition: PositionModel; // can alternatively specify position in rendered on-screen pixels\r\n  scratch: GraphScratchModel; // scratchpad data (usually temp or nonserialisable data)\r\n\r\n  public constructor(init?: Partial<BaseGraphModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class NodeGraphModel extends BaseGraphModel {\r\n  data: NodeDataModel; // element data\r\n\r\n  public constructor(init?: Partial<NodeGraphModel>) {\r\n    super(init);\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  public get group(): string {\r\n    return 'nodes';\r\n  }\r\n}\r\n\r\nexport class NodeDataModel {\r\n  id: string;\r\n  name: string;\r\n  weight = 1;\r\n  colorCode: string;\r\n  shapeType: string;\r\n\r\n  public constructor(init?: Partial<NodeDataModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class EdgeGraphModel extends BaseGraphModel {\r\n  data: EdgeDataModel; // element data\r\n\r\n  public constructor(init?: Partial<EdgeGraphModel>) {\r\n    super(init);\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  public get group(): string {\r\n    return 'edges';\r\n  }\r\n}\r\n\r\nexport class EdgeDataModel {\r\n  source: string; // the source node id (edge comes from this node)\r\n  target: string; // the target node id (edge goes to this node)\r\n  strength = 1;\r\n  colorCode: string;\r\n\r\n  public constructor(init?: Partial<EdgeDataModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class GraphContainerModel {\r\n  nodes: NodeGraphModel[];\r\n  edges: EdgeGraphModel[];\r\n\r\n  public constructor(init?: Partial<GraphContainerModel>) {\r\n    Object.assign(this, init);\r\n    if (!this.nodes) {\r\n      this.nodes = [];\r\n    }\r\n    if (!this.edges) {\r\n      this.edges = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class GraphScratchModel {\r\n  transfer: TransferModel;\r\n\r\n  public constructor(init?: Partial<GraphScratchModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class GraphEventModel {\r\n  type: GraphEventType;\r\n  payload: any;\r\n\r\n  public constructor(init?: Partial<GraphEventModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { CytoscapeComponent } from './components/cytoscape/cytoscape.component';\nimport { D3Component } from './components/d3/d3.component';\nimport { GraphComponent } from './components/graph/graph.component';\nimport { ConfigService } from './services/config.service';\n\nexport function initConfig(config: ConfigService) {\n  return () => config.initAsync();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CytoscapeComponent,\n    D3Component,\n    GraphComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initConfig,\n      deps: [ConfigService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string) {\r\n    if (property === null || property === undefined) {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: string, propertyName: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n}\r\n","import { GraphLibraryType } from '../enums/graph.enum';\r\n\r\nexport class LibraryModel {\r\n  type: GraphLibraryType;\r\n  name: string;\r\n\r\n  public constructor(init?: Partial<LibraryModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","export abstract class AppConstants {\r\n  static readonly VOID_ADDRESS: string = '0x0000000000000000000000000000000000000000';\r\n  static readonly NODE_COLOR = '#0000b4';\r\n  static readonly TX_EVENT_MINT_COLOR: string = '#18cc7e';\r\n  static readonly TX_EVENT_TRANSFER_COLOR: string = '#999';\r\n  static readonly TX_EVENT_BURN_COLOR: string = '#d04a35';\r\n}\r\n","import { CommonUtil } from './common.util';\r\n\r\nexport class JsonUtil {\r\n\r\n  public static toString(data: any): string {\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n\r\n  public static async loadLocalAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return await response.json();\r\n  }\r\n\r\n  public static download(data: any): void {\r\n    const blob = new Blob([JsonUtil.toString(data)], { type: 'application/json' });\r\n    CommonUtil.download(blob);\r\n  }\r\n\r\n}\r\n","import { ChainTxEventType } from '../enums/chain.enum';\r\nimport { CommonUtil } from '../utils/common.util';\r\n\r\nexport class TransferModel {\r\n  blockNumber: number;\r\n  blockHash: string;\r\n  transactionIndex: number;\r\n  removed: boolean;\r\n  address: string;\r\n  data: string;\r\n  topics: string[];\r\n  transactionHash: string;\r\n  logIndex: number;\r\n  event: string;\r\n  type: ChainTxEventType;\r\n  eventSignature: string;\r\n  args: TransferArgsModel;\r\n\r\n  public constructor(init?: Partial<TransferModel>) {\r\n    Object.assign(this, init);\r\n\r\n    if (init?.args) {\r\n      this.args = TransferArgsModel.create(init?.args);\r\n    }\r\n  }\r\n}\r\n\r\nexport class TransferArgsModel {\r\n  from: string;\r\n  to: string;\r\n  amount: string;\r\n\r\n  public constructor(init?: Partial<TransferArgsModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  public static create(items: any): TransferArgsModel {\r\n    if (!Array.isArray(items) || items.length !== 3) {\r\n      throw new Error('Invalid transfer arguments.');\r\n    }\r\n    return new TransferArgsModel({\r\n      from: items[0],\r\n      to: items[1],\r\n      amount: CommonUtil.toBigNumber(items[2]).toString()\r\n    });\r\n  }\r\n}\r\n","import { ChainType } from '../enums/chain.enum';\r\nimport { GraphLibraryType } from '../enums/graph.enum';\r\n\r\nexport class ConfigModel {\r\n\r\n  private _selectedChainType: ChainType;\r\n  private _selectedChain: ConfigChainModel;\r\n\r\n  minWeight: number;\r\n  chains: ConfigChainModel[];\r\n  selectedGraphLibraryType: GraphLibraryType;\r\n\r\n  public constructor(init?: Partial<ConfigModel>) {\r\n    Object.assign(this, init);\r\n    if (!this.chains) {\r\n      this.chains = [];\r\n    }\r\n  }\r\n\r\n  public get selectedChainType(): ChainType {\r\n    return this._selectedChainType;\r\n  }\r\n\r\n  public set selectedChainType(value: ChainType) {\r\n    this._selectedChainType = value;\r\n    this.setSelectedChain(value);\r\n  }\r\n\r\n  public get selectedChain(): ConfigChainModel {\r\n    if (this._selectedChain?.type !== this._selectedChainType) {\r\n      this.setSelectedChain(this._selectedChainType);\r\n    }\r\n    return this._selectedChain;\r\n  }\r\n\r\n  private setSelectedChain(value: ChainType): void {\r\n    this._selectedChain = this.chains?.find(e => e.type === value);\r\n  }\r\n}\r\n\r\nexport class ConfigChainModel {\r\n  type: ChainType;\r\n  rpcProviderUrl: string;\r\n  addressUrl: string;\r\n  txUrl: string;\r\n  tokenContractAbi: string[];\r\n  tokenContractAddress: string;\r\n  txEventNames: { [key: string]: string };\r\n  jsonPath: string;\r\n\r\n  public constructor(init?: Partial<ConfigChainModel>) {\r\n    Object.assign(this, init);\r\n    if (!this.tokenContractAbi) {\r\n      this.tokenContractAbi = [];\r\n    }\r\n    if (!this.txEventNames) {\r\n      this.txEventNames = {};\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigModel } from '../models/config.model';\r\nimport { JsonUtil } from '../utils/json.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  private _config: ConfigModel = new ConfigModel();\r\n\r\n  public get config(): ConfigModel {\r\n    return this._config;\r\n  }\r\n\r\n  public async initAsync(): Promise<void> {\r\n    const config = await JsonUtil.loadLocalAsync('./assets/config.json');\r\n    this._config = new ConfigModel(config);\r\n  }\r\n}\r\n","import { ChainType } from '../enums/chain.enum';\r\n\r\nexport class ChainModel {\r\n  type: ChainType;\r\n  name: string;\r\n\r\n  public constructor(init?: Partial<ChainModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ChainFilterItemModel {\r\n  id: string;\r\n  name: string;\r\n  isSelected: boolean;\r\n  color: string;\r\n\r\n  public constructor(init?: Partial<ChainFilterItemModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}