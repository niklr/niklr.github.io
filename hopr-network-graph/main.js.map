{"version":3,"sources":["./src/app/components/d3/d3.component.ts","./src/app/components/d3/d3.component.html","./src/app/enums/chain.enum.ts","./src/app/clients/thegraph.client.ts","./src/app/components/cytoscape/cytoscape.component.ts","./src/app/components/cytoscape/cytoscape.component.html","./src/app/models/type.model.ts","buffer (ignored)","./src/app/factories/extractor.factory.ts","./src/app/extractors/rpc.extractor.ts","./src/app/clients/ethers.client.ts","./src/app/models/log.model.ts","./src/environments/environment.ts","./src/app/components/graph/graph.component.ts","./src/app/components/graph/graph.component.html","./src/app/components/d3canvas/d3canvas.component.ts","./src/app/components/d3canvas/d3canvas.component.html","./src/app/utils/common.util.ts","./src/app/utils/browser-file.util.ts","./src/app/services/logger.service.ts","./src/app/enums/log.enum.ts","./src/app/enums/graph.enum.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/extractors/base.extractor.ts","./src/app/services/graph.service.ts","./src/app/models/position.model.ts","./src/app/repositories/stat.repository.ts","./src/app/extractors/graphql.extractor.ts","./src/app/repositories/event.repository.ts","./src/app/utils/id.util.ts","./src/app/models/graph.model.ts","./src/app/utils/file.util.ts","./src/app/models/event.model.ts","./src/app/app.module.ts","./src/app/utils/ensure.util.ts","./src/app/components/shared/shared-graph-lib.component.ts","./src/app/app.constants.ts","./src/app/models/subgraph.model.ts","./src/app/utils/graph.util.ts","./src/app/utils/moment.util.ts","./src/app/components/logs/logs.component.ts","./src/app/components/logs/logs.component.html","./src/app/models/config.model.ts","./src/app/services/config.service.ts","./src/app/repositories/base.repository.ts","./src/app/models/chain.model.ts","./src/app/models/stat.model.ts","./src/app/components/stardust/stardust.component.ts","./src/app/components/stardust/stardust.component.html","./src/app/services/chain.service.ts","./src/app/extractors/file.extractor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport * as d3 from 'd3';\r\nimport { AppConstants } from '../../app.constants';\r\nimport { ChainTxEventType } from '../../enums/chain.enum';\r\nimport { EdgeViewGraphModel, GraphContainerModel, NodeViewGraphModel } from '../../models/graph.model';\r\nimport { GraphService } from '../../services/graph.service';\r\nimport { Logger } from '../../services/logger.service';\r\nimport { GraphUtil } from '../../utils/graph.util';\r\nimport { SharedGraphLibComponent } from '../shared/shared-graph-lib.component';\r\n\r\n@Component({\r\n  selector: 'hopr-d3',\r\n  templateUrl: './d3.component.html',\r\n  styleUrls: ['./d3.component.css']\r\n})\r\nexport class D3Component extends SharedGraphLibComponent implements OnInit, OnDestroy {\r\n\r\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\r\n\r\n  protected readonly componentName: string = 'D3';\r\n\r\n  private width: number;\r\n  private height: number;\r\n  private svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n  private g: d3.Selection<SVGGElement, unknown, HTMLElement, any>;\r\n  private zoom: d3.ZoomBehavior<Element, unknown>;\r\n  private edge: d3.Selection<d3.BaseType | SVGLineElement, unknown, SVGGElement, unknown>;\r\n  private edgeLabel: d3.Selection<SVGTextElement, unknown, SVGGElement, unknown>;\r\n  private node: d3.Selection<d3.BaseType | SVGCircleElement, unknown, SVGGElement, unknown>;\r\n  private nodeLabel: d3.Selection<SVGTextElement, unknown, SVGGElement, unknown>;\r\n  private simulation: d3.Simulation<d3.SimulationNodeDatum, undefined>;\r\n\r\n  constructor(protected logger: Logger, protected graphService: GraphService) {\r\n    super(logger, graphService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.onInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.onDestroy();\r\n  }\r\n\r\n  protected destroy(): void {\r\n    this.stopSimulation();\r\n  }\r\n\r\n  private stopSimulation(): void {\r\n    this.logger.info(`${this.componentName} stop simulation called.`)();\r\n    this.simulation?.stop();\r\n    this.graphService.isSimulating = false;\r\n  }\r\n\r\n  protected init(data: GraphContainerModel): void {\r\n    super.beforeInit(data);\r\n    this.width = this.containerElementRef.nativeElement.clientWidth;\r\n    this.height = this.containerElementRef.nativeElement.clientHeight;\r\n    this.createSvg();\r\n    if (this.nodes && this.edges) {\r\n      if (this.simulation) {\r\n        this.simulation.stop();\r\n      }\r\n      this.simulation = d3.forceSimulation(this.nodes)\r\n        .force('link', d3.forceLink(this.edges).id((d: any) => d.id))\r\n        .force('charge', d3.forceManyBody().strength(-400))\r\n        .force('center', d3.forceCenter(this.width / 2, this.height / 2))\r\n        .force('x', d3.forceX())\r\n        .force('y', d3.forceY())\r\n        .on('end', () => {\r\n          this.graphService.isSimulating = false;\r\n        });\r\n      this.graphService.isSimulating = true;\r\n\r\n      this.edge = this.g\r\n        .selectAll('.edge')\r\n        .data(this.edges)\r\n        .join('line')\r\n        .attr('class', 'graphElement')\r\n        .attr('marker-end', 'url(#arrowhead)')\r\n        .attr('stroke', (d: EdgeViewGraphModel) => {\r\n          if (d?.refTransfer?.type) {\r\n            switch (d.refTransfer.type) {\r\n              case ChainTxEventType.MINT:\r\n                return AppConstants.TX_EVENT_MINT_COLOR;\r\n              case ChainTxEventType.BURN:\r\n                return AppConstants.TX_EVENT_BURN_COLOR;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n          return AppConstants.TX_EVENT_TRANSFER_COLOR;\r\n        })\r\n        .attr('stroke-opacity', 0.6)\r\n        .attr('stroke-width', (d: EdgeViewGraphModel) => GraphUtil.calculateEdgeWidth(d.strength))\r\n        .on('click', this.handleClick);\r\n\r\n      if (this.graphService.drawEdgeLabel) {\r\n        this.edgeLabel = this.g\r\n          .selectAll('.edgeLabel')\r\n          .data(this.edges)\r\n          .enter()\r\n          .append('text')\r\n          .style('pointer-events', 'none')\r\n          .attr('font-size', 5)\r\n          .attr('fill', 'black')\r\n          .attr('class', 'graphElement')\r\n          .text((d: EdgeViewGraphModel) => d.name);\r\n      }\r\n\r\n      this.node = this.g\r\n        .selectAll('.node')\r\n        .data(this.nodes)\r\n        .join('circle')\r\n        .attr('stroke', '#fff')\r\n        .attr('stroke-width', 1.5)\r\n        .attr('r', (d: NodeViewGraphModel) => GraphUtil.calculateNodeRadius(d.weight))\r\n        .attr('fill', AppConstants.SECONDARY_COLOR)\r\n        .attr('class', 'graphElement')\r\n        .on('click', this.handleClick)\r\n        .call(this.drag());\r\n\r\n      if (this.graphService.drawNodeLabel) {\r\n        this.nodeLabel = this.g\r\n          .selectAll('.nodeLabel')\r\n          .data(this.nodes)\r\n          .enter()\r\n          .append('text')\r\n          .attr('font-size', 10)\r\n          .attr('fill', 'black')\r\n          .attr('class', 'graphElement')\r\n          .text((d: NodeViewGraphModel) => d.name);\r\n      }\r\n\r\n      this.node.append('title')\r\n        .text((d: NodeViewGraphModel) => d.id);\r\n\r\n      this.node.append('text')\r\n        .attr('font-size', 10)\r\n        .attr('fill', 'black')\r\n        .text((d: NodeViewGraphModel) => d.name);\r\n\r\n      this.simulation.on('tick', () => {\r\n        this.graphService.isSimulating = true;\r\n        this.edge\r\n          .attr('x1', (d: EdgeViewGraphModel) => d.source.x)\r\n          .attr('y1', (d: EdgeViewGraphModel) => d.source.y)\r\n          .attr('x2', (d: EdgeViewGraphModel) => d.target.x)\r\n          .attr('y2', (d: EdgeViewGraphModel) => d.target.y);\r\n        if (this.graphService.drawEdgeLabel) {\r\n          this.edgeLabel\r\n            .attr('x', (d: EdgeViewGraphModel) => (d.source.x + d.target.x) / 2)\r\n            .attr('y', (d: EdgeViewGraphModel) => (d.source.y + d.target.y) / 2);\r\n        }\r\n        this.node\r\n          .attr('cx', (d: NodeViewGraphModel) => d.x)\r\n          .attr('cy', (d: NodeViewGraphModel) => d.y);\r\n        if (this.graphService.drawNodeLabel) {\r\n          this.nodeLabel\r\n            .attr('x', (d: NodeViewGraphModel) => d.x)\r\n            .attr('y', (d: NodeViewGraphModel) => d.y);\r\n        }\r\n      });\r\n    }\r\n    super.afterInit();\r\n  }\r\n\r\n  private createSvg(): void {\r\n    d3.select('#svgContainer').remove();\r\n    this.svg = d3.select('#container')\r\n      .append('svg')\r\n      .attr('id', 'svgContainer')\r\n      .attr('width', this.width)\r\n      .attr('height', this.height)\r\n      .on('click', () => {\r\n        this.g.selectAll('.graphElement').style('opacity', 1);\r\n        this.selectEmitter.emit(undefined);\r\n      });\r\n\r\n    // Draw arrows\r\n    if (this.graphService.drawArrow) {\r\n      this.svg.append('defs')\r\n        .append('marker')\r\n        .attr('id', 'arrowhead')\r\n        .attr('viewBox', '-0 -5 10 10')\r\n        .attr('refX', 10)\r\n        .attr('refY', 0)\r\n        .attr('orient', 'auto')\r\n        .attr('markerWidth', 10)\r\n        .attr('markerHeight', 10)\r\n        .attr('xoverflow', 'visible')\r\n        .append('svg:path')\r\n        .attr('d', 'M 0,-2.5 L 5,0 L 0,2.5')\r\n        .attr('fill', '#ccc')\r\n        .attr('stroke', '#ccc');\r\n    }\r\n\r\n    this.g = this.svg.append('g');\r\n\r\n    super.registerMouseWheelEvent(this.svg.node());\r\n\r\n    this.zoom = d3.zoom()\r\n      .extent([[0, 0], [this.width, this.height]])\r\n      .scaleExtent([0, 10])\r\n      .on('zoom', (e: any) => {\r\n        this.g.attr('transform', e.transform);\r\n      });\r\n    this.svg.call(this.zoom);\r\n  }\r\n\r\n  private drag(): any {\r\n    const dragstarted = (event: any, d: any) => {\r\n      if (!event.active) {\r\n        this.simulation.alphaTarget(0.3).restart();\r\n      }\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const dragged = (event: any, d: any) => {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n    };\r\n\r\n    const dragended = (event: any, d: any) => {\r\n      if (!event.active) {\r\n        this.simulation.alphaTarget(0);\r\n      }\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    return d3.drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended);\r\n  }\r\n\r\n  private handleClick = (event: any, d: NodeViewGraphModel | EdgeViewGraphModel) => {\r\n    event.stopPropagation();\r\n    this.g.selectAll('.graphElement').style('opacity', (o: any) => {\r\n      if (d instanceof EdgeViewGraphModel) {\r\n        if (o instanceof EdgeViewGraphModel) {\r\n          // d = EDGE and o = EDGE\r\n          if (o === d) {\r\n            return 1.0;\r\n          }\r\n          return 0;\r\n        } else if (o instanceof NodeViewGraphModel) {\r\n          // d = EDGE and o = NODE\r\n          if (o.id === d.source.id || o.id === d.target.id) {\r\n            return 1.0;\r\n          }\r\n          return 0;\r\n        } else {\r\n          return 0;\r\n        }\r\n      } else {\r\n        if (o instanceof EdgeViewGraphModel) {\r\n          // d = NODE and o = EDGE\r\n          if (o.source.id === d.id || o.target.id === d.id) {\r\n            return 1.0;\r\n          }\r\n          return 0;\r\n        } else if (o instanceof NodeViewGraphModel) {\r\n          // d = NODE and o = NODE\r\n          if (o.id === d.id) {\r\n            return 1;\r\n          }\r\n          if (this.isConnected(o.id, d.id)) {\r\n            return 0.5;\r\n          }\r\n          return 0;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n    d3.select(event.target).style('opacity', 1);\r\n\r\n    super.handleSelectedElement(d);\r\n  }\r\n\r\n  protected center(count: number): void {\r\n    if (!this.state.isDestroyed && !this.state.isZoomed) {\r\n      const { width, height } = this.g.node().getBBox();\r\n      if (width && height) {\r\n        const scale = Math.min(this.width / width, this.height / height) * 0.8;\r\n        if (count > 0) {\r\n          this.svg.transition()\r\n            .duration(750)\r\n            .call(this.zoom.scaleTo, scale);\r\n        }\r\n      }\r\n      if (this.graphService.isSimulating && count < 5) {\r\n        setTimeout(() => {\r\n          this.center(++count);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div id=\"container\" #containerElementRef></div>","export enum ChainType {\r\n  TEST = 0,\r\n  ETH_MAIN = 1,\r\n  XDAI_MAIN = 2\r\n}\r\n\r\nexport enum ChainTxEventType {\r\n  UNKNOWN = 0,\r\n  MINT = 1,\r\n  TRANSFER = 2,\r\n  BURN = 3,\r\n  BRIDGE_START = 4,\r\n  BRIDGE_END = 5\r\n}\r\n\r\nexport enum ChainSourceType {\r\n  UNKNOWN = 0,\r\n  FILE = 1,\r\n  RPC = 2,\r\n  GRAPHQL = 3\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport axios from 'axios';\r\nimport { ChainType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { SubgraphStatContainerModel, SubgraphTransactionModel } from '../models/subgraph.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TheGraphClient {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  private handleResponse(response: any, transformFn: (e: any) => any): Promise<any> {\r\n    if (response?.data || response?.error) {\r\n      if (response.data) {\r\n        if (Array.isArray(response.data)) {\r\n          return Promise.resolve(response.data.map((e: any) => transformFn(e)));\r\n        } else {\r\n          return Promise.resolve(transformFn(response.data));\r\n        }\r\n      }\r\n    }\r\n    return Promise.reject(response);\r\n  }\r\n\r\n  public getTransactions(chain: ChainConfigModel, limit: number = 1000, lastIndex: number = 0): Promise<SubgraphTransactionModel[]> {\r\n    return axios.post(chain.theGraphUrl, {\r\n      query: `{\r\n        transactions(first: ${limit}, orderBy: index, orderDirection: asc, where: { index_gt: ${lastIndex} }) {\r\n          id\r\n          index\r\n          from\r\n          to\r\n          blockNumber\r\n          blockTimestamp\r\n          ${this.getTransferEventsQuery(chain.type)}\r\n        }\r\n      }`\r\n    }).then(result => {\r\n      return this.handleResponse(result?.data, (e: any) => {\r\n        return e?.transactions?.map((e1: any) => SubgraphTransactionModel.fromJS(e1));\r\n      });\r\n    }).catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n\r\n  public getStatContainer(url: string): Promise<SubgraphStatContainerModel> {\r\n    return axios.post(url, {\r\n      query: `{\r\n        statsContainers {\r\n          id,\r\n          lastAccountIndex,\r\n          lastAccountSnapshotIndex,\r\n          lastTransactionIndex,\r\n          lastTransferEventIndex\r\n        }\r\n      }`\r\n    }).then(result => {\r\n      return this.handleResponse(result?.data, (e: any) => {\r\n        const containers = e?.statsContainers?.map((e1: any) => SubgraphStatContainerModel.fromJS(e1));\r\n        return containers?.length > 0 ? containers[0] : undefined;\r\n      });\r\n    }).catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n\r\n  private getTransferEventsQuery(chainType: ChainType): string {\r\n    switch (chainType) {\r\n      case ChainType.ETH_MAIN:\r\n        return `transferEvents {\r\n          id\r\n          index\r\n          transaction\r\n          logIndex\r\n          blockNumber\r\n          blockTimestamp\r\n          from\r\n          to\r\n          amount\r\n        }`;\r\n      case ChainType.XDAI_MAIN:\r\n        return `transferEvents {\r\n          id\r\n          index\r\n          transaction\r\n          logIndex\r\n          blockNumber\r\n          blockTimestamp\r\n          from\r\n          to\r\n          amount\r\n          tokenType\r\n        }`;\r\n      default:\r\n        break;\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport cytoscape from 'cytoscape';\r\nimport fcose from 'cytoscape-fcose';\r\nimport klay from 'cytoscape-klay';\r\nimport { AppConstants } from '../../app.constants';\r\nimport { ChainTxEventType } from '../../enums/chain.enum';\r\nimport { EdgeDataModel, EdgeGraphModel, GraphContainerModel, GraphScratchModel, NodeDataModel, NodeGraphModel } from '../../models/graph.model';\r\nimport { GraphService } from '../../services/graph.service';\r\nimport { Logger } from '../../services/logger.service';\r\nimport { SharedGraphLibComponent } from '../shared/shared-graph-lib.component';\r\n\r\n@Component({\r\n  selector: 'hopr-cytoscape',\r\n  templateUrl: './cytoscape.component.html',\r\n  styleUrls: ['./cytoscape.component.css'],\r\n})\r\n\r\nexport class CytoscapeComponent extends SharedGraphLibComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() public style: any;\r\n  @Input() public layout: any;\r\n  @Input() public zoom: any;\r\n\r\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\r\n\r\n  protected readonly componentName: string = 'Cytoscape';\r\n\r\n  private cy: cytoscape.Core;\r\n\r\n  constructor(protected logger: Logger, protected graphService: GraphService) {\r\n    super(logger, graphService);\r\n    cytoscape.use(fcose);\r\n    cytoscape.use(klay);\r\n\r\n    this.layout = this.layout || {\r\n      name: 'grid',\r\n      animate: false,\r\n      spacingFactor: 2\r\n    };\r\n\r\n    this.zoom = this.zoom || {\r\n      min: 0.01,\r\n      max: 3.0\r\n    };\r\n\r\n    this.style = this.style || [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          'height': 'mapData(weight, 1, 100, 20, 60)',\r\n          'width': 'mapData(weight, 1, 100, 20, 60)',\r\n          'font-size': 'mapData(weight, 1, 100, 5, 10)',\r\n          // 'content': 'data(name)',\r\n          'text-valign': 'center',\r\n          'background-color': AppConstants.SECONDARY_COLOR\r\n        }\r\n      },\r\n      {\r\n        selector: ':selected',\r\n        style: {\r\n          'border-width': 3,\r\n          'border-color': 'black',\r\n          'background-color': '#999'\r\n        }\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          // 'curve-style': 'bezier',\r\n          'curve-style': 'straight',\r\n          // 'curve-style': 'haystack',\r\n          'opacity': 0.666,\r\n          'width': 1,\r\n          // 'width': 'mapData(strength, 1, 100, 1, 10)',\r\n          'target-arrow-shape': 'triangle',\r\n          'line-color': (d: any) => {\r\n            switch (d?.scratch('transfer')?.type || ChainTxEventType.UNKNOWN) {\r\n              case ChainTxEventType.MINT:\r\n                return AppConstants.TX_EVENT_MINT_COLOR;\r\n              case ChainTxEventType.BURN:\r\n                return AppConstants.TX_EVENT_BURN_COLOR;\r\n              default:\r\n                break;\r\n            }\r\n            return AppConstants.TX_EVENT_TRANSFER_COLOR;\r\n          }\r\n        }\r\n      },\r\n      {\r\n        selector: '.faded',\r\n        style: {\r\n          'opacity': 0,\r\n          'text-opacity': 0\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.onInit();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.onDestroy();\r\n  }\r\n\r\n  protected destroy(): void {\r\n    this.cy.destroy();\r\n  }\r\n\r\n  protected init(data: GraphContainerModel): void {\r\n    super.beforeInit(data);\r\n    if (data) {\r\n      if (this.cy) {\r\n        this.cy.destroy();\r\n      }\r\n      this.cy = cytoscape({\r\n        container: this.containerElementRef.nativeElement,\r\n        layout: this.layout,\r\n        minZoom: this.zoom.min,\r\n        maxZoom: this.zoom.max,\r\n        style: this.style,\r\n        elements: data as any,\r\n      });\r\n\r\n      this.cy.on('tap', 'node', (e: any) => {\r\n        const node: cytoscape.NodeSingular = e.target;\r\n        if (node.selected()) {\r\n          node.unselect();\r\n          this.unselectAll();\r\n        } else {\r\n          const neighborhood = node.neighborhood().add(node);\r\n          this.cy.elements().addClass('faded');\r\n          neighborhood.removeClass('faded');\r\n          this.selectEmitter.emit(new NodeGraphModel({\r\n            data: new NodeDataModel({\r\n              id: node.data('id'),\r\n              name: node.data('name'),\r\n              weight: node.data('weight')\r\n            })\r\n          }));\r\n        }\r\n      });\r\n\r\n      this.cy.on('tap', 'edge', (e: any) => {\r\n        const edge: cytoscape.EdgeSingular = e.target;\r\n        if (edge.selected()) {\r\n          edge.unselect();\r\n          this.unselectAll();\r\n        } else {\r\n          this.cy.elements().addClass('faded');\r\n          edge.removeClass('faded');\r\n          edge.source().removeClass('faded');\r\n          edge.target().removeClass('faded');\r\n          this.selectEmitter.emit(new EdgeGraphModel({\r\n            data: new EdgeDataModel({\r\n              name: edge.data('name'),\r\n              source: edge.data('source'),\r\n              target: edge.data('target'),\r\n              strength: edge.data('strength')\r\n            }),\r\n            scratch: new GraphScratchModel({\r\n              refTransfer: edge.scratch('refTransfer')\r\n            })\r\n          }));\r\n        }\r\n      });\r\n\r\n      this.cy.on('tap', (e: any) => {\r\n        if (e.target === this.cy) {\r\n          this.unselectAll();\r\n        }\r\n      });\r\n    }\r\n    super.afterInit();\r\n  }\r\n\r\n  private unselectAll(): void {\r\n    this.cy.elements().removeClass('faded');\r\n    this.selectEmitter.emit(undefined);\r\n  }\r\n\r\n  protected center(counter: number): void {\r\n\r\n  }\r\n}\r\n","<div id=\"container\" #containerElementRef></div>","import { ChainSourceType, ChainType } from '../enums/chain.enum';\r\nimport { GraphLibraryType } from '../enums/graph.enum';\r\n\r\nexport abstract class TypeModel<T> {\r\n  type: T;\r\n  name: string;\r\n\r\n  public constructor(init?: Partial<TypeModel<T>>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ChainTypeModel extends TypeModel<ChainType> {\r\n  public constructor(init?: Partial<ChainTypeModel>) {\r\n    super(init);\r\n  }\r\n}\r\n\r\nexport class ChainSourceTypeModel extends TypeModel<ChainSourceType> {\r\n  public constructor(init?: Partial<ChainSourceTypeModel>) {\r\n    super(init);\r\n  }\r\n}\r\n\r\nexport class GraphLibraryTypeModel extends TypeModel<GraphLibraryType> {\r\n  public constructor(init?: Partial<GraphLibraryTypeModel>) {\r\n    super(init);\r\n  }\r\n}\r\n","/* (ignored) */","import { Injectable } from '@angular/core';\r\nimport { ChainSourceType } from '../enums/chain.enum';\r\nimport { IChainExtractor } from '../extractors/base.extractor';\r\nimport { FileChainExtractor } from '../extractors/file.extractor';\r\nimport { GraphqlChainExtractor } from '../extractors/graphql.extractor';\r\nimport { RpcChainExtractor } from '../extractors/rpc.extractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChainExtractorFactory {\r\n\r\n  constructor(\r\n    private fileExtractor: FileChainExtractor,\r\n    private rpcExtractor: RpcChainExtractor,\r\n    private graphqlExtractor: GraphqlChainExtractor\r\n  ) {\r\n  }\r\n\r\n  public get(type: ChainSourceType): IChainExtractor {\r\n    switch (type) {\r\n      case ChainSourceType.GRAPHQL:\r\n        return this.graphqlExtractor;\r\n      case ChainSourceType.RPC:\r\n        return this.rpcExtractor;\r\n      case ChainSourceType.FILE:\r\n      default:\r\n        return this.fileExtractor;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EthersClient } from '../clients/ethers.client';\r\nimport { ChainSourceType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel } from '../models/event.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { BaseChainExtractor } from './base.extractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RpcChainExtractor extends BaseChainExtractor {\r\n\r\n  constructor(protected logger: Logger, private client: EthersClient) {\r\n    super(logger);\r\n  }\r\n\r\n  protected get type(): ChainSourceType {\r\n    return ChainSourceType.RPC;\r\n  }\r\n\r\n  protected async extractAsyncInternal(chain: ChainConfigModel): Promise<EventModel[]> {\r\n    return this.client.getAllEvents(chain).then(result => {\r\n      if (Array.isArray(result)) {\r\n        return Promise.resolve(result.map(e => EventModel.fromJS(e, chain)));\r\n      }\r\n      return Promise.resolve(undefined);\r\n    }).catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ethers } from 'ethers';\r\nimport { ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { Ensure } from '../utils/ensure.util';\r\nimport { FileUtil } from '../utils/file.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EthersClient {\r\n\r\n  constructor(private logger: Logger, private fileUtil: FileUtil) {\r\n\r\n  }\r\n\r\n  public createEthersProvider(url: string): ethers.providers.Provider {\r\n    Ensure.notNullOrWhiteSpace(url, 'url');\r\n    return new ethers.providers.JsonRpcProvider(url);\r\n  }\r\n\r\n  public async getBlockNumberAsync(provider: ethers.providers.Provider): Promise<number> {\r\n    const blockNumber = await provider.getBlockNumber();\r\n    this.logger.info('Current block number', blockNumber)();\r\n    return blockNumber;\r\n  }\r\n\r\n  public async getSymbolAsync(contract: ethers.Contract): Promise<string> {\r\n    const symbol = await contract.symbol();\r\n    this.logger.info('symbol', symbol)();\r\n    return symbol;\r\n  }\r\n\r\n  public async getBalanceAsync(contract: ethers.Contract, address: string): Promise<string> {\r\n    const balance = await contract.balanceOf(address);\r\n    const balanceFormatted = ethers.utils.formatUnits(balance, 18);\r\n    this.logger.info('balance', balanceFormatted)();\r\n    return balanceFormatted;\r\n  }\r\n\r\n  public async getAllEvents(chain: ChainConfigModel): Promise<any> {\r\n    let events = [];\r\n    events = events.concat(await this.getTokenEvents(chain));\r\n    events = events.concat(await this.getBridgeEvents(chain));\r\n    return events;\r\n  }\r\n\r\n  public async getTokenEvents(chain: ChainConfigModel): Promise<any> {\r\n    const provider = this.createEthersProvider(chain.rpcProviderUrl);\r\n    const blockNumber = await this.getBlockNumberAsync(provider);\r\n    const abi = await this.fileUtil.readFileAsync(chain.tokenContractAbiPath);\r\n    const contract = new ethers.Contract(chain.tokenContractAddress, JSON.parse(abi), provider);\r\n    // this.logger.info(chain.tokenContractAddress, await contract.name())();\r\n    let events = [];\r\n    for (const eventType of [ChainTxEventType.MINT, ChainTxEventType.TRANSFER, ChainTxEventType.BURN]) {\r\n      events = events.concat(await this.getEventsByTypeAsync(chain, contract, eventType, blockNumber));\r\n    }\r\n    return events;\r\n  }\r\n\r\n  public async getBridgeEvents(chain: ChainConfigModel): Promise<any> {\r\n    const provider = this.createEthersProvider(chain.rpcProviderUrl);\r\n    const blockNumber = await this.getBlockNumberAsync(provider);\r\n    const abi = await this.fileUtil.readFileAsync(chain.bridgeContractAbiPath);\r\n    const contract = new ethers.Contract(chain.bridgeContractAddress, JSON.parse(abi), provider);\r\n    // this.logger.info(chain.bridgeContractAddress)();\r\n    let events = [];\r\n    for (const eventType of [ChainTxEventType.BRIDGE_START, ChainTxEventType.BRIDGE_END]) {\r\n      events = events.concat(await this.getEventsByTypeAsync(chain, contract, eventType, blockNumber));\r\n    }\r\n    return events;\r\n  }\r\n\r\n  public async getEventsByTypeAsync(\r\n    chain: ChainConfigModel,\r\n    contract: ethers.Contract,\r\n    type: ChainTxEventType,\r\n    blockNumber: number\r\n  ): Promise<ethers.Event[]> {\r\n    const chainName = ChainType[chain.type];\r\n    const eventSignature = chain.mapTxEventTypeToString(type);\r\n    if (CommonUtil.isNullOrWhitespace(eventSignature)) {\r\n      this.logger.info(`Extract ${ChainTxEventType[type]} events of ${chainName} skipped (no signature found).`)();\r\n      return Promise.resolve([]);\r\n    } else {\r\n      this.logger.info(`Extract ${eventSignature} events of ${chainName} started.`)();\r\n      // Create a filter e.g. contract.filters.Transfer() if the eventName is equal to Transfer\r\n      let filter: ethers.EventFilter;\r\n      switch (type) {\r\n        case ChainTxEventType.BRIDGE_START:\r\n        case ChainTxEventType.BRIDGE_END:\r\n          // Filter by token smart contract address\r\n          // - TokensBridged(address indexed token, address indexed recipient, uint256 value, bytes32 indexed messageId)\r\n          // - TokensBridgingInitiated(index_topic_1 address token, index_topic_2 address sender, ...)\r\n          filter = contract.filters[eventSignature](chain.tokenContractAddress);\r\n          break;\r\n        default:\r\n          filter = contract.filters[eventSignature]();\r\n          break;\r\n      }\r\n      const events = await this.getEventsByBlockAsync(contract, filter, chain.startBlock, blockNumber);\r\n      this.logger.info(`Extract ${eventSignature} events of ${chainName} ended.`)();\r\n      return events;\r\n    }\r\n  }\r\n\r\n  public async getEventsByBlockAsync(\r\n    contract: ethers.Contract, filter: ethers.EventFilter, fromBlock: number, toBlock: number\r\n  ): Promise<ethers.Event[]> {\r\n    if (fromBlock <= toBlock) {\r\n      try {\r\n        return await contract.queryFilter(filter, fromBlock, toBlock);\r\n      }\r\n      catch (error) {\r\n        const midBlock = (fromBlock + toBlock) >> 1;\r\n        this.logger.info(`Divide and conquer block ${midBlock}`)();\r\n        const arr1 = await this.getEventsByBlockAsync(contract, filter, fromBlock, midBlock);\r\n        const arr2 = await this.getEventsByBlockAsync(contract, filter, midBlock + 1, toBlock);\r\n        return [...arr1, ...arr2];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  public async test(contract: ethers.Contract): Promise<void> {\r\n    const filter = contract.filters.Burn();\r\n    const events = await contract.queryFilter(filter);\r\n    this.logger.info('test', events)();\r\n    if (events && events.length > 0) {\r\n      const test = events[0];\r\n      this.logger.info(test.decode(test.data, test.topics))();\r\n    }\r\n  }\r\n}\r\n","import { LogEventType } from '../enums/log.enum';\r\n\r\nexport class LogEventModel {\r\n  type: LogEventType;\r\n  banner: string;\r\n  args: any[];\r\n\r\n  public constructor(init?: Partial<LogEventModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  version: require('../../package.json').version\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConstants } from '../../app.constants';\r\nimport { ChainTxEventType } from '../../enums/chain.enum';\r\nimport { GraphEventType, GraphLibraryType } from '../../enums/graph.enum';\r\nimport { ChainFilterItemModel } from '../../models/chain.model';\r\nimport { TransferEventModel } from '../../models/event.model';\r\nimport { BaseGraphModel, EdgeGraphModel, GraphEventModel, NodeGraphModel } from '../../models/graph.model';\r\nimport { ConfigService } from '../../services/config.service';\r\nimport { GraphService } from '../../services/graph.service';\r\n\r\n@Component({\r\n  selector: 'hopr-network-graph',\r\n  templateUrl: './graph.component.html',\r\n  styleUrls: ['./graph.component.css']\r\n})\r\n\r\nexport class GraphComponent implements OnInit, OnDestroy {\r\n\r\n  private _showTransfers: boolean;\r\n\r\n  private subs: Subscription[] = [];\r\n\r\n  public node: NodeGraphModel;\r\n  public edge: EdgeGraphModel;\r\n  public transfers: TransferEventModel[];\r\n  public message: string;\r\n\r\n  public graphLibraries = {\r\n    d3: GraphLibraryType.D3,\r\n    cytoscape: GraphLibraryType.CYTOSCAPE,\r\n    stardust: GraphLibraryType.STARDUST,\r\n    d3canvas: GraphLibraryType.D3_CANVAS\r\n  };\r\n\r\n  constructor(private configService: ConfigService, private graphService: GraphService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.graphService.onChangeSubject) {\r\n      const sub1 = this.graphService.onChangeSubject.subscribe({\r\n        next: (data: GraphEventModel) => {\r\n          setTimeout(() => {\r\n            this.handleOnChangeSubject(data);\r\n          }, 0);\r\n        }\r\n      });\r\n      this.subs.push(sub1);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.subs.forEach(sub => {\r\n      sub.unsubscribe();\r\n    });\r\n    this.subs = [];\r\n  }\r\n\r\n  private handleOnChangeSubject(data: GraphEventModel): void {\r\n    if (data) {\r\n      switch (data.type) {\r\n        case GraphEventType.DATA_CHANGED:\r\n          this.onDataChanged(this.graphService.currentData);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private onDataChanged(data: any): void {\r\n    this.node = undefined;\r\n    this.edge = undefined;\r\n    this.transfers = undefined;\r\n    this._showTransfers = false;\r\n    if (Array.isArray(data?.nodes) && data.nodes.length > 0) {\r\n      this.message = undefined;\r\n    } else {\r\n      this.message = 'Graph is empty. Consider changing the minimum weight.';\r\n    }\r\n  }\r\n\r\n  public get showTransfers(): boolean {\r\n    return this._showTransfers || this.transfers?.length <= 100;\r\n  }\r\n\r\n  public nodeChange(event: BaseGraphModel): void {\r\n    this._showTransfers = false;\r\n    if (event instanceof NodeGraphModel) {\r\n      this.node = event;\r\n      this.transfers = this.node.scratch.transfers;\r\n      this.edge = undefined;\r\n    } else if (event instanceof EdgeGraphModel) {\r\n      this.edge = event;\r\n      this.transfers = this.edge.scratch.transfers;\r\n      this.node = undefined;\r\n    } else {\r\n      this.node = undefined;\r\n      this.edge = undefined;\r\n      this.transfers = undefined;\r\n    }\r\n  }\r\n\r\n  public get isLoading(): boolean {\r\n    return this.graphService.isLoading;\r\n  }\r\n\r\n  public get selectedGraphLibraryType(): GraphLibraryType {\r\n    return this.configService.config.selectedGraphLibraryType;\r\n  }\r\n\r\n  public get filter(): Map<string, ChainFilterItemModel> {\r\n    return this.graphService.filter;\r\n  }\r\n\r\n  public revealTransfers(): void {\r\n    this._showTransfers = true;\r\n  }\r\n\r\n  public getTransferColor(transfer: TransferEventModel): string {\r\n    if (transfer) {\r\n      switch (transfer.type) {\r\n        case ChainTxEventType.BURN:\r\n          return AppConstants.TX_EVENT_BURN_COLOR;\r\n        case ChainTxEventType.MINT:\r\n          return AppConstants.TX_EVENT_MINT_COLOR;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return '#000';\r\n  }\r\n\r\n  public buildAddressUrl(address: string): string {\r\n    if (address && this.configService.config?.selectedChain?.addressUrl) {\r\n      return this.configService.config.selectedChain.addressUrl.replace('{address}', address);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public buildTxUrl(transactionHash: string): string {\r\n    if (transactionHash && this.configService.config?.selectedChain?.txUrl) {\r\n      return this.configService.config.selectedChain.txUrl.replace('{transactionHash}', transactionHash);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public changeFilter(id: string, event: any): void {\r\n    this.graphService.changeFilter(id);\r\n  }\r\n}\r\n","<div id=\"graphContainer\" [ngClass]=\"{'loading': isLoading}\">\r\n  <container-element [ngSwitch]=\"selectedGraphLibraryType\">\r\n    <hopr-cytoscape (selectEmitter)=\"nodeChange($event)\" *ngSwitchCase=\"graphLibraries.cytoscape\">\r\n    </hopr-cytoscape>\r\n    <hopr-stardust (selectEmitter)=\"nodeChange($event)\" *ngSwitchCase=\"graphLibraries.stardust\">\r\n    </hopr-stardust>\r\n    <hopr-d3canvas (selectEmitter)=\"nodeChange($event)\" *ngSwitchCase=\"graphLibraries.d3canvas\">\r\n    </hopr-d3canvas>\r\n    <hopr-d3 (selectEmitter)=\"nodeChange($event)\" *ngSwitchDefault>\r\n    </hopr-d3>\r\n  </container-element>\r\n</div>\r\n\r\n<div id=\"infoContainer\">\r\n  <div *ngIf=\"isLoading; else showMessageBlock\">\r\n    Loading...\r\n  </div>\r\n  <ng-template #showMessageBlock>\r\n    {{message}}\r\n  </ng-template>\r\n  <div id=\"info\" *ngIf=\"node || edge\">\r\n    <div *ngIf=\"node; else showEdgeBlock\">\r\n      Selected node ({{node?.data?.name}})\r\n      <ul>\r\n        <li>address: <a [href]=\"buildAddressUrl(node?.data?.id)\" target=\"_blank\">{{node?.data?.id}}</a></li>\r\n        <li>weight: {{node?.data?.weight}}</li>\r\n      </ul>\r\n    </div>\r\n    <ng-template #showEdgeBlock>\r\n      Selected edge ({{edge?.data?.name}})\r\n      <ul>\r\n        <li>address1: <a [href]=\"buildAddressUrl(edge?.data?.source)\" target=\"_blank\">{{edge?.data?.source}}</a></li>\r\n        <li>address2: <a [href]=\"buildAddressUrl(edge?.data?.target)\" target=\"_blank\">{{edge?.data?.target}}</a></li>\r\n      </ul>\r\n    </ng-template>\r\n    Transfers\r\n    <div *ngIf=\"!showTransfers; else showTransfersBlock\">\r\n      <ul>\r\n        <li>\r\n          <button (click)=\"revealTransfers()\">Show</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <ng-template #showTransfersBlock>\r\n      <ul *ngFor=\"let transfer of transfers\">\r\n        <li [ngStyle]=\"{color: getTransferColor(transfer)}\">amount: {{transfer.argsAmount}}</li>\r\n        <li *ngIf=\"transfer.blockTimestamp\">blockTimestamp: {{transfer.blockTimestamp}}</li>\r\n        <li *ngIf=\"node\">to: <a [href]=\"buildAddressUrl(transfer.argsTo)\" target=\"_blank\">{{transfer.argsTo}}</a></li>\r\n        <li *ngIf=\"transfer.transactionHash\">transactionHash: <a [href]=\"buildTxUrl(transfer.transactionHash)\"\r\n            target=\"_blank\">{{transfer.transactionHash}}</a></li>\r\n      </ul>\r\n    </ng-template>\r\n  </div>\r\n  <div id=\"filter\">\r\n    <ng-container *ngFor=\"let kvp of filter | keyvalue\">\r\n      <input type=\"checkbox\" [id]=\"kvp.key\" [name]=\"kvp.key\" [checked]=\"kvp.value.isSelected\"\r\n        (change)=\"changeFilter(kvp.key,$event)\">\r\n      <label [for]=\"kvp.key\"><b [style.color]=\"kvp.value.color\">{{kvp.value.name}}</b></label>\r\n    </ng-container>\r\n  </div>\r\n</div>","import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as d3 from 'd3';\nimport { AppConstants } from '../../app.constants';\nimport { ChainTxEventType } from '../../enums/chain.enum';\nimport { GraphContainerModel } from '../../models/graph.model';\nimport { GraphService } from '../../services/graph.service';\nimport { Logger } from '../../services/logger.service';\nimport { GraphUtil } from '../../utils/graph.util';\nimport { SharedGraphLibComponent } from '../shared/shared-graph-lib.component';\n\n@Component({\n  selector: 'hopr-d3canvas',\n  templateUrl: './d3canvas.component.html',\n  styleUrls: ['./d3canvas.component.css']\n})\nexport class D3CanvasComponent extends SharedGraphLibComponent implements OnInit, OnDestroy {\n\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\n\n  protected readonly componentName: string = 'D3Canvas';\n\n  private width: number;\n  private height: number;\n  private canvas: d3.Selection<HTMLCanvasElement, unknown, HTMLElement, any>;\n  private context: CanvasRenderingContext2D;\n  private zoom: d3.ZoomBehavior<Element, unknown>;\n  private simulation: d3.Simulation<d3.SimulationNodeDatum, undefined>;\n  private transform: any;\n\n  constructor(protected logger: Logger, protected graphService: GraphService) {\n    super(logger, graphService);\n  }\n\n  ngOnInit(): void {\n    super.onInit();\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n\n  protected destroy(): void {\n    this.stopSimulation();\n  }\n\n  private stopSimulation(): void {\n    this.logger.info(`${this.componentName} stop simulation called.`)();\n    this.simulation?.stop();\n    this.graphService.isSimulating = false;\n  }\n\n  protected init(data: GraphContainerModel): void {\n    super.beforeInit(data);\n    this.width = this.containerElementRef.nativeElement.clientWidth;\n    this.height = this.containerElementRef.nativeElement.clientHeight;\n    this.createCanvas();\n    if (this.nodes && this.edges) {\n      if (this.simulation) {\n        this.simulation.stop();\n      }\n      this.simulation = d3.forceSimulation(this.nodes)\n        .force('link', d3.forceLink(this.edges).id((d: any) => d.id))\n        .force('charge', d3.forceManyBody().strength(-400))\n        .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY())\n        .on('end', () => {\n          this.graphService.isSimulating = false;\n          this.logger.info(`${this.componentName} simulation ended.`)();\n        });\n      this.graphService.isSimulating = true;\n\n      this.simulation.on('tick', () => {\n        this.requestRender();\n      });\n    }\n    super.afterInit();\n  }\n\n  public requestRender(): void {\n    if (this.state.requestedAnimationFrame) {\n      return;\n    }\n    this.state.requestedAnimationFrame = requestAnimationFrame(() => {\n      this.render();\n    });\n  }\n\n  private render(): void {\n    this.state.requestedAnimationFrame = undefined;\n    this.context.save();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.translate(this.transform.x, this.transform.y);\n    this.context.scale(this.transform.k, this.transform.k);\n    this.drawEdges();\n    this.drawNodes();\n    this.context.restore();\n  }\n\n  private drawEdges(): void {\n    // draw links\n    this.context.strokeStyle = AppConstants.TX_EVENT_TRANSFER_COLOR;\n    this.context.beginPath();\n    this.edges.forEach((d) => {\n      if (d?.refTransfer?.type) {\n        switch (d.refTransfer.type) {\n          case ChainTxEventType.MINT:\n            this.context.strokeStyle = AppConstants.TX_EVENT_MINT_COLOR;\n            break;\n          case ChainTxEventType.BURN:\n            this.context.strokeStyle = AppConstants.TX_EVENT_BURN_COLOR;\n            break;\n          default:\n            this.context.strokeStyle = AppConstants.TX_EVENT_TRANSFER_COLOR;\n            break;\n        }\n      } else {\n        this.context.strokeStyle = AppConstants.TX_EVENT_TRANSFER_COLOR;\n      }\n      this.context.moveTo(d.source.x, d.source.y);\n      this.context.lineTo(d.target.x, d.target.y);\n    });\n    this.context.stroke();\n  }\n\n  private drawNodes(): void {\n    this.context.fillStyle = AppConstants.SECONDARY_COLOR;\n    this.context.beginPath();\n    this.nodes.forEach((d) => {\n      const radius = GraphUtil.calculateNodeRadius(d.weight);\n      this.context.moveTo(d.x + radius, d.y);\n      this.context.arc(d.x, d.y, radius, 0, 2 * Math.PI);\n      this.context.fillText(d.name, d.x, d.y);\n    });\n    this.context.fill();\n  }\n\n  private drawNodes1(): void {\n    this.nodes.forEach((d) => {\n      this.context.beginPath();\n      this.context.fillStyle = AppConstants.SECONDARY_COLOR;\n      const radius = GraphUtil.calculateNodeRadius(d.weight);\n      this.context.moveTo(d.x + radius, d.y);\n      this.context.arc(d.x, d.y, radius, 0, 2 * Math.PI);\n      this.context.fill();\n      this.context.beginPath();\n      this.context.fillStyle = AppConstants.TX_EVENT_BURN_COLOR;\n      this.context.fillText(d.name, d.x, d.y);\n    });\n  }\n\n  private createCanvas(): void {\n    d3.select('#canvasContainer').remove();\n    this.canvas = d3.select('#container')\n      .append('canvas')\n      .attr('id', 'canvasContainer')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .on('click', () => {\n        this.selectEmitter.emit(undefined);\n      });\n\n    this.context = this.canvas.node().getContext('2d');\n    this.transform = d3.zoomIdentity;\n\n    super.registerMouseWheelEvent(this.canvas.node());\n\n    // this.canvas.call(d3.drag().subject((e) => console.log(e)));\n    // this.canvas.call(this.drag());\n    this.zoom = d3.zoom()\n      .extent([[0, 0], [this.width, this.height]])\n      .scaleExtent([0, 10])\n      .on('zoom', (e: any) => {\n        this.transform = e.transform;\n        this.requestRender();\n      });\n    this.canvas.call(this.zoom);\n  }\n\n  protected center(count: number): void {\n    if (!this.state.isDestroyed && !this.state.isZoomed) {\n      const width = this.canvas.node().clientWidth;\n      const height = this.canvas.node().clientHeight;\n      // TODO: set min/max nodes\n      if (width && height) {\n        const scale = Math.min(this.width / width, this.height / height) * 0.8;\n        if (count > 0) {\n          this.canvas.transition()\n            .duration(750)\n            .call(this.zoom.scaleTo, scale);\n        }\n      }\n      if (this.graphService.isSimulating && count < 5) {\n        setTimeout(() => {\n          this.center(++count);\n        }, 1000);\n      }\n    }\n  }\n}\n","<div id=\"container\" #containerElementRef></div>","import { BigNumber } from '@ethersproject/bignumber';\r\nimport { ethers } from 'ethers';\r\nimport * as LZString from 'lz-string';\r\n\r\nexport class CommonUtil {\r\n\r\n  public static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  public static isNullOrWhitespace(value: string): boolean {\r\n    if (!CommonUtil.isString(value)) {\r\n      // console.log('Expected a string but got: ', value);\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  public static isObject(value: any): boolean {\r\n    return value && typeof value === 'object';\r\n  }\r\n\r\n  public static isFunction(value: any): boolean {\r\n    return value && typeof value === 'function';\r\n  }\r\n\r\n  public static toBigNumber(bn: any): BigNumber {\r\n    return BigNumber.from(bn);\r\n  }\r\n\r\n  public static toJsonString(data: any): string {\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n\r\n  public static formatBigNumber(bn: any): string {\r\n    return ethers.utils.formatUnits(BigNumber.from(bn), 18);\r\n  }\r\n\r\n  public static tryParseInt(value: string): number {\r\n    try {\r\n      return parseInt(value, 10);\r\n    } catch (error) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static timeout(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  public static compress(data: string): string {\r\n    return LZString.compressToUTF16(data);\r\n  }\r\n\r\n  public static decompress(data: string): string {\r\n    return LZString.decompressFromUTF16(data);\r\n  }\r\n\r\n  public static assign<T>(values: Partial<T>, ctor: new () => T): T {\r\n    const instance = new ctor();\r\n    return Object.keys(instance).reduce((acc, key) => {\r\n      acc[key] = values[key];\r\n      return acc;\r\n    }, {}) as T;\r\n  }\r\n\r\n  public static combineIndex(index1: string, index2: string): string {\r\n    if (CommonUtil.isNullOrWhitespace(index1) || CommonUtil.isNullOrWhitespace(index2)) {\r\n      return undefined;\r\n    }\r\n    if (index1 > index2) {\r\n      return `${index2}_${index1}`;\r\n    }\r\n    return `${index1}_${index2}`;\r\n  }\r\n\r\n  public static hexToRgb(hex: string): number[] {\r\n    if (CommonUtil.isNullOrWhitespace(hex)) {\r\n      return [0, 0, 0];\r\n    }\r\n    const bigint = parseInt(hex.startsWith('#') ? hex.substring(1, hex.length) : hex, 16);\r\n    const r = (bigint >> 16) & 255;\r\n    const g = (bigint >> 8) & 255;\r\n    const b = bigint & 255;\r\n    return [r, g, b];\r\n  }\r\n\r\n  public static scrollTo(element: HTMLElement, offset: number): void {\r\n    if (element) {\r\n      const y = element.getBoundingClientRect().top + window.pageYOffset - offset;\r\n      window.scrollTo({ top: y, behavior: 'smooth' });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CommonUtil } from './common.util';\r\nimport { FileUtil } from './file.util';\r\n\r\n@Injectable()\r\nexport class BrowserFileUtil extends FileUtil {\r\n\r\n  public async readFileAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return response.text();\r\n  }\r\n\r\n  public writeFile(data: any, path?: string): void {\r\n    const blob = new Blob([CommonUtil.toJsonString(data)], { type: 'application/json' });\r\n    const textFile = window.URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.setAttribute('download', 'data.json');\r\n    link.href = textFile;\r\n    document.body.appendChild(link);\r\n\r\n    // wait for the link to be added to the document\r\n    window.requestAnimationFrame(() => {\r\n      const event = new MouseEvent('click');\r\n      link.dispatchEvent(event);\r\n      document.body.removeChild(link);\r\n      // revoke the object URL to avoid memory leaks.\r\n      window.URL.revokeObjectURL(textFile);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LogEventType } from '../enums/log.enum';\r\nimport { LogEventModel } from '../models/log.model';\r\nimport { CommonUtil } from '../utils/common.util';\r\n\r\nexport abstract class Logger {\r\n  abstract get onLogEventSubject(): Subject<LogEventModel>;\r\n  abstract debug: any;\r\n  abstract info: any;\r\n  abstract warn: any;\r\n  abstract error: any;\r\n  abstract clear(): void;\r\n}\r\n\r\nconst noop = (): any => undefined;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DefaultLoggerService extends Logger {\r\n\r\n  private _onLogEventSubject: Subject<LogEventModel>;\r\n\r\n  constructor() {\r\n    super();\r\n    this._onLogEventSubject = new Subject<LogEventModel>();\r\n  }\r\n\r\n  public get onLogEventSubject(): Subject<LogEventModel> {\r\n    return this._onLogEventSubject;\r\n  }\r\n\r\n  private get isEnabled(): boolean {\r\n    return true;\r\n  }\r\n\r\n  private timestamp(type: string): string {\r\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\r\n  }\r\n\r\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\r\n    const mapFn = (e: any) => {\r\n      if (CommonUtil.isString(e)) {\r\n        return e;\r\n      } else if (e instanceof Error) {\r\n        return e.message;\r\n      }\r\n      return CommonUtil.toJsonString(e);\r\n    };\r\n    const result = new LogEventModel({\r\n      type: LogEventType.MESSAGE,\r\n      banner: this.timestamp(type),\r\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\r\n    });\r\n    this._onLogEventSubject.next(result);\r\n    return result;\r\n  }\r\n\r\n  get debug() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('DEBUG', args);\r\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('INFO', args);\r\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get warn() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('WARN', args);\r\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get error() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        if (args?.length > 0) {\r\n          if (!CommonUtil.isString(args[0])) {\r\n            args.push('(See console output for more information.)');\r\n          }\r\n        }\r\n        const result = this.createLogEventModel('ERROR', args);\r\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  public clear(): void {\r\n    this._onLogEventSubject.next(new LogEventModel({\r\n      type: LogEventType.CLEAR\r\n    }));\r\n  }\r\n}\r\n","export enum LogEventType {\r\n  MESSAGE = 0,\r\n  CLEAR = 1\r\n}\r\n","export enum GraphElementType {\r\n  NODE = 0,\r\n  EDGE = 1\r\n}\r\n\r\nexport enum GraphLibraryType {\r\n  D3 = 0,\r\n  CYTOSCAPE = 1,\r\n  STARDUST = 2,\r\n  D3_CANVAS = 3\r\n}\r\n\r\nexport enum GraphEventType {\r\n  DATA_CHANGED = 0,\r\n  STOP_SIMULATION = 1\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { AfterViewInit, Component } from '@angular/core';\r\nimport { AppConstants } from './app.constants';\r\nimport { ChainSourceType, ChainType } from './enums/chain.enum';\r\nimport { GraphLibraryType } from './enums/graph.enum';\r\nimport { StatModel } from './models/stat.model';\r\nimport { ChainSourceTypeModel, ChainTypeModel, GraphLibraryTypeModel } from './models/type.model';\r\nimport { ChainService } from './services/chain.service';\r\nimport { ConfigService } from './services/config.service';\r\nimport { GraphService } from './services/graph.service';\r\nimport { Logger } from './services/logger.service';\r\nimport { MomentUtil } from './utils/moment.util';\r\n\r\n@Component({\r\n  selector: 'hopr-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n  public minWeight = 0;\r\n  public selectedLibraryType: GraphLibraryType = GraphLibraryType.D3;\r\n  public selectedChainType: ChainType = ChainType.TEST;\r\n  public selectedChainStat: StatModel;\r\n  public chains: ChainTypeModel[] = AppConstants.CHAINS;\r\n  public libraries: GraphLibraryTypeModel[] = AppConstants.LIBRARIES;\r\n  public sources: ChainSourceTypeModel[] = AppConstants.SOURCES;\r\n\r\n  constructor(\r\n    private logger: Logger,\r\n    private momentUtil: MomentUtil,\r\n    private configService: ConfigService,\r\n    private chainService: ChainService,\r\n    private graphService: GraphService\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.setMinWeight();\r\n      this.setSelectedLibraryType();\r\n      this.setSelectedChainType();\r\n      this.load();\r\n    }, 0);\r\n  }\r\n\r\n  public changeMinWeight($event: any): void {\r\n    this.configService.config.minWeight = $event.target.value;\r\n    this.setMinWeight();\r\n    this.load();\r\n  }\r\n\r\n  public changeChain($event: any): void {\r\n    this.configService.config.selectedChainType = ChainType[ChainType[$event.target.value]];\r\n    this.setSelectedChainType();\r\n    this.setSelectedChainStat();\r\n    this.load();\r\n  }\r\n\r\n  public changeLibrary($event: any): void {\r\n    this.graphService.stopSimulation();\r\n    setTimeout(() => {\r\n      this.configService.config.selectedGraphLibraryType = GraphLibraryType[GraphLibraryType[$event.target.value]];\r\n      this.setSelectedLibraryType();\r\n      this.load();\r\n    }, 0);\r\n  }\r\n\r\n  public changeSource($event: any): void {\r\n    this.clear();\r\n    const source = ChainSourceType[ChainSourceType[$event.target.value]];\r\n    this.chainService.extractChainBySourceAsync(this.configService.config.selectedChainType, source).then(() => {\r\n      this.setSelectedChainStat();\r\n      this.graphService.load();\r\n    });\r\n  }\r\n\r\n  public get isLoading(): boolean {\r\n    return this.chainService.isExtracting;\r\n  }\r\n\r\n  public get showGraph(): boolean {\r\n    return !this.chainService.isExtracting && (this.selectedChainStat?.extractSuccess || this.selectedChainType === ChainType.TEST);\r\n  }\r\n\r\n  public get showStopSimulationButton(): boolean {\r\n    return this.graphService.isSimulating;\r\n  }\r\n\r\n  public get appVersion(): string {\r\n    return 'v' + this.configService.config.version;\r\n  }\r\n\r\n  public stopSimulation(): void {\r\n    this.graphService.stopSimulation();\r\n  }\r\n\r\n  public reload(): void {\r\n    this.chainService.clearAllAsync().then(() => {\r\n      this.load();\r\n    });\r\n  }\r\n\r\n  public formatDate(date: Date): string {\r\n    return this.momentUtil.getLocalReverseFormatted(date);\r\n  }\r\n\r\n  private setMinWeight(): void {\r\n    this.minWeight = this.configService.config.minWeight;\r\n  }\r\n\r\n  private setSelectedChainStat(): void {\r\n    this.chainService.getChainStatByType(this.configService.config.selectedChainType).then(result => {\r\n      this.selectedChainStat = result;\r\n    });\r\n  }\r\n\r\n  private setSelectedChainType(): void {\r\n    this.selectedChainType = this.configService.config.selectedChainType;\r\n  }\r\n\r\n  private setSelectedLibraryType(): void {\r\n    this.selectedLibraryType = this.configService.config.selectedGraphLibraryType;\r\n  }\r\n\r\n  private clear(): void {\r\n    this.logger.clear();\r\n    this.graphService.clear();\r\n  }\r\n\r\n  private load(): void {\r\n    this.clear();\r\n    this.chainService.extractAsync().then(() => {\r\n      this.setSelectedChainStat();\r\n      this.graphService.load();\r\n      // this.graphService.transformCrossChain();\r\n    });\r\n  }\r\n}\r\n","<div id=\"app\">\r\n  <div id=\"header\">\r\n    <span>HOPR network graph</span>\r\n    <div *ngIf=\"!isLoading\">\r\n      <select (change)=\"changeChain($event)\">\r\n        <option [value]=\"chain.type\" [selected]=\"chain.type === selectedChainType\" *ngFor=\"let chain of chains\">\r\n          {{chain.name}}\r\n        </option>\r\n      </select>\r\n\r\n      min. weight <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" [value]=\"minWeight\" (change)=\"changeMinWeight($event)\">\r\n      {{minWeight}}\r\n\r\n      <select (change)=\"changeLibrary($event)\">\r\n        <option [value]=\"library.type\" [selected]=\"library.type === selectedLibraryType\"\r\n          *ngFor=\"let library of libraries\">\r\n          {{library.name}}\r\n        </option>\r\n      </select>\r\n\r\n      <button *ngIf=\"showStopSimulationButton\" (click)=\"stopSimulation()\">Stop simulation</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"main\">\r\n    <hopr-logs [hidden]=\"showGraph\"></hopr-logs>\r\n    <hopr-network-graph *ngIf=\"showGraph\"></hopr-network-graph>\r\n  </div>\r\n\r\n  <div id=\"footer\">\r\n    <div *ngIf=\"!isLoading; else showLoadingBlock\">\r\n      <div *ngIf=\"selectedChainStat?.extractSuccess; else extractFailedBlock\">\r\n        Last block: {{selectedChainStat.lastBlock}}\r\n      </div>\r\n      <ng-template #extractFailedBlock>Load failed</ng-template>\r\n      <div *ngIf=\"selectedChainStat?.source\">\r\n        &nbsp;/ Source:\r\n        <select (change)=\"changeSource($event)\">\r\n          <option [value]=\"source.type\" [selected]=\"source.type === selectedChainStat.source\"\r\n            *ngFor=\"let source of sources\">\r\n            {{source.name}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <button (click)=\"reload()\">Reload</button>\r\n    </div>\r\n    <ng-template #showLoadingBlock>Loading...</ng-template>\r\n  </div>\r\n\r\n  <div id=\"appVersion\">\r\n    {{appVersion}}\r\n  </div>\r\n</div>","import { AppConstants } from '../app.constants';\r\nimport { ChainSourceType, ChainType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel } from '../models/event.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { Ensure } from '../utils/ensure.util';\r\n\r\nexport interface IChainExtractor {\r\n  extractAsync(chain: ChainConfigModel): Promise<EventModel[]>;\r\n}\r\n\r\nexport abstract class BaseChainExtractor implements IChainExtractor {\r\n\r\n  constructor(protected logger: Logger) {\r\n\r\n  }\r\n\r\n  protected abstract get type(): ChainSourceType;\r\n\r\n  protected get name(): string {\r\n    return AppConstants.SOURCES.find(e => e.type === this.type)?.name ?? 'Unknown';\r\n  }\r\n\r\n  public async extractAsync(chain: ChainConfigModel): Promise<EventModel[]> {\r\n    Ensure.notNull(chain, 'chain');\r\n    this.logger.info(`${this.name} extraction of ${ChainType[chain.type]} started.`)();\r\n    try {\r\n      const result = await this.extractAsyncInternal(chain);\r\n      this.logger.info(`${this.name} extraction of ${ChainType[chain.type]} ended.`)();\r\n      return result;\r\n    } catch (error) {\r\n      this.logger.error(error)();\r\n      return Promise.reject('Chain data could not be extracted.');\r\n    }\r\n  }\r\n\r\n  protected abstract extractAsyncInternal(chain: ChainConfigModel): Promise<EventModel[]>;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as DataForge from 'data-forge';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConstants } from '../app.constants';\r\nimport { ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { GraphEventType } from '../enums/graph.enum';\r\nimport { ChainFilterItemModel } from '../models/chain.model';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel, TokensBridgedEventModel, TokensBridgingInitiatedEventModel, TransferEventModel } from '../models/event.model';\r\nimport {\r\n  EdgeDataModel,\r\n  EdgeGraphModel,\r\n  GraphContainerModel,\r\n  GraphEventModel,\r\n  GraphScratchModel,\r\n  NodeDataModel,\r\n  NodeGraphModel\r\n} from '../models/graph.model';\r\nimport { EventRepository } from '../repositories/event.repository';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { Ensure } from '../utils/ensure.util';\r\nimport { FileUtil } from '../utils/file.util';\r\nimport { MomentUtil } from '../utils/moment.util';\r\nimport { ConfigService } from './config.service';\r\nimport { Logger } from './logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GraphService {\r\n\r\n  private _onChangeSubject: Subject<GraphEventModel>;\r\n  private _data: GraphContainerModel;\r\n  private _currentData: GraphContainerModel;\r\n  private _nodeMap: Map<string, NodeGraphModel>;\r\n  private _edgeMap: Map<string, EdgeGraphModel>;\r\n\r\n  public isLoading = false;\r\n  public isSimulating = false;\r\n  public drawArrow = false;\r\n  public drawEdgeLabel = false;\r\n  public drawNodeLabel = false;\r\n  public readonly filter: Map<string, ChainFilterItemModel>;\r\n\r\n  constructor(\r\n    private logger: Logger,\r\n    private configService: ConfigService,\r\n    private eventRepository: EventRepository,\r\n    private fileUtil: FileUtil,\r\n    private momentUtil: MomentUtil\r\n  ) {\r\n    this._onChangeSubject = new Subject<GraphEventModel>();\r\n    this.filter = new Map<string, ChainFilterItemModel>([\r\n      [\r\n        ChainTxEventType[ChainTxEventType.MINT],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.MINT],\r\n          name: 'Mint',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_MINT_COLOR\r\n        })\r\n      ],\r\n      [\r\n        ChainTxEventType[ChainTxEventType.TRANSFER],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.TRANSFER],\r\n          name: 'Transfer',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_TRANSFER_COLOR\r\n        })\r\n      ],\r\n      [\r\n        ChainTxEventType[ChainTxEventType.BURN],\r\n        new ChainFilterItemModel({\r\n          id: ChainTxEventType[ChainTxEventType.BURN],\r\n          name: 'Burn',\r\n          isSelected: true,\r\n          color: AppConstants.TX_EVENT_BURN_COLOR\r\n        })\r\n      ]\r\n    ]);\r\n  }\r\n\r\n  public get currentData(): GraphContainerModel {\r\n    return this._currentData;\r\n  }\r\n\r\n  public get onChangeSubject(): Subject<GraphEventModel> {\r\n    return this._onChangeSubject;\r\n  }\r\n\r\n  public clear(): void {\r\n    this._data = undefined;\r\n    this._currentData = undefined;\r\n    this._nodeMap = undefined;\r\n    this._edgeMap = undefined;\r\n    this.submitDataSubjectEvent(undefined);\r\n  }\r\n\r\n  public load(): void {\r\n    this.isLoading = true;\r\n    this.loadAsync().catch((error) => {\r\n      this.logger.info(error)();\r\n    }).finally(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public stopSimulation(): void {\r\n    this._onChangeSubject.next(new GraphEventModel({\r\n      type: GraphEventType.STOP_SIMULATION\r\n    }));\r\n  }\r\n\r\n  public changeFilter(id: string): void {\r\n    this.isLoading = true;\r\n    const item = this.filter.get(id);\r\n    if (item) {\r\n      item.isSelected = !item.isSelected;\r\n    }\r\n    const data = this.applyFilters(this._data);\r\n    this.submitDataSubjectEvent(data);\r\n  }\r\n\r\n  public async transformCrossChain(): Promise<void> {\r\n    const chain1 = this.configService.config.getChainByType(ChainType.ETH_MAIN);\r\n    const chain2 = this.configService.config.getChainByType(ChainType.XDAI_MAIN);\r\n    const bridgeAddress1 = chain1.bridgeContractAddress;\r\n    const bridgeAddress2 = chain2.bridgeContractAddress;\r\n    const events = await this.eventRepository.getAllAsync();\r\n\r\n    let eventsDataFrame = new DataForge.DataFrame(events).setIndex('_id').bake();\r\n    eventsDataFrame = eventsDataFrame.where(e => e.chainType === chain1.type || e.chainType === chain2.type);\r\n    const transfersDataFrame = eventsDataFrame.where(e => e.type === ChainTxEventType.TRANSFER).cast<TransferEventModel>();\r\n    this.logger.info('transfersDataFrame', transfersDataFrame.count())();\r\n\r\n    const startEvents = eventsDataFrame.where(e => e.type === ChainTxEventType.BRIDGE_START).cast<TokensBridgingInitiatedEventModel>()\r\n      .join(\r\n        transfersDataFrame,\r\n        left => left.transactionHash,\r\n        right => right.transactionHash,\r\n        (left1, right1) => {\r\n          return {\r\n            messageId: left1.argsMessageId,\r\n            bridgeStart: left1,\r\n            transfer: right1\r\n          };\r\n        });\r\n    this.logger.info('startEvents', startEvents.count())();\r\n    this.logger.info(startEvents.take(3).toArray())();\r\n    const endEvents = eventsDataFrame.where(e => e.type === ChainTxEventType.BRIDGE_END).cast<TokensBridgedEventModel>()\r\n      .join(\r\n        startEvents,\r\n        left => left.argsMessageId,\r\n        right => right.messageId,\r\n        (left1, right1) => {\r\n          const innerResult = {\r\n            index: right1.transfer._id,\r\n            transactionHash: left1.transactionHash,\r\n            transfer: right1.transfer,\r\n            excludeTransfer: false\r\n          };\r\n          if (right1.transfer.argsTo === bridgeAddress1 || right1.transfer.argsTo === bridgeAddress2) {\r\n            // sender -> bridge\r\n            innerResult.excludeTransfer = true;\r\n          }\r\n          if (right1.transfer.argsFrom === bridgeAddress1 || right1.transfer.argsFrom === bridgeAddress2) {\r\n            if (right1.transfer.argsTo === AppConstants.VOID_ADDRESS) {\r\n              // bridge -> 0x\r\n              innerResult.excludeTransfer = true;\r\n            } else {\r\n              // bridge -> fee receiver\r\n              // Clone the transfer object before modifying values\r\n              const transferCloned = new TransferEventModel(innerResult.transfer);\r\n              transferCloned.argsFrom = right1.bridgeStart.argsSender;\r\n              innerResult.transfer = transferCloned;\r\n            }\r\n          }\r\n          return innerResult;\r\n        }\r\n      ).setIndex('index').bake();\r\n    this.logger.info('endEvents', endEvents.count())();\r\n    this.logger.info(endEvents.take(3).toArray())();\r\n    // this.logger.info(leftEvents.where(e => e._id === rightEnd.first().transfer?._id).first());\r\n    const projectedTransfers = endEvents.distinct(e => e.transactionHash).join(\r\n      transfersDataFrame,\r\n      left => left.transactionHash,\r\n      right => right.transactionHash,\r\n      (left1, right1) => {\r\n        // 0x -> recipient or bridge -> recipient\r\n        if (right1.argsFrom === AppConstants.VOID_ADDRESS || right1.argsFrom === bridgeAddress1 || right1.argsFrom === bridgeAddress2) {\r\n          // Clone the transfer object before modifying values\r\n          const transferCloned = new TransferEventModel(right1);\r\n          transferCloned.argsFrom = left1.transfer.argsFrom;\r\n          return transferCloned;\r\n        }\r\n        return right1;\r\n      }).setIndex('_id').bake();\r\n    this.logger.info('projectedTransfers', projectedTransfers.count())();\r\n    this.logger.info(projectedTransfers.take(4).toArray())();\r\n    const projectedTransfer = projectedTransfers.first();\r\n    this.logger.info(projectedTransfer)();\r\n\r\n    // Build final transfers array...\r\n    // const finalResult = transfersDataFrame.joinOuterLeft(\r\n    //   projectedTransfers,\r\n    //   left => left._id,\r\n    //   right => right._id,\r\n    //   (left1, right1) => {\r\n    //     if (right1) {\r\n    //       return right1;\r\n    //     }\r\n    //     return left1;\r\n    //   }\r\n    // );\r\n    this.logger.info('excludeTransfer', endEvents.where(e => e.excludeTransfer).count())();\r\n    const endEventsMap = new Map(endEvents.toPairs());\r\n    const projectedTransfersMap = new Map(projectedTransfers.toPairs());\r\n    const finalResult: TransferEventModel[] = [];\r\n    transfersDataFrame.toArray().forEach(e => {\r\n      const endEvent = endEventsMap.get(e._id);\r\n      if (endEvent) {\r\n        if (!endEvent.excludeTransfer) {\r\n          finalResult.push(endEvent.transfer);\r\n        }\r\n      } else if (projectedTransfersMap.has(e._id)) {\r\n        finalResult.push(projectedTransfersMap.get(e._id));\r\n      } else {\r\n        finalResult.push(e);\r\n      }\r\n    });\r\n    this.logger.info('finalResult', finalResult.length)();\r\n    this.logger.info(finalResult.find(e => e._id === projectedTransfer._id))();\r\n  }\r\n\r\n  private async loadAsync(): Promise<void> {\r\n    this._nodeMap = new Map<string, NodeGraphModel>();\r\n    this._edgeMap = new Map<string, EdgeGraphModel>();\r\n    if (this.configService.config?.selectedChain) {\r\n      const data = await this.init(this.configService.config?.selectedChain);\r\n      this.submitDataSubjectEvent(data);\r\n    } else {\r\n      this.logger.info('No chain is selected.')();\r\n      this.submitDataSubjectEvent(undefined);\r\n    }\r\n  }\r\n\r\n  private async init(chain: ChainConfigModel): Promise<GraphContainerModel> {\r\n    Ensure.notNull(chain, ChainConfigModel.name);\r\n    try {\r\n      if (chain.type === ChainType.TEST) {\r\n        const rawData = await this.fileUtil.readFileAsync(chain.eventsPath);\r\n        this._data = this.convertTestData(JSON.parse(rawData));\r\n      } else {\r\n        const events = await this.eventRepository.getByChainTypeAsync(chain.type);\r\n        this._data = this.convertChainEvents(events);\r\n      }\r\n      return this.applyFilters(this._data);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  private convertTestData(testData: any): GraphContainerModel {\r\n    const data = this.createGraphContainerModel();\r\n    if (Array.isArray(testData?.nodes) && Array.isArray(testData?.edges)) {\r\n      data.nodes = testData?.nodes?.map((e: any) => new NodeGraphModel(e));\r\n      data.edges = testData?.edges?.map((e: any) => new EdgeGraphModel(e));\r\n      for (const node of data.nodes) {\r\n        this._nodeMap.set(node.data.id, node);\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private convertChainEvents(events: EventModel[]): GraphContainerModel {\r\n    const data = this.createGraphContainerModel();\r\n    if (Array.isArray(events)) {\r\n      for (const item of events) {\r\n        if (item.type === ChainTxEventType.TRANSFER) {\r\n          this.addGraphElements(this.createTransferEventModel(item), data);\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private addGraphElements(transfer: TransferEventModel, data: GraphContainerModel): void {\r\n    this.tryAddNode(transfer.argsFrom, transfer, data);\r\n    this.tryAddNode(transfer.argsTo, transfer, data);\r\n    this.tryAddEdge(transfer, data);\r\n  }\r\n\r\n  private tryAddNode(address: string, transfer: TransferEventModel, data: GraphContainerModel): void {\r\n    if (this._nodeMap.has(address)) {\r\n      const node = this._nodeMap.get(address);\r\n      this.addTransfer(transfer, node.scratch.transfers);\r\n      node.data.weight = Math.min(node.scratch.transfers.length, 100);\r\n      node.data.name = node.scratch.transfers.length.toString();\r\n    } else {\r\n      const node = this.createNodeModel(address, this.copyTransfer(transfer));\r\n      this._nodeMap.set(address, node);\r\n      data.nodes.push(node);\r\n    }\r\n  }\r\n\r\n  private tryAddEdge(transfer: TransferEventModel, data: GraphContainerModel): void {\r\n    const index = CommonUtil.combineIndex(transfer.argsFrom, transfer.argsTo);\r\n    if (CommonUtil.isNullOrWhitespace(index)) {\r\n      throw new Error('Invalid transfer');\r\n    }\r\n    if (this._edgeMap.has(index)) {\r\n      const edge = this._edgeMap.get(index);\r\n      this.addTransfer(transfer, edge.scratch.transfers);\r\n      edge.data.strength = Math.min(edge.scratch.transfers.length, 100);\r\n      edge.data.name = edge.scratch.transfers.length.toString();\r\n    } else {\r\n      const edge = this.createEdgeModel(this.copyTransfer(transfer));\r\n      this._edgeMap.set(index, edge);\r\n      data.edges.push(edge);\r\n    }\r\n  }\r\n\r\n  private copyTransfer(transfer: TransferEventModel): TransferEventModel {\r\n    const transferCopy = new TransferEventModel(transfer);\r\n    if (transfer.blockTimestamp) {\r\n      const timestamp = CommonUtil.tryParseInt(transfer.blockTimestamp);\r\n      if (timestamp && timestamp > 0) {\r\n        transferCopy.blockTimestamp = this.momentUtil.getLocalReverseFormatted(this.momentUtil.getFromUnix(timestamp));\r\n      }\r\n    }\r\n    return transferCopy;\r\n  }\r\n\r\n  private addTransfer(transfer: TransferEventModel, transfers: TransferEventModel[]): TransferEventModel {\r\n    const transferCopy = this.copyTransfer(transfer);\r\n    transfers.unshift(transferCopy);\r\n    return transferCopy;\r\n  }\r\n\r\n  private applyFilters(data: GraphContainerModel): GraphContainerModel {\r\n    let filteredData: GraphContainerModel;\r\n    if (data) {\r\n      filteredData = this.filterByWeight(data, this.configService.config.minWeight);\r\n      filteredData = this.filterBySelection(filteredData);\r\n    }\r\n    return filteredData;\r\n  }\r\n\r\n  private filterByWeight(data: GraphContainerModel, minWeight: number): GraphContainerModel {\r\n    const result = this.createGraphContainerModel();\r\n    if (data) {\r\n      this.logger.info(`${data.nodes.length} nodes and ${data.edges.length} edges before filtering by weight.`)();\r\n      result.nodes = data.nodes.filter((e: NodeGraphModel) => e.data.weight > minWeight);\r\n      result.edges = data.edges.filter(\r\n        (e: EdgeGraphModel) => this._nodeMap.get(e.data.source)?.data.weight > minWeight\r\n          && this._nodeMap.get(e.data.target)?.data.weight > minWeight);\r\n      this.logger.info(`${result.nodes.length} nodes and ${result.edges.length} edges after filtering by weight.`)();\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private filterBySelection(data: GraphContainerModel): GraphContainerModel {\r\n    let result: GraphContainerModel;\r\n    if (data) {\r\n      const filterItems: ChainFilterItemModel[] = Array.from(this.filter.values());\r\n      // Check if any item is not selected\r\n      if (filterItems.filter(e => !e.isSelected).length > 0) {\r\n        result = this.createGraphContainerModel();\r\n        // Check if any item is selected\r\n        const selectedItems: ChainFilterItemModel[] = filterItems.filter(e => e.isSelected);\r\n        if (selectedItems.length === 0) {\r\n          return result;\r\n        }\r\n        const types: string[] = selectedItems.map(e => e.id);\r\n        for (const edge of data.edges) {\r\n          if (types.includes(ChainTxEventType[edge.scratch.refTransfer?.type])) {\r\n            result.edges.push(edge);\r\n            result.nodes.push(this._nodeMap.get(edge.data.source));\r\n            result.nodes.push(this._nodeMap.get(edge.data.target));\r\n          }\r\n        }\r\n        // Remove duplicates\r\n        result.nodes = [...new Set(result.nodes)];\r\n      } else {\r\n        result = data;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private submitDataSubjectEvent(data: GraphContainerModel): void {\r\n    this._currentData = data;\r\n    this._onChangeSubject.next(new GraphEventModel({\r\n      type: GraphEventType.DATA_CHANGED\r\n    }));\r\n  }\r\n\r\n  private createGraphContainerModel(): any {\r\n    // Cytoscape does not work with instance of GraphContainerModel\r\n    // TODO: replace with \"return new GraphContainerModel();\"\r\n    return {\r\n      nodes: [],\r\n      edges: []\r\n    };\r\n  }\r\n\r\n  private createTransferEventModel(element: any): TransferEventModel {\r\n    if (element) {\r\n      const model = new TransferEventModel(element);\r\n      model.type = ChainTxEventType.TRANSFER;\r\n      if (model.argsFrom === AppConstants.VOID_ADDRESS) {\r\n        model.type = ChainTxEventType.MINT;\r\n      } else if (model.argsTo === AppConstants.VOID_ADDRESS) {\r\n        model.type = ChainTxEventType.BURN;\r\n      }\r\n      return model;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private createNodeModel(address: string, transfer: TransferEventModel): NodeGraphModel {\r\n    return new NodeGraphModel({\r\n      data: new NodeDataModel({\r\n        id: address,\r\n        name: '1'\r\n      }),\r\n      scratch: new GraphScratchModel({\r\n        transfers: [transfer]\r\n      })\r\n    });\r\n  }\r\n\r\n  private createEdgeModel(transfer: TransferEventModel): EdgeGraphModel {\r\n    return new EdgeGraphModel({\r\n      data: new EdgeDataModel({\r\n        name: '1',\r\n        source: transfer.argsFrom,\r\n        target: transfer.argsTo\r\n      }),\r\n      scratch: new GraphScratchModel({\r\n        refTransfer: transfer,\r\n        transfers: [transfer]\r\n      })\r\n    });\r\n  }\r\n}\r\n","export class PositionModel {\r\n  x: number;\r\n  y: number;\r\n\r\n  public constructor(data?: Partial<PositionModel>) {\r\n    this.init(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.x = data.x;\r\n      this.y = data.y;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ChainType } from '../enums/chain.enum';\r\nimport { ChainStatModel } from '../models/stat.model';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { Logger } from '../services/logger.service';\r\nimport { BaseRepository } from './base.repository';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatRepository extends BaseRepository<ChainStatModel> {\r\n\r\n  constructor(protected logger: Logger, private configService: ConfigService) {\r\n    super(logger);\r\n  }\r\n\r\n  protected init(): void {\r\n    super.createDatabase('stats');\r\n  }\r\n\r\n  public async getOrCreateByChainTypeAsync(type: ChainType): Promise<ChainStatModel> {\r\n    const id = ChainType[type];\r\n    try {\r\n      let result: ChainStatModel = await super.getByIdAsync(id);\r\n      if (!result) {\r\n        result = new ChainStatModel({\r\n          _id: id,\r\n          version: this.configService.config.version,\r\n          type\r\n        });\r\n        await super.insertAsync(result);\r\n      }\r\n      return Promise.resolve(result);\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TheGraphClient } from '../clients/thegraph.client';\r\nimport { ChainSourceType, ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel, TransferEventModel } from '../models/event.model';\r\nimport { SubgraphTokenTypes, SubgraphTransactionModel, SubgraphTransferEventModel } from '../models/subgraph.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { BaseChainExtractor } from './base.extractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GraphqlChainExtractor extends BaseChainExtractor {\r\n\r\n  constructor(protected logger: Logger, private client: TheGraphClient) {\r\n    super(logger);\r\n  }\r\n\r\n  protected get type(): ChainSourceType {\r\n    return ChainSourceType.GRAPHQL;\r\n  }\r\n\r\n  protected async extractAsyncInternal(chain: ChainConfigModel): Promise<EventModel[]> {\r\n    // Get all transactions and transform them\r\n    const events: EventModel[] = [];\r\n    const transactions = await this.getTransactionsRecursiveAsync(chain, 1000);\r\n    this.transform(chain, transactions, events);\r\n    return events;\r\n  }\r\n\r\n  private async getTransactionsRecursiveAsync(\r\n    chain: ChainConfigModel, limit: number, lastIndex: number = 0\r\n  ): Promise<SubgraphTransactionModel[]> {\r\n    this.logger.info(`Extracting transactions with index greater than ${lastIndex}.`)();\r\n    let transactions = await this.client.getTransactions(chain, limit, lastIndex);\r\n    if (transactions?.length >= limit) {\r\n      const index = CommonUtil.tryParseInt(transactions[transactions.length - 1].index);\r\n      if (index && index > 0) {\r\n        transactions = transactions.concat(await this.getTransactionsRecursiveAsync(chain, limit, index));\r\n      }\r\n    }\r\n    return transactions;\r\n  }\r\n\r\n  private transform(chain: ChainConfigModel, transactions: SubgraphTransactionModel[], events: EventModel[]): void {\r\n    if (transactions && events) {\r\n      const eventSignature = chain.mapTxEventTypeToString(ChainTxEventType.TRANSFER);\r\n      for (const transaction of transactions) {\r\n        for (const transfer of transaction.transferEvents) {\r\n          if (!this.shouldSkip(chain.type, transfer.tokenType)) {\r\n            const event = this.transformTransfer(chain.type, transaction, transfer, eventSignature);\r\n            if (event) {\r\n              events.push(event);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private transformTransfer(\r\n    chainType: ChainType,\r\n    transaction: SubgraphTransactionModel,\r\n    transfer: SubgraphTransferEventModel,\r\n    eventSignature: string\r\n  ): TransferEventModel {\r\n    if (transfer) {\r\n      return new TransferEventModel({\r\n        chainType,\r\n        eventSignature,\r\n        blockNumber: CommonUtil.tryParseInt(transfer.blockNumber),\r\n        blockTimestamp: transfer.blockTimestamp,\r\n        transactionHash: transaction.id,\r\n        logIndex: CommonUtil.tryParseInt(transfer.logIndex),\r\n        argsFrom: transfer.from,\r\n        argsTo: transfer.to,\r\n        argsAmount: transfer.amount\r\n      });\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private shouldSkip(chainType: ChainType, tokenType: string): boolean {\r\n    if (chainType === ChainType.XDAI_MAIN && tokenType !== SubgraphTokenTypes.XHOPR) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ChainType } from '../enums/chain.enum';\r\nimport { EventModel } from '../models/event.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { BaseRepository } from './base.repository';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventRepository extends BaseRepository<EventModel> {\r\n\r\n  constructor(protected logger: Logger) {\r\n    super(logger);\r\n  }\r\n\r\n  protected init(): void {\r\n    super.createDatabase('events');\r\n  }\r\n\r\n  public getByChainTypeAsync(type: ChainType): Promise<EventModel[]> {\r\n    try {\r\n      return Promise.resolve(this._db({ chainType: type }).get());\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public getLastBlockByChainTypeAsync(type: ChainType): Promise<number> {\r\n    try {\r\n      return Promise.resolve(this._db({ chainType: type }).max('blockNumber'));\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public clearByChainType(type: ChainType): Promise<void> {\r\n    try {\r\n      this._db({ chainType: type }).remove();\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n}\r\n","import { v1 as uuidv1 } from 'uuid';\r\n\r\nexport class IdUtil {\r\n\r\n  public static create(): string {\r\n    return uuidv1();\r\n  }\r\n\r\n}\r\n","import { GraphElementType, GraphEventType } from '../enums/graph.enum';\r\nimport { TransferEventModel } from './event.model';\r\nimport { PositionModel } from './position.model';\r\n\r\nexport abstract class BaseGraphModel {\r\n  selected: boolean; // whether the element is selected (default false)\r\n  selectable: boolean; // whether the selection state is mutable (default true)\r\n  locked: boolean; // when locked a node's position is immutable (default false)\r\n  grabbable: boolean; // whether the node can be grabbed and moved by the user\r\n  pannable: boolean; // whether dragging the node causes panning instead of grabbing\r\n  classes: string[]; // an array of class names that the element has\r\n  position: PositionModel; // the model position of the node (optional on init, mandatory after)\r\n  renderedPosition: PositionModel; // can alternatively specify position in rendered on-screen pixels\r\n  scratch: GraphScratchModel; // scratchpad data (usually temp or nonserialisable data)\r\n\r\n  public constructor(init?: Partial<BaseGraphModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.selected = init.selected;\r\n      this.selectable = init.selectable;\r\n      this.locked = init.locked;\r\n      this.grabbable = init.grabbable;\r\n      this.pannable = init.pannable;\r\n      if (Array.isArray(init.classes)) {\r\n        this.classes = [];\r\n        for (const item of init.classes) {\r\n          this.classes.push(item);\r\n        }\r\n      }\r\n      if (init.position) {\r\n        this.position = new PositionModel(init.position);\r\n      }\r\n      if (init.renderedPosition) {\r\n        this.renderedPosition = new PositionModel(init.renderedPosition);\r\n      }\r\n      if (init.scratch) {\r\n        this.scratch = new GraphScratchModel(init.scratch);\r\n      }\r\n    }\r\n    this.selected = this.selected ?? false;\r\n    this.selectable = this.selectable ?? true;\r\n    this.locked = this.locked ?? false;\r\n    this.grabbable = this.grabbable ?? true;\r\n    this.pannable = this.pannable ?? false;\r\n    if (!this.classes) {\r\n      this.classes = [];\r\n    }\r\n    if (!this.scratch) {\r\n      this.scratch = new GraphScratchModel();\r\n    }\r\n  }\r\n}\r\n\r\nexport class NodeGraphModel extends BaseGraphModel {\r\n  data: NodeDataModel; // element data\r\n\r\n  public constructor(init?: Partial<NodeGraphModel>) {\r\n    super(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    super.init(init);\r\n    if (init) {\r\n      if (init.data) {\r\n        this.data = new NodeDataModel(init.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  public get group(): string {\r\n    return 'nodes';\r\n  }\r\n}\r\n\r\nexport class NodeDataModel {\r\n  id: string;\r\n  name: string;\r\n  weight: number;\r\n  colorCode: string;\r\n  shapeType: string;\r\n\r\n  public constructor(init?: Partial<NodeDataModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.id = init.id;\r\n      this.name = init.name;\r\n      this.weight = init.weight;\r\n      this.colorCode = init.colorCode;\r\n      this.shapeType = init.shapeType;\r\n    }\r\n    this.weight = this.weight ?? 1;\r\n  }\r\n}\r\n\r\nexport class NodeViewGraphModel {\r\n  type: GraphElementType;\r\n  id: string;\r\n  name: string;\r\n  weight: number;\r\n  x?: number;\r\n  y?: number;\r\n  transfers: TransferEventModel[];\r\n\r\n  public constructor(init?: Partial<NodeViewGraphModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.type = init.type;\r\n      this.id = init.id;\r\n      this.name = init.name;\r\n      this.weight = init.weight;\r\n      this.x = init.x;\r\n      this.y = init.y;\r\n      this.transfers = init.transfers?.map((e: any) => new TransferEventModel(e));\r\n    }\r\n    if (!this.transfers) {\r\n      this.transfers = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class EdgeGraphModel extends BaseGraphModel {\r\n  data: EdgeDataModel; // element data\r\n\r\n  public constructor(init?: Partial<EdgeGraphModel>) {\r\n    super(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    super.init(init);\r\n    if (init) {\r\n      if (init.data) {\r\n        this.data = new EdgeDataModel(init.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  public get group(): string {\r\n    return 'edges';\r\n  }\r\n}\r\n\r\nexport class EdgeDataModel {\r\n  name: string;\r\n  source: string; // the source node id (edge comes from this node)\r\n  target: string; // the target node id (edge goes to this node)\r\n  strength: number;\r\n  colorCode: string;\r\n\r\n  public constructor(init?: Partial<EdgeDataModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.name = init.name;\r\n      this.source = init.source;\r\n      this.target = init.target;\r\n      this.strength = init.strength;\r\n      this.colorCode = init.colorCode;\r\n    }\r\n    this.strength = this.strength ?? 1;\r\n  }\r\n}\r\n\r\nexport class EdgeViewGraphModel {\r\n  type: GraphElementType;\r\n  name: string;\r\n  source: any;\r\n  target: any;\r\n  strength: number;\r\n  refTransfer: TransferEventModel;\r\n  transfers: TransferEventModel[];\r\n\r\n  public constructor(init?: Partial<EdgeViewGraphModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.type = init.type;\r\n      this.name = init.name;\r\n      this.source = init.source;\r\n      this.target = init.target;\r\n      this.strength = init.strength;\r\n      if (init.refTransfer) {\r\n        this.refTransfer = new TransferEventModel(init.refTransfer);\r\n      }\r\n      this.transfers = init.transfers?.map((e: any) => new TransferEventModel(e));\r\n    }\r\n    if (!this.transfers) {\r\n      this.transfers = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class GraphContainerModel {\r\n  nodes: NodeGraphModel[];\r\n  edges: EdgeGraphModel[];\r\n\r\n  public constructor(init?: Partial<GraphContainerModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.nodes = init.nodes?.map((e: any) => new NodeGraphModel(e));\r\n      this.edges = init.edges?.map((e: any) => new EdgeGraphModel(e));\r\n    }\r\n    if (!this.nodes) {\r\n      this.nodes = [];\r\n    }\r\n    if (!this.edges) {\r\n      this.edges = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class GraphScratchModel {\r\n  refTransfer: TransferEventModel;\r\n  transfers: TransferEventModel[];\r\n\r\n  public constructor(init?: Partial<GraphScratchModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      if (init?.refTransfer) {\r\n        this.refTransfer = new TransferEventModel(init.refTransfer);\r\n      }\r\n      this.transfers = init.transfers?.map((e: any) => new TransferEventModel(e));\r\n    }\r\n    if (!this.transfers) {\r\n      this.transfers = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class GraphEventModel {\r\n  type: GraphEventType;\r\n  payload: any;\r\n\r\n  public constructor(init?: Partial<GraphEventModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.type = init.type;\r\n      this.payload = init.payload;\r\n    }\r\n  }\r\n}\r\n\r\nexport class GraphStateModel {\r\n  isDestroyed: boolean;\r\n  isZoomed: boolean;\r\n  requestedAnimationFrame: number;\r\n\r\n  public constructor(init?: Partial<GraphStateModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  init(init?: any): void {\r\n    if (init) {\r\n      this.isDestroyed = init.isDestroyed;\r\n      this.isZoomed = init.isZoomed;\r\n      this.requestedAnimationFrame = init.requestedAnimationFrame;\r\n    }\r\n  }\r\n}\r\n","\r\nexport abstract class FileUtil {\r\n  abstract readFileAsync(path: string): Promise<any>;\r\n  abstract writeFile(data: any, path?: string): void;\r\n}\r\n","import { ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { IdUtil } from '../utils/id.util';\r\nimport { ChainConfigModel } from './config.model';\r\n\r\nexport class EventModel {\r\n  _id: string;\r\n  chainType: ChainType;\r\n  blockNumber: number;\r\n  blockHash: string;\r\n  blockTimestamp: string;\r\n  transactionIndex: number;\r\n  removed: boolean;\r\n  address: string;\r\n  data: string;\r\n  topics: string[];\r\n  transactionHash: string;\r\n  logIndex: number;\r\n  eventSignature: string;\r\n  type: ChainTxEventType;\r\n\r\n  public constructor(data?: Partial<EventModel>) {\r\n    this.init(data);\r\n  }\r\n\r\n  static fromJS(data: any, chain: ChainConfigModel): EventModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    data.chainType = chain.type;\r\n    data.type = chain.mapTxEventSignatureToType(data.eventSignature);\r\n    switch (data.type) {\r\n      case ChainTxEventType.TRANSFER:\r\n        return TransferEventModel.fromJS(data);\r\n      case ChainTxEventType.BRIDGE_START:\r\n        return TokensBridgingInitiatedEventModel.fromJS(data);\r\n      case ChainTxEventType.BRIDGE_END:\r\n        return TokensBridgedEventModel.fromJS(data);\r\n      default:\r\n        break;\r\n    }\r\n    return new EventModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this._id = data._id;\r\n      this.chainType = data.chainType;\r\n      this.blockNumber = data.blockNumber;\r\n      this.blockHash = data.blockHash;\r\n      this.blockTimestamp = data.blockTimestamp;\r\n      this.transactionIndex = data.transactionIndex;\r\n      this.removed = data.removed;\r\n      this.address = data.address;\r\n      this.data = data.data;\r\n      if (Array.isArray(data.topics)) {\r\n        this.topics = [];\r\n        for (const item of data.topics) {\r\n          this.topics.push(item);\r\n        }\r\n      }\r\n      this.transactionHash = data.transactionHash;\r\n      this.logIndex = data.logIndex;\r\n      this.eventSignature = data.eventSignature;\r\n      this.type = data.type;\r\n    }\r\n    if (!this._id) {\r\n      this._id = IdUtil.create();\r\n    }\r\n    if (!this.topics) {\r\n      this.topics = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport class TransferEventModel extends EventModel {\r\n  argsFrom: string;\r\n  argsTo: string;\r\n  argsAmount: string;\r\n\r\n  public constructor(data?: Partial<TransferEventModel>) {\r\n    super(data);\r\n  }\r\n\r\n  static fromJS(data: any): TransferEventModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    const result = new TransferEventModel(data);\r\n    if (Array.isArray(data.args)) {\r\n      if (data.args.length !== 3) {\r\n        throw new Error('Invalid TransferEvent arguments.');\r\n      }\r\n      result.argsFrom = data.args[0];\r\n      result.argsTo = data.args[1];\r\n      result.argsAmount = CommonUtil.formatBigNumber(data.args[2]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  init(data?: any): void {\r\n    super.init(data);\r\n    if (data) {\r\n      this.argsFrom = data.argsFrom;\r\n      this.argsTo = data.argsTo;\r\n      this.argsAmount = data.argsAmount;\r\n    }\r\n    if (!this.type) {\r\n      this.type = ChainTxEventType.TRANSFER;\r\n    }\r\n  }\r\n}\r\n\r\nexport class TokensBridgingInitiatedEventModel extends EventModel {\r\n  argsToken: string;\r\n  argsSender: string;\r\n  argsValue: string;\r\n  argsMessageId: string;\r\n\r\n  public constructor(data?: Partial<TokensBridgingInitiatedEventModel>) {\r\n    super(data);\r\n  }\r\n\r\n  static fromJS(data: any): TokensBridgingInitiatedEventModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    const result = new TokensBridgingInitiatedEventModel(data);\r\n    if (Array.isArray(data.args)) {\r\n      if (data.args.length !== 4) {\r\n        throw new Error('Invalid TokensBridgingInitiatedEvent arguments.');\r\n      }\r\n      result.argsToken = data.args[0];\r\n      result.argsSender = data.args[1];\r\n      result.argsValue = data.args[2];\r\n      result.argsMessageId = data.args[3];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  init(data?: any): void {\r\n    super.init(data);\r\n    if (data) {\r\n      this.argsToken = data.argsToken;\r\n      this.argsSender = data.argsSender;\r\n      this.argsValue = data.argsValue;\r\n      this.argsMessageId = data.argsMessageId;\r\n    }\r\n    if (!this.type) {\r\n      this.type = ChainTxEventType.BRIDGE_START;\r\n    }\r\n  }\r\n}\r\n\r\nexport class TokensBridgedEventModel extends EventModel {\r\n  argsToken: string;\r\n  argsRecipient: string;\r\n  argsValue: string;\r\n  argsMessageId: string;\r\n\r\n  public constructor(data?: Partial<TokensBridgedEventModel>) {\r\n    super(data);\r\n  }\r\n\r\n  static fromJS(data: any): TokensBridgedEventModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    const result = new TokensBridgedEventModel(data);\r\n    if (Array.isArray(data.args)) {\r\n      if (data.args.length !== 4) {\r\n        throw new Error('Invalid TokensBridgedEvent arguments.');\r\n      }\r\n      result.argsToken = data.args[0];\r\n      result.argsRecipient = data.args[1];\r\n      result.argsValue = data.args[2];\r\n      result.argsMessageId = data.args[3];\r\n    }\r\n    return result;\r\n  }\r\n\r\n  init(data?: any): void {\r\n    super.init(data);\r\n    if (data) {\r\n      this.argsToken = data.argsToken;\r\n      this.argsRecipient = data.argsRecipient;\r\n      this.argsValue = data.argsValue;\r\n      this.argsMessageId = data.argsMessageId;\r\n    }\r\n    if (!this.type) {\r\n      this.type = ChainTxEventType.BRIDGE_END;\r\n    }\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport { CytoscapeComponent } from './components/cytoscape/cytoscape.component';\r\nimport { D3Component } from './components/d3/d3.component';\r\nimport { D3CanvasComponent } from './components/d3canvas/d3canvas.component';\r\nimport { GraphComponent } from './components/graph/graph.component';\r\nimport { LogsComponent } from './components/logs/logs.component';\r\nimport { StardustComponent } from './components/stardust/stardust.component';\r\nimport { ConfigService } from './services/config.service';\r\nimport { DefaultLoggerService, Logger } from './services/logger.service';\r\nimport { BrowserFileUtil } from './utils/browser-file.util';\r\nimport { FileUtil } from './utils/file.util';\r\n\r\nexport function initConfig(config: ConfigService) {\r\n  return () => config.initAsync();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CytoscapeComponent,\r\n    D3Component,\r\n    D3CanvasComponent,\r\n    GraphComponent,\r\n    LogsComponent,\r\n    StardustComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: FileUtil,\r\n      useClass: BrowserFileUtil\r\n    },\r\n    {\r\n      provide: Logger,\r\n      useClass: DefaultLoggerService\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initConfig,\r\n      deps: [ConfigService],\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string) {\r\n    if (property === null || property === undefined) {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: string, propertyName: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GraphElementType, GraphEventType } from '../../enums/graph.enum';\r\nimport {\r\n  EdgeDataModel,\r\n  EdgeGraphModel,\r\n  EdgeViewGraphModel,\r\n  GraphContainerModel,\r\n  GraphEventModel,\r\n  GraphScratchModel,\r\n  GraphStateModel,\r\n  NodeDataModel,\r\n  NodeGraphModel,\r\n  NodeViewGraphModel\r\n} from '../../models/graph.model';\r\nimport { GraphService } from '../../services/graph.service';\r\nimport { Logger } from '../../services/logger.service';\r\nimport { CommonUtil } from '../../utils/common.util';\r\n\r\nexport abstract class SharedGraphLibComponent {\r\n\r\n  private subs: Subscription[] = [];\r\n\r\n  protected state: GraphStateModel;\r\n  protected nodes: NodeViewGraphModel[];\r\n  protected edges: EdgeViewGraphModel[];\r\n  protected connectedLookup: any = {};\r\n\r\n  constructor(protected logger: Logger, protected graphService: GraphService) {\r\n\r\n  }\r\n\r\n  protected onInit(): void {\r\n    this.state = new GraphStateModel();\r\n    if (this.graphService.onChangeSubject) {\r\n      const sub1 = this.graphService.onChangeSubject.subscribe({\r\n        next: (data: GraphEventModel) => {\r\n          setTimeout(() => {\r\n            this.handleOnChangeSubject(data);\r\n          }, 0);\r\n        }\r\n      });\r\n      this.subs.push(sub1);\r\n    }\r\n    if (this.graphService.currentData) {\r\n      setTimeout(() => {\r\n        this.init(this.graphService.currentData);\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  protected onDestroy(): void {\r\n    this.logger.info(`${this.componentName} onDestroy called.`)();\r\n    this.destroy();\r\n    this.nodes = undefined;\r\n    this.edges = undefined;\r\n    this.connectedLookup = undefined;\r\n    this.state.isDestroyed = true;\r\n    this.subs.forEach(sub => {\r\n      sub.unsubscribe();\r\n    });\r\n    this.subs = [];\r\n  }\r\n\r\n  private handleOnChangeSubject(data: GraphEventModel) {\r\n    if (data && !this.state.isDestroyed) {\r\n      switch (data.type) {\r\n        case GraphEventType.DATA_CHANGED:\r\n          this.init(this.graphService.currentData);\r\n          break;\r\n        case GraphEventType.STOP_SIMULATION:\r\n          this.destroy();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected abstract get selectEmitter(): EventEmitter<any>;\r\n\r\n  protected abstract get componentName(): string;\r\n\r\n  protected abstract init(data: GraphContainerModel): void;\r\n\r\n  protected abstract destroy(): void;\r\n\r\n  protected abstract center(count: number): void;\r\n\r\n  protected beforeInit(data: GraphContainerModel): void {\r\n    this.logger.info(`${this.componentName} init called.`)();\r\n    this.state.isZoomed = false;\r\n    this.graphService.isLoading = true;\r\n    if (data) {\r\n      this.nodes = data.nodes.map((e: NodeGraphModel) => {\r\n        return new NodeViewGraphModel({\r\n          type: GraphElementType.NODE,\r\n          id: e.data.id,\r\n          name: e.data.name ?? '-',\r\n          weight: e.data.weight,\r\n          transfers: e.scratch.transfers\r\n        });\r\n      });\r\n      this.edges = data.edges.map((e: EdgeGraphModel) => {\r\n        return new EdgeViewGraphModel({\r\n          type: GraphElementType.EDGE,\r\n          name: e.data.name ?? '-',\r\n          source: e.data.source,\r\n          target: e.data.target,\r\n          strength: e.data.strength,\r\n          refTransfer: e.scratch.refTransfer,\r\n          transfers: e.scratch.transfers\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  protected afterInit(): void {\r\n    this.connectedLookup = {};\r\n    this.edges?.forEach((d: EdgeViewGraphModel) => {\r\n      this.connectedLookup[CommonUtil.combineIndex(d.source.id, d.target.id)] = true;\r\n    });\r\n    this.center(0);\r\n    this.graphService.isLoading = false;\r\n  }\r\n\r\n  protected registerMouseWheelEvent(element: HTMLElement | SVGSVGElement): void {\r\n    if (element) {\r\n      element.onwheel = () => {\r\n        this.state.isZoomed = true;\r\n      };\r\n    }\r\n  }\r\n\r\n  protected handleSelectedElement(element: EdgeViewGraphModel | NodeViewGraphModel): void {\r\n    if (element instanceof EdgeViewGraphModel) {\r\n      this.selectEmitter.emit(new EdgeGraphModel({\r\n        data: new EdgeDataModel({\r\n          name: element.name,\r\n          source: element.source.id,\r\n          target: element.target.id,\r\n          strength: element.strength\r\n        }),\r\n        scratch: new GraphScratchModel({\r\n          refTransfer: element.refTransfer,\r\n          transfers: element.transfers\r\n        })\r\n      }));\r\n    } else if (element instanceof NodeViewGraphModel) {\r\n      this.selectEmitter.emit(new NodeGraphModel({\r\n        data: new NodeDataModel({\r\n          id: element.id,\r\n          name: element.name,\r\n          weight: element.weight\r\n        }),\r\n        scratch: new GraphScratchModel({\r\n          transfers: element.transfers\r\n        })\r\n      }));\r\n    }\r\n  }\r\n\r\n  protected isConnected(a: string, b: string): boolean {\r\n    return this.connectedLookup[CommonUtil.combineIndex(a, b)] || a === b;\r\n  }\r\n}\r\n","import { ChainSourceType, ChainType } from './enums/chain.enum';\r\nimport { GraphLibraryType } from './enums/graph.enum';\r\nimport { ChainSourceTypeModel, ChainTypeModel, GraphLibraryTypeModel } from './models/type.model';\r\n\r\nexport abstract class AppConstants {\r\n  static readonly VOID_ADDRESS: string = '0x0000000000000000000000000000000000000000';\r\n  static readonly PIMARY_COLOR = '#ffffa0';\r\n  static readonly SECONDARY_COLOR = '#0000b4';\r\n  static readonly TX_EVENT_MINT_COLOR: string = '#18cc7e';\r\n  static readonly TX_EVENT_TRANSFER_COLOR: string = '#a9a9a9';\r\n  static readonly TX_EVENT_BURN_COLOR: string = '#d04a35';\r\n  static readonly CHAINS: ChainTypeModel[] = [\r\n    new ChainTypeModel({\r\n      type: ChainType.ETH_MAIN,\r\n      name: 'ETH mainnet'\r\n    }),\r\n    new ChainTypeModel({\r\n      type: ChainType.XDAI_MAIN,\r\n      name: 'xDai chain'\r\n    })\r\n  ];\r\n  static readonly LIBRARIES: GraphLibraryTypeModel[] = [\r\n    new GraphLibraryTypeModel({\r\n      type: GraphLibraryType.D3,\r\n      name: 'd3'\r\n    }),\r\n    new GraphLibraryTypeModel({\r\n      type: GraphLibraryType.CYTOSCAPE,\r\n      name: 'cytoscape'\r\n    }),\r\n    new GraphLibraryTypeModel({\r\n      type: GraphLibraryType.STARDUST,\r\n      name: 'stardust'\r\n    }),\r\n    // new GraphLibraryTypeModel({\r\n    //   type: GraphLibraryType.D3_CANVAS,\r\n    //   name: 'd3-canvas'\r\n    // })\r\n  ];\r\n  static readonly SOURCES: ChainSourceTypeModel[] = [\r\n    new ChainSourceTypeModel({\r\n      type: ChainSourceType.FILE,\r\n      name: 'File'\r\n    }),\r\n    new ChainSourceTypeModel({\r\n      type: ChainSourceType.RPC,\r\n      name: 'RPC'\r\n    }),\r\n    new ChainSourceTypeModel({\r\n      type: ChainSourceType.GRAPHQL,\r\n      name: 'GraphQL'\r\n    })\r\n  ];\r\n}\r\n","export abstract class SubgraphTokenTypes {\r\n  static readonly XHOPR: string = 'xHOPR';\r\n  static readonly WXHOPR: string = 'wxHOPR';\r\n}\r\n\r\nexport class SubgraphTransactionModel {\r\n  id: string;\r\n  index: string;\r\n  blockNumber: string;\r\n  blockTimestamp: string;\r\n  from: string;\r\n  to: string;\r\n  transferEvents: SubgraphTransferEventModel[];\r\n\r\n  public constructor(data?: Partial<SubgraphTransactionModel>) {\r\n    this.init(data);\r\n  }\r\n\r\n  static fromJS(data: any): SubgraphTransactionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    return new SubgraphTransactionModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id;\r\n      this.index = data.index;\r\n      this.blockNumber = data.blockNumber;\r\n      this.blockTimestamp = data.blockTimestamp;\r\n      this.from = data.from;\r\n      this.to = data.to;\r\n      if (Array.isArray(data.transferEvents)) {\r\n        this.transferEvents = [];\r\n        for (const item of data.transferEvents) {\r\n          this.transferEvents.push(SubgraphTransferEventModel.fromJS(item));\r\n        }\r\n      }\r\n    }\r\n    if (!this.transferEvents) {\r\n      this.transferEvents = [];\r\n    }\r\n  }\r\n}\r\n\r\nexport abstract class SubgraphTransactionEventModel {\r\n  id: string;\r\n  index: string;\r\n  blockNumber: string;\r\n  blockTimestamp: string;\r\n  logIndex: string;\r\n\r\n  public constructor(data?: Partial<SubgraphTransactionEventModel>) {\r\n    this.init(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id;\r\n      this.index = data.index;\r\n      this.blockNumber = data.blockNumber;\r\n      this.blockTimestamp = data.blockTimestamp;\r\n      this.logIndex = data.logIndex;\r\n    }\r\n  }\r\n}\r\n\r\nexport class SubgraphTransferEventModel extends SubgraphTransactionEventModel {\r\n  from: string;\r\n  to: string;\r\n  amount: string;\r\n  tokenType: string;\r\n\r\n  public constructor(data?: Partial<SubgraphTransferEventModel>) {\r\n    super(data);\r\n  }\r\n\r\n  static fromJS(data: any): SubgraphTransferEventModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    return new SubgraphTransferEventModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    super.init(data);\r\n    if (data) {\r\n      this.from = data.from;\r\n      this.to = data.to;\r\n      this.amount = data.amount;\r\n      this.tokenType = data.tokenType;\r\n    }\r\n  }\r\n}\r\n\r\nexport class SubgraphStatContainerModel {\r\n  id: string;\r\n  lastAccountIndex: string;\r\n  lastAccountSnapshotIndex: string;\r\n  lastTransactionIndex: string;\r\n  lastTransferEventIndex: string;\r\n\r\n  public constructor(data?: Partial<SubgraphStatContainerModel>) {\r\n    this.init(data);\r\n  }\r\n\r\n  static fromJS(data: any): SubgraphStatContainerModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    return new SubgraphStatContainerModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id;\r\n      this.lastAccountIndex = data.lastAccountIndex;\r\n      this.lastAccountSnapshotIndex = data.lastAccountSnapshotIndex;\r\n      this.lastTransactionIndex = data.lastTransactionIndex;\r\n      this.lastTransferEventIndex = data.lastTransferEventIndex;\r\n    }\r\n  }\r\n}\r\n","export class GraphUtil {\r\n  public static calculateNodeRadius(weight: number): number {\r\n    return Math.min(10, Math.max(5, weight / 10));\r\n  }\r\n\r\n  public static calculateEdgeWidth(strength: number): number {\r\n    return Math.max(1, strength / 10);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MomentUtil {\r\n\r\n  constructor() {\r\n    moment.locale(navigator.language);\r\n  }\r\n\r\n  public setLocale(language: string): void {\r\n    moment.locale(language);\r\n  }\r\n\r\n  public getFromUnix(date: number) {\r\n    return moment.unix(date);\r\n  }\r\n\r\n  public getLocal(date: any): moment.Moment {\r\n    return moment.utc(date).local();\r\n  }\r\n\r\n  public getLocalTime(date: any): string {\r\n    return this.getLocal(date).format('LTS');\r\n  }\r\n\r\n  public getLocalDate(date: any): string {\r\n    return this.getLocal(date).format('L');\r\n  }\r\n\r\n  public getLocalFormatted(date: any): string {\r\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\r\n  }\r\n\r\n  public getLocalReverseFormatted(date: any): string {\r\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\r\n  }\r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LogEventType } from '../../enums/log.enum';\nimport { LogEventModel } from '../../models/log.model';\nimport { Logger } from '../../services/logger.service';\nimport { CommonUtil } from '../../utils/common.util';\n\n@Component({\n  selector: 'hopr-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit, OnDestroy {\n\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\n\n  private subs: Subscription[] = [];\n  private maxSize = 30;\n\n  public logs: LogEventModel[] = [];\n\n  constructor(private logger: Logger) { }\n\n  ngOnInit(): void {\n    if (this.logger.onLogEventSubject) {\n      const sub1 = this.logger.onLogEventSubject.subscribe({\n        next: (data: LogEventModel) => {\n          switch (data.type) {\n            case LogEventType.MESSAGE:\n              const length = this.logs.push(data);\n              if (length > this.maxSize) {\n                this.logs.shift();\n              }\n              break;\n            case LogEventType.CLEAR:\n              this.logs.length = 0;\n              break;\n            default:\n              break;\n          }\n          this.scrollToBottom();\n        }\n      });\n      this.subs.push(sub1);\n      // this.testAsync();\n    }\n  }\n\n  ngOnDestroy(): any {\n    this.subs.forEach(sub => {\n      sub.unsubscribe();\n    });\n    this.subs = [];\n  }\n\n  private async testAsync(): Promise<void> {\n    for (let index = 0; index < 30; index++) {\n      this.logger.debug(`Log test message ${index}.`)();\n      await CommonUtil.timeout(500);\n    }\n  }\n\n  public scrollToBottom(): void {\n    setTimeout(() => {\n      try {\n        this.containerElementRef.nativeElement.scrollTop = this.containerElementRef.nativeElement.scrollHeight;\n      } catch (e) {\n        this.logger.info(e)();\n      }\n    }, 0);\n  }\n}\n","<div id=\"logsContainer\" #containerElementRef>\n  <div>-</div>\n  <div class=\"logMessage\" *ngFor=\"let log of logs\">\n    {{log.banner}} {{log.args}}\n  </div>\n</div>","import { ChainTxEventType, ChainType } from '../enums/chain.enum';\r\nimport { GraphLibraryType } from '../enums/graph.enum';\r\n\r\nexport class ConfigModel {\r\n\r\n  private _selectedChainType: ChainType;\r\n  private _selectedChain: ChainConfigModel;\r\n\r\n  isDevelopment: boolean;\r\n  version: string;\r\n  minWeight: number;\r\n  selectedGraphLibraryType: GraphLibraryType;\r\n  chains: ChainConfigModel[];\r\n\r\n  public constructor(init?: Partial<ConfigModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  static fromJS(data: any): ConfigModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    return new ConfigModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.isDevelopment = data.isDevelopment;\r\n      this.version = data.version;\r\n      this.minWeight = data.minWeight;\r\n      this.selectedChainType = data.selectedChainType;\r\n      this.selectedGraphLibraryType = data.selectedGraphLibraryType;\r\n      if (Array.isArray(data.chains)) {\r\n        this.chains = [];\r\n        for (const item of data.chains) {\r\n          this.chains.push(ChainConfigModel.fromJS(item));\r\n        }\r\n      }\r\n    }\r\n    if (!this.chains) {\r\n      this.chains = [];\r\n    } else {\r\n      this.chains = data?.chains?.map((e: any) => ChainConfigModel.fromJS(e)) ?? [];\r\n    }\r\n  }\r\n\r\n  public get selectedChainType(): ChainType {\r\n    return this._selectedChainType;\r\n  }\r\n\r\n  public set selectedChainType(value: ChainType) {\r\n    this._selectedChainType = value;\r\n    this.setSelectedChain(value);\r\n  }\r\n\r\n  public get selectedChain(): ChainConfigModel {\r\n    if (this._selectedChain?.type !== this._selectedChainType) {\r\n      this.setSelectedChain(this._selectedChainType);\r\n    }\r\n    return this._selectedChain;\r\n  }\r\n\r\n  public getChainByType(type: ChainType): ChainConfigModel {\r\n    return this.chains?.find(e => e.type === type);\r\n  }\r\n\r\n  private setSelectedChain(value: ChainType): void {\r\n    this._selectedChain = this.getChainByType(value);\r\n  }\r\n}\r\n\r\nexport class ChainConfigModel {\r\n\r\n  private txEventSignaturesMap: Map<string, ChainTxEventType>;\r\n\r\n  type: ChainType;\r\n  rpcProviderUrl: string;\r\n  theGraphUrl: string;\r\n  startBlock: number;\r\n  addressUrl: string;\r\n  txUrl: string;\r\n  tokenContractAbiPath: string;\r\n  tokenContractAddress: string;\r\n  bridgeContractAbiPath: string;\r\n  bridgeContractAddress: string;\r\n  txEventSignatures: { [key: string]: string };\r\n  eventsPath: string;\r\n\r\n  public constructor(init?: Partial<ChainConfigModel>) {\r\n    this.init(init);\r\n  }\r\n\r\n  static fromJS(data: any): ChainConfigModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    return new ChainConfigModel(data);\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.type = data.type;\r\n      this.rpcProviderUrl = data.rpcProviderUrl;\r\n      this.theGraphUrl = data.theGraphUrl;\r\n      this.startBlock = data.startBlock;\r\n      this.addressUrl = data.addressUrl;\r\n      this.txUrl = data.txUrl;\r\n      this.tokenContractAbiPath = data.tokenContractAbiPath;\r\n      this.tokenContractAddress = data.tokenContractAddress;\r\n      this.bridgeContractAbiPath = data.bridgeContractAbiPath;\r\n      this.bridgeContractAddress = data.bridgeContractAddress;\r\n      this.txEventSignatures = Object.assign({}, data.txEventSignatures);\r\n      this.eventsPath = data.eventsPath;\r\n    }\r\n    if (!this.txEventSignatures) {\r\n      this.txEventSignatures = {};\r\n    }\r\n    this.txEventSignaturesMap = new Map<string, ChainTxEventType>();\r\n    for (const key of Object.keys(this.txEventSignatures)) {\r\n      this.txEventSignaturesMap.set(this.txEventSignatures[key], ChainTxEventType[key]);\r\n    }\r\n  }\r\n\r\n  public mapTxEventTypeToString(type: ChainTxEventType): string {\r\n    const typeName = ChainTxEventType[type];\r\n    if (this.txEventSignatures && this.txEventSignatures.hasOwnProperty(typeName)) {\r\n      return this.txEventSignatures[typeName];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public mapTxEventSignatureToType(signature: string): ChainTxEventType {\r\n    return this.txEventSignaturesMap.get(signature) ?? ChainTxEventType.UNKNOWN;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { ConfigModel } from '../models/config.model';\r\nimport { FileUtil } from '../utils/file.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  private _config: ConfigModel = new ConfigModel();\r\n\r\n  constructor(private fileUtil: FileUtil) {\r\n\r\n  }\r\n\r\n  public get config(): ConfigModel {\r\n    return this._config;\r\n  }\r\n\r\n  public async initAsync(): Promise<void> {\r\n    const config = await this.fileUtil.readFileAsync('./assets/config.json');\r\n    this._config = new ConfigModel(JSON.parse(config));\r\n    this._config.isDevelopment = !environment.production;\r\n    this._config.version = environment.version;\r\n  }\r\n}\r\n","import { taffy } from 'taffydb';\r\nimport { Logger } from '../services/logger.service';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { Ensure } from '../utils/ensure.util';\r\n\r\nexport abstract class BaseRepository<T> {\r\n\r\n  private _isLocalStorageDisabled = true;\r\n  private _namespace = 'hopr_network_graph_taffydb_';\r\n  private _dbName: string;\r\n  protected _db: any;\r\n\r\n  constructor(protected logger: Logger) {\r\n    this.init();\r\n  }\r\n\r\n  protected abstract init(): void;\r\n\r\n  protected createDatabase(name: string): void {\r\n    Ensure.notNullOrWhiteSpace(name, 'name');\r\n    this._dbName = name;\r\n    this._db = taffy(this.getLocalStorage());\r\n  }\r\n\r\n  public getByIdAsync(id: string): Promise<T> {\r\n    try {\r\n      return Promise.resolve(this._db({ _id: id }).first());\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public getAllAsync(): Promise<T[]> {\r\n    try {\r\n      return Promise.resolve(this._db().get());\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public insertAsync(item: T): Promise<void> {\r\n    try {\r\n      this._db.insert(item);\r\n      this.updateLocalStorage();\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public insertManyAsync(items: T[]): Promise<void> {\r\n    try {\r\n      this._db.insert(items);\r\n      this.updateLocalStorage();\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  public clearAllAsync(): Promise<void> {\r\n    try {\r\n      this._db().remove();\r\n      this.updateLocalStorage();\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  private get localStorageKey(): string {\r\n    return this._namespace + this._dbName;\r\n  }\r\n\r\n  private updateLocalStorage(): void {\r\n    try {\r\n      if (!this._isLocalStorageDisabled) {\r\n        const json = JSON.stringify(this._db().get());\r\n        localStorage.setItem(this.localStorageKey, CommonUtil.compress(json));\r\n      }\r\n    } catch (error) {\r\n      this.logger.error(error)();\r\n    }\r\n  }\r\n\r\n  private getLocalStorage(): any {\r\n    try {\r\n      if (!this._isLocalStorageDisabled) {\r\n        const data = localStorage.getItem(this.localStorageKey);\r\n        if (data) {\r\n          return JSON.parse(CommonUtil.decompress(data));\r\n        }\r\n      }\r\n      return undefined;\r\n    } catch (error) {\r\n      this.logger.error(error)();\r\n    }\r\n  }\r\n}\r\n","export class ChainFilterItemModel {\r\n  id: string;\r\n  name: string;\r\n  isSelected: boolean;\r\n  color: string;\r\n\r\n  public constructor(init?: Partial<ChainFilterItemModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { ChainSourceType, ChainType } from '../enums/chain.enum';\r\n\r\nexport class StatModel {\r\n  _id: string;\r\n  version: string;\r\n  extractedDate: Date;\r\n  extractSuccess: boolean;\r\n  lastBlock: number;\r\n\r\n  public constructor(init?: Partial<StatModel>) {\r\n    Object.assign(this, init);\r\n    if (!this.extractedDate) {\r\n      this.extractedDate = new Date();\r\n    }\r\n  }\r\n}\r\n\r\nexport class ChainStatModel extends StatModel {\r\n  type: ChainType;\r\n  source: ChainSourceType;\r\n\r\n  public constructor(init?: Partial<ChainStatModel>) {\r\n    super(init);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as d3 from 'd3';\nimport * as DataForge from 'data-forge';\nimport * as Stardust from 'stardust-core';\nimport * as StardustWebGL from 'stardust-webgl';\nimport { AppConstants } from '../../app.constants';\nimport { ChainTxEventType } from '../../enums/chain.enum';\nimport { EdgeViewGraphModel, GraphContainerModel, NodeViewGraphModel } from '../../models/graph.model';\nimport { GraphService } from '../../services/graph.service';\nimport { Logger } from '../../services/logger.service';\nimport { CommonUtil } from '../../utils/common.util';\nimport { GraphUtil } from '../../utils/graph.util';\nimport { SharedGraphLibComponent } from '../shared/shared-graph-lib.component';\n\n@Component({\n  selector: 'hopr-stardust',\n  templateUrl: './stardust.component.html',\n  styleUrls: ['./stardust.component.css']\n})\nexport class StardustComponent extends SharedGraphLibComponent implements OnInit, OnDestroy {\n\n  @Output() selectEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild('containerElementRef') containerElementRef: ElementRef;\n\n  protected readonly componentName: string = 'Stardust';\n\n  private width: number;\n  private height: number;\n  private canvas: HTMLElement;\n  private canvasContainer: d3.Selection<HTMLCanvasElement, unknown, HTMLElement, any>;\n  private zoom: d3.ZoomBehavior<Element, unknown>;\n  private nodesDataFrame: DataForge.IDataFrame<number, any>;\n  private selectedElement: any;\n  private isSelectionPermanent: boolean;\n  private simulation: d3.Simulation<d3.SimulationNodeDatum, undefined>;\n  private transform: any;\n  private platform: StardustWebGL.WebGLCanvasPlatform2D;\n  private positions: Stardust.ArrayBinding;\n  private starNodes: Stardust.Mark;\n  private starNodesBg: Stardust.Mark;\n  private starNodesSelected: Stardust.Mark;\n  private starEdges: Stardust.Mark;\n  private starEdgesSelected: Stardust.Mark;\n  private starNodeText: Stardust.Mark;\n  private starEdgeText: Stardust.Mark;\n\n  constructor(protected logger: Logger, protected graphService: GraphService) {\n    super(logger, graphService);\n    const webGLversion = StardustWebGL.version;\n  }\n\n  ngOnInit(): void {\n    super.onInit();\n  }\n\n  ngOnDestroy(): void {\n    super.onDestroy();\n  }\n\n  protected destroy(): void {\n    this.stopSimulation();\n    this.nodesDataFrame = undefined;\n  }\n\n  private stopSimulation(): void {\n    this.logger.info(`${this.componentName} stop simulation called.`)();\n    this.simulation?.stop();\n    this.graphService.isSimulating = false;\n  }\n\n  protected init(data: GraphContainerModel): void {\n    super.beforeInit(data);\n    this.width = this.containerElementRef.nativeElement.clientWidth;\n    this.height = this.containerElementRef.nativeElement.clientHeight;\n    this.createCanvas();\n    if (this.nodes && this.edges) {\n      this.nodesDataFrame = new DataForge.DataFrame(this.nodes).bake();\n\n      function mapColor(color: number[], opacity: number = 1): number[] {\n        return [color[0] / 255, color[1] / 255, color[2] / 255, opacity];\n      }\n\n      const colors = [\n        mapColor([0, 0, 0], 0.5),\n        mapColor([0, 0, 0], 1),\n        mapColor(CommonUtil.hexToRgb(AppConstants.PIMARY_COLOR)),\n        mapColor(CommonUtil.hexToRgb(AppConstants.SECONDARY_COLOR)),\n        mapColor(CommonUtil.hexToRgb(AppConstants.TX_EVENT_BURN_COLOR)),\n        mapColor(CommonUtil.hexToRgb(AppConstants.TX_EVENT_MINT_COLOR)),\n        mapColor(CommonUtil.hexToRgb(AppConstants.TX_EVENT_TRANSFER_COLOR))\n      ];\n\n      this.starNodes.attr('radius', 2).attr('color', colors[2]);\n      this.starNodesBg.attr('radius', 3).attr('color', colors[0]);\n      this.starNodesSelected.attr('radius', 4).attr('color', colors[3]);\n      this.starEdges.attr('width', 1).attr('color', (d: EdgeViewGraphModel) => {\n        switch (d.refTransfer?.type) {\n          case ChainTxEventType.BURN:\n            return colors[4];\n          case ChainTxEventType.MINT:\n            return colors[5];\n          default:\n            break;\n        }\n        return colors[6];\n      });\n      this.starEdgesSelected.attr('width', 1).attr('color', colors[3]);\n      this.starNodeText.attr('text', (d: NodeViewGraphModel) => d.name)\n        // .attr('up', [0, 1])\n        .attr('fontFamily', 'Arial')\n        .attr('fontSize', 12)\n        // .attr('scale', d => this.transform.k)\n        // .attr('scale', d => 1 + Math.sin(d) / 2)\n        .attr('color', colors[1]);\n      this.starEdgeText.attr('text', (d: EdgeViewGraphModel) => d.name)\n        .attr('fontFamily', 'Arial')\n        .attr('fontSize', 10)\n        .attr('color', colors[1]);\n\n      this.positions = Stardust.array()\n        .value((d: NodeViewGraphModel) => [\n          d.x * this.transform.k + this.transform.x,\n          d.y * this.transform.k + this.transform.y\n        ])\n        .data(this.nodes);\n\n      const edgePositions = Stardust.array()\n        .value((d: EdgeViewGraphModel) => [\n          ((d.source.x * this.transform.k + this.transform.x) + (d.target.x * this.transform.k + this.transform.x)) / 2,\n          ((d.source.y * this.transform.k + this.transform.y) + (d.target.y * this.transform.k + this.transform.y)) / 2\n        ])\n        .data(this.edges);\n\n      const positionScale = Stardust.scale.custom('array(pos, value)').attr('pos', 'Vector2Array', this.positions);\n      const edgePositionScale = Stardust.scale.custom('array(pos, value)').attr('pos', 'Vector2Array', edgePositions);\n\n      this.starNodes.attr('center', positionScale(d => d.index));\n      this.starNodesBg.attr('center', positionScale(d => d.index));\n      this.starNodesSelected.attr('center', positionScale(d => d.index));\n      this.starNodeText.attr('position', positionScale(d => d.index));\n      this.starEdges.attr('p1', positionScale(d => d.source.index));\n      this.starEdges.attr('p2', positionScale(d => d.target.index));\n      this.starEdgesSelected.attr('p1', positionScale(d => d.source.index));\n      this.starEdgesSelected.attr('p2', positionScale(d => d.target.index));\n      this.starEdgeText.attr('position', edgePositionScale(d => d.index));\n\n      this.starNodes.data(this.nodes);\n      this.starNodesBg.data(this.nodes);\n      this.starNodeText.data(this.nodes);\n      this.starEdges.data(this.edges);\n      this.starEdgeText.data(this.edges);\n\n      if (this.simulation) {\n        this.simulation.stop();\n      }\n      this.simulation = d3.forceSimulation(this.nodes as any)\n        .force('link', d3.forceLink(this.edges).id((d: any) => d.id))\n        .force('charge', d3.forceManyBody().strength(-400))\n        .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY())\n        .on('end', () => {\n          this.graphService.isSimulating = false;\n          this.logger.info(`${this.componentName} simulation ended.`)();\n        });\n      this.graphService.isSimulating = true;\n\n      this.simulation.on('tick', () => {\n        // positions.data(this.nodes);\n        this.requestRender();\n      });\n\n      this.requestRender();\n    }\n    super.afterInit();\n  }\n\n  public requestRender(): void {\n    if (this.state.requestedAnimationFrame) {\n      return;\n    }\n    this.state.requestedAnimationFrame = requestAnimationFrame(() => {\n      this.render();\n    });\n  }\n\n  private render(): void {\n    this.state.requestedAnimationFrame = undefined;\n\n    // Cleanup and re-render.\n    // this.platform.clear([1, 1, 1, 1]);\n    this.starEdges.attr('width', (d: any) => GraphUtil.calculateEdgeWidth(d.strength) * this.transform.k);\n    this.starEdges.render();\n    this.starEdgesSelected.attr('width', (d: any) => GraphUtil.calculateEdgeWidth(d.strength) * this.transform.k + 1);\n    this.starEdgesSelected.render();\n    this.starNodesBg.attr('radius', (d: any) => GraphUtil.calculateNodeRadius(d.weight) * this.transform.k + 1);\n    this.starNodesBg.render();\n    this.starNodes.attr('radius', (d: any) => GraphUtil.calculateNodeRadius(d.weight) * this.transform.k);\n    this.starNodes.render();\n    this.starNodesSelected.attr('radius', (d: any) => GraphUtil.calculateNodeRadius(d.weight) * this.transform.k);\n    this.starNodesSelected.render();\n    this.starNodeText.attr('scale', this.transform.k);\n    this.starNodeText.render();\n    this.starNodeText.attr('alignX', 0.5);\n    this.starNodeText.attr('alignY', 0.6);\n\n    this.starEdgeText.attr('scale', this.transform.k);\n    this.starEdgeText.render();\n    this.starEdgeText.attr('alignX', 0.5);\n    this.starEdgeText.attr('alignY', 0.6);\n\n    // Render the picking buffer.\n    this.platform.beginPicking(this.width, this.height);\n    this.starEdges.render();\n    this.starNodes.render();\n    this.platform.endPicking();\n  }\n\n  private createCanvas(): void {\n    const canvasId = 'mainCanvas';\n    d3.select('#' + canvasId).remove();\n    this.canvasContainer = d3.select('#container')\n      .append('canvas')\n      .attr('id', canvasId)\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    this.canvas = document.getElementById(canvasId);\n    this.platform = Stardust.platform('webgl-2d', this.canvas, this.width, this.height) as StardustWebGL.WebGLCanvasPlatform2D;\n    this.platform.pixelRatio = 1;\n\n    this.starNodes = Stardust.mark.create(Stardust.mark.circle(), this.platform);\n    this.starNodesBg = Stardust.mark.create(Stardust.mark.circle(), this.platform);\n    this.starNodesSelected = Stardust.mark.create(Stardust.mark.circle(), this.platform);\n    this.starEdges = Stardust.mark.create(Stardust.mark.line(), this.platform);\n    this.starEdgesSelected = Stardust.mark.create(Stardust.mark.line(), this.platform);\n    this.starNodeText = Stardust.mark.createText('2d', this.platform);\n    this.starEdgeText = Stardust.mark.createText('2d', this.platform);\n\n    this.transform = d3.zoomIdentity;\n\n    this.registerMouseEvents();\n\n    this.zoom = d3.zoom()\n      .extent([[0, 0], [this.width, this.height]])\n      .scaleExtent([0, 10])\n      .on('zoom', (e: any) => {\n        this.transform = e.transform;\n        this.requestRender();\n      });\n    this.canvasContainer.call(this.zoom);\n  }\n\n  private registerMouseEvents(): void {\n    super.registerMouseWheelEvent(this.canvas);\n    this.canvas.onmousemove = (e: MouseEvent) => {\n      e.stopPropagation();\n      if (!this.isSelectionPermanent) {\n        const element = this.tryGetSelectedElement(e);\n        if (element) {\n          if (this.selectedElement !== element) {\n            this.handleSelectedElement(element);\n          }\n        } else {\n          this.deselectElement();\n        }\n      }\n    };\n    this.canvas.onclick = (e: MouseEvent) => {\n      e.stopPropagation();\n      const element = this.tryGetSelectedElement(e);\n      if (element) {\n        if (this.isSelectionPermanent) {\n          if (this.selectedElement === element) {\n            this.isSelectionPermanent = false;\n            this.deselectElement();\n          } else {\n            this.handleSelectedElement(element);\n          }\n        } else {\n          this.isSelectionPermanent = true;\n          if (this.selectedElement !== element) {\n            this.handleSelectedElement(element);\n          }\n        }\n      } else {\n        this.deselectElement();\n      }\n    };\n  }\n\n  protected handleSelectedElement(element: EdgeViewGraphModel | NodeViewGraphModel): void {\n    super.handleSelectedElement(element);\n    this.selectedElement = element;\n    if (this.selectedElement instanceof EdgeViewGraphModel) {\n      this.starEdgesSelected.data([this.selectedElement]);\n      this.starNodesSelected.data(this.nodes.filter(\n        e => e.id === this.selectedElement.source.id || e.id === this.selectedElement.target.id));\n    } else if (this.selectedElement instanceof NodeViewGraphModel) {\n      this.starNodesSelected.data([this.selectedElement]);\n      this.starEdgesSelected.data(this.edges.filter(\n        e => e.source.id === this.selectedElement.id || e.target.id === this.selectedElement.id));\n    }\n    this.requestRender();\n  }\n\n  private deselectElement(): void {\n    if (this.selectedElement != null) {\n      this.isSelectionPermanent = false;\n      this.selectedElement = null;\n      this.requestRender();\n      this.selectEmitter.emit(undefined);\n      this.starEdgesSelected.data([]);\n      this.starNodesSelected.data([]);\n    }\n  }\n\n  private tryGetSelectedElement(e: MouseEvent): EdgeViewGraphModel | NodeViewGraphModel {\n    const bb = this.canvas.getBoundingClientRect();\n    const x = e.clientX - bb.left;\n    const y = e.clientY - bb.top;\n    const p = this.platform.getPickingPixel(x * this.platform.pixelRatio, y * this.platform.pixelRatio);\n    if (p) {\n      return p[0].data()[p[1]];\n    }\n    return undefined;\n  }\n\n  protected center(count: number): void {\n    if (!this.state.isDestroyed && !this.state.isZoomed) {\n      if (this.nodesDataFrame) {\n        const seriesX = this.nodesDataFrame.deflate(e => e.x);\n        const seriesY = this.nodesDataFrame.deflate(e => e.y);\n        const minMaxNodes = {\n          minX: seriesX.min(),\n          minY: seriesY.min(),\n          maxX: seriesX.max(),\n          maxY: seriesY.max()\n        };\n        const width = minMaxNodes.maxX - minMaxNodes.minX;\n        const height = minMaxNodes.maxY - minMaxNodes.minY;\n        if (width && height) {\n          const scale = Math.min(this.width / width, this.height / height) * 0.8;\n          if (count > 0) {\n            this.canvasContainer.transition()\n              .duration(750)\n              .call(this.zoom.scaleTo, scale);\n          }\n        }\n        if (this.graphService.isSimulating && count < 5) {\n          setTimeout(() => {\n            this.center(++count);\n          }, 1000);\n        }\n      }\n    }\n  }\n}\n","<div id=\"container\" #containerElementRef></div>","import { Injectable } from '@angular/core';\r\nimport { ChainSourceType, ChainType } from '../enums/chain.enum';\r\nimport { ChainExtractorFactory } from '../factories/extractor.factory';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel } from '../models/event.model';\r\nimport { ChainStatModel } from '../models/stat.model';\r\nimport { EventRepository } from '../repositories/event.repository';\r\nimport { StatRepository } from '../repositories/stat.repository';\r\nimport { CommonUtil } from '../utils/common.util';\r\nimport { Ensure } from '../utils/ensure.util';\r\nimport { ConfigService } from './config.service';\r\nimport { Logger } from './logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChainService {\r\n\r\n  private _isExtracting: boolean;\r\n\r\n  constructor(\r\n    private logger: Logger,\r\n    private configService: ConfigService,\r\n    private extractorFactory: ChainExtractorFactory,\r\n    private statRepository: StatRepository,\r\n    private eventRepository: EventRepository\r\n  ) {\r\n\r\n  }\r\n\r\n  public get isExtracting(): boolean {\r\n    return this._isExtracting;\r\n  }\r\n\r\n  public async clearAllAsync(): Promise<void> {\r\n    try {\r\n      this.logger.info('Clearing local data.')();\r\n      await this.statRepository.clearAllAsync();\r\n      await this.eventRepository.clearAllAsync();\r\n    } catch (error) {\r\n      this.logger.error(error)();\r\n    }\r\n  }\r\n\r\n  public getChainStatByType(chainType: ChainType): Promise<ChainStatModel> {\r\n    return this.statRepository.getOrCreateByChainTypeAsync(chainType);\r\n  }\r\n\r\n  public async extractAsync(): Promise<void> {\r\n    this.logger.info('Data extraction started.')();\r\n    this._isExtracting = true;\r\n    for (const chain of this.configService.config.chains) {\r\n      await this.extractChainAsync(chain.type);\r\n    }\r\n    this._isExtracting = false;\r\n    this.logger.info('Data extraction ended.')();\r\n  }\r\n\r\n  public async extractChainBySourceAsync(type: ChainType, source: ChainSourceType): Promise<void> {\r\n    const chain = this.configService.config.getChainByType(type);\r\n    Ensure.notNull(chain, 'chain');\r\n    this.logger.info('Chain extraction started.')();\r\n    this._isExtracting = true;\r\n    try {\r\n      const events = await this.extractEventsAsync(chain, source);\r\n      await this.saveEventsAsync(type, source, events);\r\n    } catch (error) {\r\n      this.logger.error(error);\r\n    }\r\n    this._isExtracting = false;\r\n    this.logger.info('Chain extraction ended.')();\r\n  }\r\n\r\n  private async extractChainAsync(type: ChainType): Promise<void> {\r\n    if (type === ChainType.TEST) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    const chain = this.configService.config.getChainByType(type);\r\n    Ensure.notNull(chain, 'chain');\r\n\r\n    const existing = await this.eventRepository.getByChainTypeAsync(chain.type);\r\n    if (existing && existing.length > 0) {\r\n      this.logger.info(`Found ${existing.length} existing events for ${ChainType[chain.type]}`)();\r\n      this._isExtracting = false;\r\n      return;\r\n    }\r\n    // Use file extractor by default\r\n    let source = ChainSourceType.FILE;\r\n    let events = await this.extractEventsAsync(chain, source);\r\n    if ((!events || events?.length <= 0) && !CommonUtil.isNullOrWhitespace(chain.theGraphUrl)) {\r\n      // Use GraphQL extractor\r\n      source = ChainSourceType.GRAPHQL;\r\n      events = await this.extractEventsAsync(chain, source);\r\n    }\r\n    if ((!events || events?.length <= 0) && !CommonUtil.isNullOrWhitespace(chain.rpcProviderUrl)) {\r\n      // Use RPC extractor\r\n      source = ChainSourceType.RPC;\r\n      events = await this.extractEventsAsync(chain, source);\r\n    }\r\n\r\n    await this.saveEventsAsync(type, source, events);\r\n  }\r\n\r\n  private async saveEventsAsync(chainType: ChainType, source: ChainSourceType, events: EventModel[]): Promise<void> {\r\n    const chainStat = await this.initChainStatAsync(chainType);\r\n    Ensure.notNull(chainStat, 'chainStat');\r\n    if (events?.length > 0) {\r\n      await this.eventRepository.clearByChainType(chainType);\r\n      await this.eventRepository.insertManyAsync(events);\r\n      const lastBlock = await this.eventRepository.getLastBlockByChainTypeAsync(chainType);\r\n      await this.updateChainStatAsync(chainStat, true, source, lastBlock);\r\n    } else {\r\n      await this.eventRepository.clearByChainType(chainType);\r\n      await this.updateChainStatAsync(chainStat, false, source, 0);\r\n    }\r\n  }\r\n\r\n  private async initChainStatAsync(chainType: ChainType): Promise<ChainStatModel> {\r\n    let result = await this.statRepository.getOrCreateByChainTypeAsync(chainType);\r\n    if (result.version !== this.configService.config.version) {\r\n      await this.clearAllAsync();\r\n      result = await this.statRepository.getOrCreateByChainTypeAsync(chainType);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private async updateChainStatAsync(\r\n    chainStat: ChainStatModel, success: boolean, source: ChainSourceType, lastBlock: number\r\n  ): Promise<void> {\r\n    chainStat.extractSuccess = success;\r\n    chainStat.extractedDate = new Date();\r\n    chainStat.source = source;\r\n    chainStat.lastBlock = lastBlock;\r\n    await this.statRepository.insertAsync(chainStat);\r\n  }\r\n\r\n  private async extractEventsAsync(chain: ChainConfigModel, extractorType: ChainSourceType): Promise<EventModel[]> {\r\n    try {\r\n      const extractor = this.extractorFactory.get(extractorType);\r\n      return await extractor.extractAsync(chain);\r\n    } catch (error) {\r\n      this.logger.error(error)();\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ChainSourceType } from '../enums/chain.enum';\r\nimport { ChainConfigModel } from '../models/config.model';\r\nimport { EventModel } from '../models/event.model';\r\nimport { Logger } from '../services/logger.service';\r\nimport { FileUtil } from '../utils/file.util';\r\nimport { BaseChainExtractor } from './base.extractor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileChainExtractor extends BaseChainExtractor {\r\n\r\n  constructor(protected logger: Logger, private fileUtil: FileUtil) {\r\n    super(logger);\r\n  }\r\n\r\n  protected get type(): ChainSourceType {\r\n    return ChainSourceType.FILE;\r\n  }\r\n\r\n  public async extractAsyncInternal(chain: ChainConfigModel): Promise<EventModel[]> {\r\n    let rawData = await this.fileUtil.readFileAsync(chain.eventsPath);\r\n    rawData = JSON.parse(rawData);\r\n    if (Array.isArray(rawData)) {\r\n      return Promise.resolve(rawData.map(e => EventModel.fromJS(e, chain)));\r\n    }\r\n    return Promise.resolve(undefined);\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}