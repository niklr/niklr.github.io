{"version":3,"sources":["common/constants.ts","storage/account.storage.ts","util/common.util.ts","util/logger.ts","util/types.ts","util/moment.util.ts","datasources/base.datasource.ts","util/chain.util.ts","util/file.util.ts","datasources/mock.datasource.ts","typechain/factories/Project__factory.ts","typechain/factories/ProjectManager__factory.ts","typechain/factories/SimpleManager__factory.ts","typechain/factories/SimpleStorage__factory.ts","typechain/factories/Utils__factory.ts","util/ensure.ts","clients/nervos.client.ts","datasources/nervos.datasource.ts","contexts/common.context.ts","contexts/connectedWeb3.tsx","util/format.util.ts","util/snackbar.util.ts","features/account/components/network/component.tsx","queries/item.ts","features/common/components/test/component.tsx","features/layout/components/footer/component.tsx","features/main/components/login/img/metamask.svg","features/main/components/login/component.tsx","features/layout/components/header/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","mutations/project.ts","queries/project.ts","clients/apollo.client.ts","clients/ipfs.client.ts","util/transform.util.ts","services/project.service.ts","features/common/components/click-once-button/component.tsx","features/common/components/alert/component.tsx","features/common/components/editor/component.tsx","features/project/components/create/component.tsx","features/project/components/info/component.tsx","features/project/components/info-title/component.tsx","features/project/components/edit/component.tsx","features/common/components/hero/component.tsx","features/project/components/list-item/component.tsx","features/project/components/list/component.tsx","features/project/components/latest/component.tsx","features/project/components/contribute-dialog/component.tsx","features/project/components/contribution-list-item/component.tsx","features/project/components/contribution-list/component.tsx","features/project/components/overview/component.tsx","features/main/components/main/component.tsx","bg.svg","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx"],"names":["CommonConstants","Networks","id","name","ProjectType","ProjectTypes","type","storage","_account","this","account","getAccountStorage","CommonUtil","value","String","isString","undefined","trim","defaultValue","isNullOrWhitespace","ms","Promise","resolve","setTimeout","data","JSON","stringify","url","fetch","blob","min","max","Math","floor","random","current","goal","Big","div","mul","toNumber","error","total","rpp","page","uuidv4","truncateString","str","maxLength","length","substr","truncateStringInTheMiddle","strPositionStart","strPositionEnd","LogEventModel","constructor","init","banner","args","Object","assign","noop","logger","Boolean","process","timestamp","Date","toLocaleTimeString","createLogEventModel","mapFn","e","Error","message","toJsonString","map","Array","isArray","e1","isEnabled","result","Function","prototype","bind","call","console","debug","info","warn","push","getLogger","WalletType","MomentUtil","moment","locale","navigator","language","setLocale","get","getFromUnix","date","unix","getFromMilliseconds","getLocal","utc","local","getLocalTime","format","getLocalDate","getLocalFormatted","getLocalReverseFormatted","isExpired","Number","BaseDataSource","_moment","_accountStorage","initAsyncProtected","dispose","disposeProtected","getAccount","createId","uuid","MockChainUtil","_util","NervosChainUtil","decimals","nativeFullName","nativeName","toAlternateAddress","address","toNativeFull","amount","toNative","toNativeString","AddressTranslator","ethAddressToGodwokenShortAddress","BigNumber","from","pow","toString","toFixed","FileUtil","BrowserFileUtil","path","text","FileUtilType","ds","super","_chainUtil","_fileUtil","_projects","_projectIndexMap","Map","clear","projects","readFileAsync","parse","index","p","set","category","createdTimestamp","created","expirationTimestamp","deadline","creator","description","title","totalContributions","totalContributors","totalFunding","_address","_id","_index","timeout","find","contributor","add","_category","_title","_description","_url","_goal","_deadline","_amount","_abi","inputs","internalType","stateMutability","anonymous","indexed","outputs","components","_bytecode","Project__factory","ContractFactory","linkLibraryAddresses","signer","linkBytecode","linkedBytecode","replace","RegExp","toLowerCase","deploy","_creator","overrides","getDeployTransaction","attach","connect","utils","Interface","signerOrProvider","Contract","bytecode","abi","ProjectManager__factory","SimpleManager__factory","SimpleStorage__factory","Utils__factory","Ensure","property","propertyName","client","_rpcProvider","_httpProvider","_web3Provider","_nervosProviderConfig","notNullOrWhiteSpace","web3Url","PolyjuiceJsonRpcProvider","PolyjuiceHttpProvider","ethers","providers","Web3Provider","getSigner","_client","_projectContracts","_projectManagerContract","getOverrideOptions","gasPrice","gasLimit","existing","project","getProjectAsync","getProjectManagerAsync","rpcProvider","getBalance","indexes","getTypechainProjectAsync","getExtendedInfo","c","getContribution","getTimestamp","totalProjects","manager","tx","create","hash","setInfo","contribute","context","_datasource","initAsync","getCommonContext","ConnectedWeb3Context","React","createContext","useConnectedWeb3Context","useContext","ConnectedWeb3","props","connection","setConnection","useState","useWeb3React","commonContext","accountStorage","activate","deactivate","chainId","login","useCallback","async","MetaMask","injected","InjectedConnector","window","localStorage","setItem","logout","removeItem","location","reload","useEffect","connector","getItem","connectWalletAsync","Provider","children","FormatUtil","defaultMessage","log","graphQLErrors","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","DefaultPaper","styled","Paper","theme","spacing","ErrorPaper","palette","main","NetworkCheck","Typography","variant","align","gutterBottom","sx","whiteSpace","GET_ITEMS_QUERY","gql","ItemQueries","parent","first","skip","datasource","getTimestampAsync","Test","loading","useQuery","variables","fetchPolicy","Root","Footer","Icon","IconMetaMask","MetaMaskSVG","LoginDialog","onClose","open","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","Link","href","target","List","pt","ListItem","autoFocus","button","onClick","enqueueError","handleClickAsync","ListItemAvatar","Avatar","bgcolor","grey","ListItemText","primary","TitleTypography","Header","loginOpen","setLoginOpen","AppBar","position","color","Toolbar","src","alt","width","style","textDecoration","Tooltip","Fragment","util","showAlternateAddress","alternateAddressName","placement","arrow","Chip","icon","label","Button","MainScrollStyled","MainScrollInner","MainScroll","restProps","Container","MainWrapperStyled","MainWrapper","CREATE_PROJECT_MUTATION","EDIT_PROJECT_MUTATION","ProjectMutations","createProjectAsync","editProjectAsync","GET_TOTAL_PROJECTS_QUERY","GET_PROJECT_INDEX_QUERY","GET_PROJECT_ADDRESS_QUERY","GET_PROJECT_QUERY","GET_PROJECT_CONTRIBUTION_QUERY","ProjectQueries","params","getTotalProjectsAsync","getProjectIndexAsync","getProjectAddressAsync","getProjectContributionAsync","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","Mutation","headers","getApolloClient","uploadAsync","file","size","cid","TransformUtil","source","number","getTime","service","_apollo","_ipfs","validate","values","markdown","notNull","_fetchPolicy","query","projectIndex","projectAddress","now","toTimestamp","gte","lte","ipfsResult","mutate","mutation","createProject","editProject","getProjectService","ClickOnceButton","isDisabled","setIsDisabled","LoadingButton","fullWidth","callbackFn","Alert","backgroundColor","Box","padding","textAlign","Editor","isLoading","setIsLoading","content","setContent","markdownUrl","setMarkdownUrl","height","containerRef","clientHeight","fileUtil","response","downloadAsync","m","readOnly","px","py","initialValue","previewStyle","initialEditType","usageStatistics","ref","editorRef","ProjectCreate","navigate","useNavigate","useRef","createRef","momentUtil","chainUtil","projectService","setValues","AON","toDate","handleChange","prop","event","component","Grid","container","item","md","xs","FormControl","InputLabel","htmlFor","OutlinedInput","autoComplete","onChange","maxHeight","minHeight","my","overflow","margin","getInstance","getMarkdown","createAsync","enqueueMessage","display","Stack","multiline","rows","Select","labelId","MenuItem","KIA","startAdornment","InputAdornment","DateTimePicker","newValue","renderInput","TextField","Slider","valueLabelDisplay","ProjectInfo","percentage","setPercentage","setCategory","calculatePercentage","formatTimestamp","isEdit","fontWeight","Skeleton","animation","fontSize","noWrap","ProjectInfoTitle","flexGrow","alignItems","mr","canEdit","ml","RouterLink","to","ProjectEdit","useParams","setProject","projectQuery","notifyOnNetworkStatusChange","toProject","editAsync","HeroContent","background","paper","Hero","balance","getBalanceAsync","testAsync","mb","paragraph","underline","mt","direction","LinearProgressWithLabel","LinearProgress","minWidth","round","projectAddressQuery","Card","CardActionArea","disabled","CardHeader","paddingBottom","avatar","marginBottom","textOverflow","subheader","top","right","paddingTop","CardContent","pb","CardActions","rowSpacing","columnSpacing","marginTop","ProjectList","sm","LatestProjects","totalProjectsQuery","IconButton","float","refetch","refetchAll","justifyContent","ProjectContributeDialog","setOpen","handleClose","success","Input","DialogActions","lt","contributeAsync","ProjectContributionListItem","contributionQuery","contribution","projectContribution","TableCell","scope","ProjectContributionList","setPage","rowsPerPage","setRowsPerPage","setIndexes","updateIndexes","maxRows","calculateMaxRows","setLastPage","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","border","TablePagination","count","onPageChange","newPage","rowsPerPageOptions","onRowsPerPageChange","parseInt","ProjectOverview","setCanEdit","openContributeDialog","setOpenContributeDialog","accountAddress","wordBreak","borderRadius","toBigNumber","Main","isNetworkSupported","setIsNetworkSupported","useSnackbar","network","basename","element","getLibrary","provider","Background","BackgroundSVG","App","apolloClient","useMemo","LocalizationProvider","dateAdapter","DateAdapter","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.3947630f.chunk.js","sourcesContent":["import { GenericType, Network } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'CROWDMINT',\n  WALLET_CONNECTOR_STORAGE_KEY: 'crowdmint:wallet-connector',\n  PROJECT_MANAGER_CONTRACT: '0xa78d570ac832D7931Cd5BF41C72b4c52075e0d5B',\n  PROJECT_TITLE_MAX_LENGTH: 48,\n  PROJECT_DESCRIPTION_MAX_LENGTH: 256\n}\n\nexport const Networks: Network[] = [\n  {\n    id: 71393,\n    name: \"Godwoken Testnet\"\n  },\n  {\n    id: 1024777,\n    name: \"Godwoken Devnet\"\n  }\n]\n\nexport enum ProjectType {\n  AON = 0,\n  KIA = 1\n}\n\nexport const ProjectTypes: GenericType[] = [\n  {\n    name: \"All-Or-Nothing\",\n    type: \"AON\"\n  },\n  {\n    name: \"Keep-It-All\",\n    type: \"KIA\"\n  }\n]","export class AccountStorage {\n  private _account: Maybe<string>;\n\n  get account(): Maybe<string> {\n    return this._account;\n  }\n\n  set account(account: Maybe<string>) {\n    this._account = account;\n  }\n}\n\nconst storage = new AccountStorage();\n\nexport const getAccountStorage = () => {\n  return storage;\n}","import Big from 'big.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      // console.log('Expected a string but got: ', value);\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static calculatePercentage(current: Maybe<string>, goal: Maybe<string>): number {\n    try {\n      if (current && goal) {\n        return Math.floor(Big(current).div(Big(goal)).mul(100).toNumber());\n      }\n    } catch (error) {\n    }\n    return 0;\n  }\n\n  static calculateMaxRows(total: number, rpp: number, page: number): number {\n    return Math.min(Math.min(total - rpp * page, rpp), total);\n  }\n\n  static uuid(): string {\n    return uuidv4();\n  }\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","export enum WalletType {\n  MetaMask = 'MetaMask',\n}\n\nexport interface Network {\n  id: number,\n  name: string\n}\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type IpfsResult = {\n  url: string;\n  path: string;\n  size: number;\n  cid: any;\n}\n\nexport type Project = {\n  address: string;\n  category: string;\n  title: string;\n  description: string;\n  url: string;\n  goal: string;\n  createdTimestamp: string;\n  expirationTimestamp: string;\n  creator: string;\n  totalContributions: string;\n  totalContributors: string;\n  totalFunding: string;\n}\n\nexport interface SaveProject {\n  category: string;\n  title: string;\n  description: string;\n  goal: string;\n  expirationTimestamp: string;\n}\n\nexport type Contribution = {\n  contributor: string;\n  createdTimestamp: string;\n  amount: string;\n}\n\nexport type Item = {\n  id: string;\n  createdDate: string;\n  modifiedDate: string;\n  name: string;\n  description: string;\n  imageUrl: string;\n}","import moment from 'moment';\n\nexport class MomentUtil {\n  constructor() {\n    moment.locale(navigator.language);\n  }\n\n  public setLocale(language: string): void {\n    moment.locale(language);\n  }\n\n  public get(): moment.Moment {\n    return moment()\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: any): boolean {\n    try {\n      if (timestamp) {\n        return moment.utc().unix() >= Number(timestamp);\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","\nimport { BigNumber } from \"ethers\";\nimport { AccountStorage, getAccountStorage } from \"../storage\";\nimport { IChainUtil } from \"../util/chain.util\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Contribution, Project } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(): Promise<void>;\n  dispose(): void;\n  get util(): IChainUtil;\n  getBalanceAsync(_address: string): Promise<BigNumber>;\n  getProjectIndexAsync(_id: string): Promise<BigNumber>;\n  getProjectAddressAsync(_index: BigNumber): Promise<Maybe<string>>;\n  getProjectAsync(_address: string): Promise<Project>;\n  getProjectContributionAsync(_address: string, _index: BigNumber): Promise<Contribution>;\n  getTimestampAsync(): Promise<BigNumber>;\n  getTotalProjectsAsync(): Promise<BigNumber>;\n  createProjectAsync(\n    _id: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string>;\n  editProjectAsync(\n    _address: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string>;\n  contributeAsync(_address: string, _amount: BigNumber): Promise<string>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected _moment: MomentUtil = new MomentUtil();\n  private readonly _accountStorage: AccountStorage;\n\n  constructor() {\n    this._accountStorage = getAccountStorage();\n  }\n\n  async initAsync(): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this.disposeProtected();\n  }\n\n  getAccount(): string {\n    if (!this._accountStorage.account || CommonUtil.isNullOrWhitespace(this._accountStorage.account)) {\n      throw new Error(\"Please connect your wallet first.\");\n    }\n    return this._accountStorage.account;\n  }\n\n  protected createId(): string {\n    return CommonUtil.uuid();\n  }\n\n  protected abstract initAsyncProtected(): Promise<void>;\n  protected abstract disposeProtected(): void;\n  abstract get util(): IChainUtil;\n  abstract getBalanceAsync(_address: string): Promise<BigNumber>;\n  abstract getProjectIndexAsync(_id: string): Promise<BigNumber>;\n  abstract getProjectAddressAsync(_index: BigNumber): Promise<Maybe<string>>;\n  abstract getProjectAsync(_address: string): Promise<Project>;\n  abstract getProjectContributionAsync(_address: string, _index: BigNumber): Promise<Contribution>;\n  abstract getTimestampAsync(): Promise<BigNumber>;\n  abstract getTotalProjectsAsync(): Promise<BigNumber>;\n  abstract createProjectAsync(\n    _id: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string>;\n  abstract editProjectAsync(\n    _address: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string>;\n  abstract contributeAsync(_address: string, _amount: BigNumber): Promise<string>;\n}","import Big from 'big.js';\nimport { BigNumber } from 'ethers';\nimport { AddressTranslator } from 'nervos-godwoken-integration';\nimport { CommonUtil } from './common.util';\n\nexport interface IChainUtil {\n  get decimals(): number;\n  get alternateAddressName(): string\n  get nativeFullName(): string\n  get nativeName(): string\n  toAlternateAddress(address: Maybe<string>): Maybe<string>\n  toNativeFull(amount: Maybe<string>): BigNumber\n  toNative(amount: Maybe<string>): BigNumber\n  toNativeString(amount: Maybe<string>): string\n}\n\nexport class MockChainUtil implements IChainUtil {\n  private readonly _util: IChainUtil;\n\n  constructor() {\n    this._util = new NervosChainUtil();\n  }\n\n  get decimals(): number {\n    return this._util.decimals;\n  }\n\n  get alternateAddressName(): string {\n    return \"Alternate\";\n  }\n\n  get nativeFullName(): string {\n    return this._util.nativeFullName;\n  }\n\n  get nativeName(): string {\n    return this._util.nativeName;\n  }\n\n  toAlternateAddress(address: Maybe<string>): Maybe<string> {\n    return address;\n  }\n\n  toNativeFull(amount: Maybe<string>): BigNumber {\n    return this._util.toNativeFull(amount);\n  }\n\n  toNative(amount: Maybe<string>): BigNumber {\n    return this._util.toNative(amount);\n  }\n\n  toNativeString(amount: Maybe<string>): string {\n    return this._util.toNativeString(amount);\n  }\n}\n\nexport class NervosChainUtil implements IChainUtil {\n  get decimals(): number {\n    return 8;\n  }\n\n  get alternateAddressName(): string {\n    return \"Polyjuice\";\n  }\n\n  get nativeFullName(): string {\n    return \"CKBit\";\n  }\n\n  get nativeName(): string {\n    return \"CKB\";\n  }\n\n  toAlternateAddress(address: Maybe<string>): Maybe<string> {\n    if (!address || CommonUtil.isNullOrWhitespace(address)) {\n      return;\n    }\n    // TODO: pass RPC url (Godwoken short address (aka Polyjuice address) depends on deployed scripts addresses, therefore it is different on devnet, testnet and mainnet)\n    return (new AddressTranslator()).ethAddressToGodwokenShortAddress(address);\n  }\n\n  toNativeFull(amount: Maybe<string>): BigNumber {\n    if (!amount || CommonUtil.isNullOrWhitespace(amount)) {\n      return BigNumber.from(0);\n    }\n    return BigNumber.from(Big(amount).mul(Big(10).pow(this.decimals)).toString());\n  }\n\n  toNative(amount: Maybe<string>): BigNumber {\n    if (!amount || CommonUtil.isNullOrWhitespace(amount)) {\n      return BigNumber.from(0);\n    }\n    return BigNumber.from(Big(amount).div(Big(10).pow(this.decimals)).toFixed(0, 0));\n  }\n\n  toNativeString(amount: Maybe<string>): string {\n    if (!amount || CommonUtil.isNullOrWhitespace(amount)) {\n      return \"0\";\n    }\n    try {\n      return Big(amount).div(Big(10).pow(this.decimals)).toFixed();\n    } catch (error) {\n      return \"0\";\n    }\n  }\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","import { BigNumber } from \"ethers\";\nimport { BaseDataSource } from \".\";\nimport { IChainUtil, MockChainUtil } from \"../util/chain.util\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { Contribution, Project } from \"../util/types\";\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _chainUtil: IChainUtil;\n  private readonly _fileUtil: FileUtil;\n  private _projects: Project[];\n  private _projectIndexMap: Map<string, number>;\n\n  constructor() {\n    super();\n    this._chainUtil = new MockChainUtil();\n    this._fileUtil = new BrowserFileUtil();\n    this._projects = [];\n    this._projectIndexMap = new Map<string, number>();\n  }\n\n  private clear(): void {\n    this._projects = [];\n    this._projectIndexMap = new Map<string, number>();\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    let projects = await this._fileUtil.readFileAsync(\"./assets/data/mock_projects.json\");\n    projects = JSON.parse(projects);\n    this.clear();\n    for (let index = 0; index < projects.length; index++) {\n      const p = projects[index];\n      const id = this.createId();\n      this._projectIndexMap.set(id, index + 1);\n      this._projects.push({\n        address: p.address,\n        category: p.category,\n        createdTimestamp: p.created,\n        expirationTimestamp: p.deadline,\n        creator: p.creator,\n        description: p.description,\n        goal: p.goal,\n        title: p.title,\n        totalContributions: p.totalContributions,\n        totalContributors: p.totalContributors,\n        totalFunding: p.totalFunding,\n        url: p.url\n      });\n    }\n  }\n\n  protected disposeProtected(): void {\n    this.clear();\n  }\n\n  get util(): IChainUtil {\n    return this._chainUtil;\n  }\n\n  async getBalanceAsync(_address: string): Promise<BigNumber> {\n    return BigNumber.from(0);\n  }\n\n  async getProjectIndexAsync(_id: string): Promise<BigNumber> {\n    const index = this._projectIndexMap.get(_id)\n    if (!index) {\n      return BigNumber.from(0);\n    }\n    return BigNumber.from(index);\n  }\n\n  async getProjectAddressAsync(_index: BigNumber): Promise<Maybe<string>> {\n    return this._projects[_index.toNumber() - 1].address;\n  }\n\n  async getProjectAsync(_address: string): Promise<Project> {\n    await CommonUtil.timeout(CommonUtil.random(500, 3000));\n    const p = this._projects.find(e => e.address === _address);\n    if (!p) {\n      throw new Error(\"Project not found.\")\n    }\n    return p;\n  }\n\n  async getProjectContributionAsync(_address: string, _index: BigNumber): Promise<Contribution> {\n    return {\n      contributor: _index.toString(),\n      createdTimestamp: BigNumber.from(this._moment.get().unix()).add(_index).toString(),\n      amount: '...'\n    };\n  }\n\n  async getTimestampAsync(): Promise<BigNumber> {\n    return BigNumber.from(this._moment.get().unix());\n  }\n\n  async getTotalProjectsAsync(): Promise<BigNumber> {\n    await CommonUtil.timeout(2000);\n    return BigNumber.from(this._projects.length);\n  }\n\n  async createProjectAsync(_id: string, _category: string, _title: string, _description: string, _url: string, _goal: BigNumber, _deadline: BigNumber): Promise<string> {\n    const index = this._projects.length + 1;\n    this._projectIndexMap.set(_id, index);\n    this._projects.push({\n      address: this.createId(),\n      category: _category,\n      createdTimestamp: this._moment.get().unix().toString(),\n      expirationTimestamp: _deadline.toString(),\n      creator: this.getAccount(),\n      description: _description,\n      goal: _goal.toString(),\n      title: _title,\n      totalContributions: \"0\",\n      totalContributors: \"0\",\n      totalFunding: \"0\",\n      url: _url\n    });\n    return _id;\n  }\n\n  async editProjectAsync(_address: string, _category: string, _title: string, _description: string, _url: string, _goal: BigNumber, _deadline: BigNumber): Promise<string> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async contributeAsync(_address: string, _amount: BigNumber): Promise<string> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport {\n  Signer,\n  utils,\n  BigNumberish,\n  Contract,\n  ContractFactory,\n  Overrides,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Project, ProjectInterface } from \"../Project\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_category\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_url\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_goal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"_creator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"project\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"contributor\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ContributionReceived\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"project\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"requestor\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"PayoutRequested\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"project\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"requestor\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RefundRequested\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable\",\n        name: \"_contributor\",\n        type: \"address\",\n      },\n    ],\n    name: \"contribute\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"contributions\",\n    outputs: [\n      {\n        internalType: \"address payable\",\n        name: \"contributor\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"created\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"contributors\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"_index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getContribution\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address payable\",\n            name: \"contributor\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"created\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Project.Contribution\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getExtendedInfo\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"string\",\n            name: \"category\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"url\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"goal\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"created\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address payable\",\n            name: \"creator\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct Project.ProjectInfo\",\n        name: \"\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getInfo\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"string\",\n            name: \"category\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"title\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"description\",\n            type: \"string\",\n          },\n          {\n            internalType: \"string\",\n            name: \"url\",\n            type: \"string\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"goal\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"created\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"deadline\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"address payable\",\n            name: \"creator\",\n            type: \"address\",\n          },\n        ],\n        internalType: \"struct Project.ProjectInfo\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"info\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"category\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"url\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"goal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"created\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"creator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"manager\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"payout\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refund\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_category\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_url\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_goal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalContributions\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalContributors\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalFunding\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162002f8438038062002f8483398181016040528101906200003791906200063b565b73__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba886040518060400160405280600381526020017f4b494100000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b8152600401620000a7929190620008e1565b60206040518083038186803b158015620000c057600080fd5b505af4158015620000d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fb91906200060f565b80620001c7575073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba886040518060400160405280600381526020017f414f4e00000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b815260040162000172929190620008e1565b60206040518083038186803b1580156200018b57600080fd5b505af4158015620001a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c691906200060f565b5b62000209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000200906200091c565b60405180910390fd5b600083116200024f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002469062000982565b60405180910390fd5b42821162000294576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028b9062000960565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000307576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002fe906200093e565b60405180910390fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518061010001604052808881526020018781526020018681526020018581526020018481526020014281526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681525060066000820151816000019080519060200190620003b7929190620004a2565b506020820151816001019080519060200190620003d6929190620004a2565b506040820151816002019080519060200190620003f5929190620004a2565b50606082015181600301908051906020019062000414929190620004a2565b506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600181905550600060028190555060006003819055505050505050505062000b19565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004da576000855562000526565b82601f10620004f557805160ff191683800117855562000526565b8280016001018555821562000526579182015b828111156200052557825182559160200191906001019062000508565b5b50905062000535919062000539565b5090565b5b80821115620005545760008160009055506001016200053a565b5090565b60006200056f6200056984620009d8565b620009a4565b9050828152602081018484840111156200058857600080fd5b6200059584828562000a82565b509392505050565b600081519050620005ae8162000acb565b92915050565b600081519050620005c58162000ae5565b92915050565b600082601f830112620005dd57600080fd5b8151620005ef84826020860162000558565b91505092915050565b600081519050620006098162000aff565b92915050565b6000602082840312156200062257600080fd5b60006200063284828501620005b4565b91505092915050565b600080600080600080600060e0888a0312156200065757600080fd5b600088015167ffffffffffffffff8111156200067257600080fd5b620006808a828b01620005cb565b975050602088015167ffffffffffffffff8111156200069e57600080fd5b620006ac8a828b01620005cb565b965050604088015167ffffffffffffffff811115620006ca57600080fd5b620006d88a828b01620005cb565b955050606088015167ffffffffffffffff811115620006f657600080fd5b620007048a828b01620005cb565b9450506080620007178a828b01620005f8565b93505060a06200072a8a828b01620005f8565b92505060c06200073d8a828b016200059d565b91505092959891949750929550565b6000620007598262000a0b565b62000765818562000a27565b93506200077781856020860162000a82565b620007828162000aba565b840191505092915050565b60006200079c601c8362000a16565b91507f43617465676f7279206d757374206265204b4941206f7220414f4e2e000000006000830152602082019050919050565b6000620007de601e8362000a16565b91507f43726561746f722061646472657373206d7573742062652076616c69642e00006000830152602082019050919050565b60006200082060308362000a16565b91507f446561646c696e65206d7573742062652067726561746572207468616e20637560008301527f7272656e742074696d657374616d702e000000000000000000000000000000006020830152604082019050919050565b60006200088860248362000a16565b91507f46756e64696e6720676f616c206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006040820190508181036000830152620008fd81856200074c565b905081810360208301526200091381846200074c565b90509392505050565b6000602082019050818103600083015262000937816200078d565b9050919050565b600060208201905081810360008301526200095981620007cf565b9050919050565b600060208201905081810360008301526200097b8162000811565b9050919050565b600060208201905081810360008301526200099d8162000879565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715620009ce57620009cd62000ab8565b5b8060405250919050565b600067ffffffffffffffff821115620009f657620009f562000ab8565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000a458262000a58565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000aa257808201518184015260208101905062000a85565b8381111562000ab2576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b62000ad68162000a38565b811462000ae257600080fd5b50565b62000af08162000a4c565b811462000afc57600080fd5b50565b62000b0a8162000a78565b811462000b1657600080fd5b50565b61245b8062000b296000396000f3fe6080604052600436106100e15760003560e01c806363bd1d4a1161007f578063b8b2acaa11610059578063b8b2acaa14610292578063cef42254146102c1578063f251fc8c146102fe578063fe47a8a714610329576100eb565b806363bd1d4a1461023657806373e888fd1461024d5780639c27b27c14610269576100eb565b806337c08923116100bb57806337c089231461019e578063481c6a75146101c9578063590e1ae3146101f45780635a9b0b891461020b576100eb565b80631cee0700146100f05780631f6d49421461012f578063370158ea1461016c576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b5061011760048036038101906101129190611a56565b610354565b60405161012693929190611fa1565b60405180910390f35b34801561013b57600080fd5b50610156600480360381019061015191906118f2565b61039e565b6040516101639190612240565b60405180910390f35b34801561017857600080fd5b506101816103b6565b604051610195989796959493929190611fd8565b60405180910390f35b3480156101aa57600080fd5b506101b361066c565b6040516101c09190612240565b60405180910390f35b3480156101d557600080fd5b506101de610672565b6040516101eb9190611f86565b60405180910390f35b34801561020057600080fd5b50610209610696565b005b34801561021757600080fd5b506102206108ce565b60405161022d91906121c4565b60405180910390f35b34801561024257600080fd5b5061024b610be5565b005b6102676004803603810190610262919061191b565b610f2a565b005b34801561027557600080fd5b50610290600480360381019061028b919061196d565b6111e9565b005b34801561029e57600080fd5b506102a76112fa565b6040516102b89594939291906121e6565b60405180910390f35b3480156102cd57600080fd5b506102e860048036038101906102e39190611a56565b611650565b6040516102f591906121a9565b60405180910390f35b34801561030a57600080fd5b506103136116ed565b6040516103209190612240565b60405180910390f35b34801561033557600080fd5b5061033e6116f3565b60405161034b9190612240565b60405180910390f35b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b60046020528060005260406000206000915090505481565b6006806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062a5780601f106105ff5761010080835404028352916020019161062a565b820191906000526020600020905b81548152906001019060200180831161060d57829003601f168201915b5050505050908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42600680015411156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612109565b60405180910390fd5b60066004015460035410610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d906120e9565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156108cb576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107de90611f71565b60006040518083038185875af1925050503d806000811461081b576040519150601f19603f3d011682016040523d82523d6000602084013e610820565b606091505b5050905080610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90612189565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167f8acf4934346d52d5e66a4489928806be024d6d8d3db9110a0c946f23bb67a685846040516108c19190612240565b60405180910390a3505b50565b6108d66116f9565b600660405180610100016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561097d5780601f106109525761010080835404028352916020019161097d565b820191906000526020600020905b81548152906001019060200180831161096057829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a1f5780601f106109f457610100808354040283529160200191610a1f565b820191906000526020600020905b815481529060010190602001808311610a0257829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac15780601f10610a9657610100808354040283529160200191610ac1565b820191906000526020600020905b815481529060010190602001808311610aa457829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600660070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906120c9565b60405180910390fd5b4260068001541115610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690612109565b60405180910390fd5b600073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba60066000016040518060400160405280600381526020017f414f4e00000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b8152600401610d33929190612072565b60206040518083038186803b158015610d4b57600080fd5b505af4158015610d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d839190611944565b90508015610dd6576006600401546003541015610dd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcc90612129565b60405180910390fd5b5b600060035490506000811115610f265760006003819055506000600660070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610e3990611f71565b60006040518083038185875af1925050503d8060008114610e76576040519150601f19603f3d011682016040523d82523d6000602084013e610e7b565b606091505b5050905080610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612189565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167faeafd3f12e55085474a74a4ee382b64d62a256ea1d447e40e412df48abb17e5d84604051610f1c9190612240565b60405180910390a3505b5050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faf90612149565b60405180910390fd5b60003411610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290612169565b60405180910390fd5b4260068001541015611042576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611039906120a9565b60405180910390fd5b60006005600060015481526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600101819055503481600201819055506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905034600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600081141561115d576002600081548092919060010191905055505b346003600082825401925050819055506001600081548092919060010191905055508273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fe482e8d853bcf23b76d7656a12af7c09cc6820a4683d6c48851261c2b12323b3346040516111dc9190612240565b60405180910390a3505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e90612149565b60405180910390fd5b8560066000019080519060200190611290929190611754565b5084600660010190805190602001906112aa929190611754565b5083600660020190805190602001906112c4929190611754565b5082600660030190805190602001906112de929190611754565b5081600660040181905550806006800181905550505050505050565b6113026116f9565b600080600080600660015460025460035460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405180610100016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561147c5780601f106114515761010080835404028352916020019161147c565b820191906000526020600020905b81548152906001019060200180831161145f57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561151e5780601f106114f35761010080835404028352916020019161151e565b820191906000526020600020905b81548152906001019060200180831161150157829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115c05780601f10611595576101008083540402835291602001916115c0565b820191906000526020600020905b8154815290600101906020018083116115a357829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509450945094509450945094509091929394565b6116586117e2565b6000600560008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905080915050919050565b60025481565b60035481565b60405180610100016040528060608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261178a57600085556117d1565b82601f106117a357805160ff19168380011785556117d1565b828001600101855582156117d1579182015b828111156117d05782518255916020019190600101906117b5565b5b5090506117de9190611819565b5090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b5b8082111561183257600081600090555060010161181a565b5090565b60006118496118448461228c565b61225b565b90508281526020810184848401111561186157600080fd5b61186c848285612374565b509392505050565b600081359050611883816123c9565b92915050565b600081359050611898816123e0565b92915050565b6000815190506118ad816123f7565b92915050565b600082601f8301126118c457600080fd5b81356118d4848260208601611836565b91505092915050565b6000813590506118ec8161240e565b92915050565b60006020828403121561190457600080fd5b600061191284828501611874565b91505092915050565b60006020828403121561192d57600080fd5b600061193b84828501611889565b91505092915050565b60006020828403121561195657600080fd5b60006119648482850161189e565b91505092915050565b60008060008060008060c0878903121561198657600080fd5b600087013567ffffffffffffffff8111156119a057600080fd5b6119ac89828a016118b3565b965050602087013567ffffffffffffffff8111156119c957600080fd5b6119d589828a016118b3565b955050604087013567ffffffffffffffff8111156119f257600080fd5b6119fe89828a016118b3565b945050606087013567ffffffffffffffff811115611a1b57600080fd5b611a2789828a016118b3565b9350506080611a3889828a016118dd565b92505060a0611a4989828a016118dd565b9150509295509295509295565b600060208284031215611a6857600080fd5b6000611a76848285016118dd565b91505092915050565b611a888161232c565b82525050565b611a978161232c565b82525050565b611aa68161231a565b82525050565b6000611ab7826122d1565b611ac181856122e7565b9350611ad1818560208601612383565b611ada816123b8565b840191505092915050565b6000611af0826122d1565b611afa81856122f8565b9350611b0a818560208601612383565b611b13816123b8565b840191505092915050565b6000611b29826122d1565b611b338185612309565b9350611b43818560208601612383565b611b4c816123b8565b840191505092915050565b600081546001811660008114611b745760018114611b9a57611bde565b607f6002830416611b858187612309565b955060ff198316865260208601935050611bde565b60028204611ba88187612309565b9550611bb3856122bc565b60005b82811015611bd557815481890152600182019150602081019050611bb6565b80880195505050505b505092915050565b6000611bf36014836122f8565b91507f50726f6a6563742068617320657870697265642e0000000000000000000000006000830152602082019050919050565b6000611c33600d836122f8565b91507f4f6e6c792063726561746f722e000000000000000000000000000000000000006000830152602082019050919050565b6000611c73601e836122f8565b91507f46756e64696e6720676f616c20686173206265656e20726561636865642e00006000830152602082019050919050565b6000611cb3600d836122f8565b91507f4f6e6c7920657870697265642e000000000000000000000000000000000000006000830152602082019050919050565b6000611cf36022836122f8565b91507f46756e64696e6720676f616c20686173206e6f74206265656e2072656163686560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d59600d836122f8565b91507f4f6e6c79206d616e616765722e000000000000000000000000000000000000006000830152602082019050919050565b6000611d996024836122f8565b91507f436f6e747269627574696f6e206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611dff6016836122f8565b91507f4661696c656420746f2073656e6420616d6f756e742e000000000000000000006000830152602082019050919050565b6000611e3f6000836122dc565b9150600082019050919050565b606082016000820151611e626000850182611a7f565b506020820151611e756020850182611f53565b506040820151611e886040850182611f53565b50505050565b6000610100830160008301518482036000860152611eac8282611aac565b91505060208301518482036020860152611ec68282611aac565b91505060408301518482036040860152611ee08282611aac565b91505060608301518482036060860152611efa8282611aac565b9150506080830151611f0f6080860182611f53565b5060a0830151611f2260a0860182611f53565b5060c0830151611f3560c0860182611f53565b5060e0830151611f4860e0860182611a7f565b508091505092915050565b611f5c8161236a565b82525050565b611f6b8161236a565b82525050565b6000611f7c82611e32565b9150819050919050565b6000602082019050611f9b6000830184611a9d565b92915050565b6000606082019050611fb66000830186611a8e565b611fc36020830185611f62565b611fd06040830184611f62565b949350505050565b6000610100820190508181036000830152611ff3818b611ae5565b90508181036020830152612007818a611ae5565b9050818103604083015261201b8189611ae5565b9050818103606083015261202f8188611ae5565b905061203e6080830187611f62565b61204b60a0830186611f62565b61205860c0830185611f62565b61206560e0830184611a8e565b9998505050505050505050565b6000604082019050818103600083015261208c8185611b57565b905081810360208301526120a08184611b1e565b90509392505050565b600060208201905081810360008301526120c281611be6565b9050919050565b600060208201905081810360008301526120e281611c26565b9050919050565b6000602082019050818103600083015261210281611c66565b9050919050565b6000602082019050818103600083015261212281611ca6565b9050919050565b6000602082019050818103600083015261214281611ce6565b9050919050565b6000602082019050818103600083015261216281611d4c565b9050919050565b6000602082019050818103600083015261218281611d8c565b9050919050565b600060208201905081810360008301526121a281611df2565b9050919050565b60006060820190506121be6000830184611e4c565b92915050565b600060208201905081810360008301526121de8184611e8e565b905092915050565b600060a08201905081810360008301526122008188611e8e565b905061220f6020830187611f62565b61221c6040830186611f62565b6122296060830185611f62565b6122366080830184611a9d565b9695505050505050565b60006020820190506122556000830184611f62565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612282576122816123b6565b5b8060405250919050565b600067ffffffffffffffff8211156122a7576122a66123b6565b5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006123258261234a565b9050919050565b60006123378261234a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156123a1578082015181840152602081019050612386565b838111156123b0576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b6123d28161231a565b81146123dd57600080fd5b50565b6123e98161232c565b81146123f457600080fd5b50565b6124008161233e565b811461240b57600080fd5b50565b6124178161236a565b811461242257600080fd5b5056fea264697066735822122081df4713d3dc2195c53fff67b08aed0d01ebd139e79c85619a2d40be6e2d53c264736f6c63430007060033\";\n\nexport class Project__factory extends ContractFactory {\n  constructor(linkLibraryAddresses: ProjectLibraryAddresses, signer?: Signer) {\n    super(_abi, Project__factory.linkBytecode(linkLibraryAddresses), signer);\n  }\n\n  static linkBytecode(linkLibraryAddresses: ProjectLibraryAddresses): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$03536fd10dbb8a170600640c424d9e3a97\\\\$__\", \"g\"),\n      linkLibraryAddresses[\"src/Utils.sol:Utils\"]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumberish,\n    _deadline: BigNumberish,\n    _creator: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Project> {\n    return super.deploy(\n      _category,\n      _title,\n      _description,\n      _url,\n      _goal,\n      _deadline,\n      _creator,\n      overrides || {}\n    ) as Promise<Project>;\n  }\n  getDeployTransaction(\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumberish,\n    _deadline: BigNumberish,\n    _creator: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      _category,\n      _title,\n      _description,\n      _url,\n      _goal,\n      _deadline,\n      _creator,\n      overrides || {}\n    );\n  }\n  attach(address: string): Project {\n    return super.attach(address) as Project;\n  }\n  connect(signer: Signer): Project__factory {\n    return super.connect(signer) as Project__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ProjectInterface {\n    return new utils.Interface(_abi) as ProjectInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Project {\n    return new Contract(address, _abi, signerOrProvider) as Project;\n  }\n}\n\nexport interface ProjectLibraryAddresses {\n  [\"src/Utils.sol:Utils\"]: string;\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type {\n  ProjectManager,\n  ProjectManagerInterface,\n} from \"../ProjectManager\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"creator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"url\",\n        type: \"string\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n    ],\n    name: \"ProjectCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"addr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"url\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProjectUpdated\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable\",\n        name: \"_projectAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"contribute\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_id\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_category\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_url\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_goal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"create\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    name: \"indexes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"projects\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable\",\n        name: \"_projectAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_category\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_title\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_description\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"_url\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_goal\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setInfo\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalProjects\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600181905550614823806100686000396000f3fe6080604052600436106200008b5760003560e01c806373e888fd116200005557806373e888fd14620001975780638da5cb5b14620001b75780639144c2eb14620001e75780639c361e4e14620002155762000096565b8063107046bd146200009b578063188ec35614620000df5780632427e59e146200010f5780635a9b167614620001535762000096565b366200009657600080fd5b600080fd5b348015620000a857600080fd5b50620000c76004803603810190620000c19190620010f4565b62000245565b604051620000d6919062001424565b60405180910390f35b348015620000ec57600080fd5b50620000f762000278565b604051620001069190620016c6565b60405180910390f35b3480156200011c57600080fd5b506200013b600480360381019062000135919062000f40565b62000280565b6040516200014a9190620016c6565b60405180910390f35b3480156200016057600080fd5b506200017f600480360381019062000179919062000f85565b620002ae565b6040516200018e919062001424565b60405180910390f35b620001b56004803603810190620001af919062000e03565b62000557565b005b348015620001c457600080fd5b50620001cf62000708565b604051620001de919062001424565b60405180910390f35b348015620001f457600080fd5b506200021360048036038101906200020d919062000e2f565b6200072c565b005b3480156200022257600080fd5b506200022d62000b2f565b6040516200023c9190620016c6565b60405180910390f35b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600080600289604051620002c391906200140b565b9081526020016040518091039020541462000315576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030c90620015fa565b60405180910390fd5b600083116200035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200035290620016a4565b60405180910390fd5b428211620003a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003979062001682565b60405180910390fd5b600087878787878733604051620003b79062000b35565b620003c997969594939291906200153f565b604051809103906000f080158015620003e6573d6000803e3d6000fd5b5090506000819050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200045890620015d8565b60405180910390fd5b6000600180540190508060028c6040516200047d91906200140b565b908152602001604051809103902081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16817f1846f69aa129d4d2ff2571d6357d5df660cfe55735967c4b882a40c9cca1aaec89856040516200052c92919062001482565b60405180910390a3600160008154809291906001019190505550819350505050979650505050505050565b600034116200059d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000594906200163e565b60405180910390fd5b60008190503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b1580156200060057600080fd5b505afa15801562000615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200063b919062000dd7565b73ffffffffffffffffffffffffffffffffffffffff161462000694576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200068b906200161c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166373e888fd34336040518363ffffffff1660e01b8152600401620006d0919062001441565b6000604051808303818588803b158015620006ea57600080fd5b505af1158015620006ff573d6000803e3d6000fd5b50505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008790503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b1580156200078f57600080fd5b505afa158015620007a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007ca919062000dd7565b73ffffffffffffffffffffffffffffffffffffffff161462000823576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200081a906200161c565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16635a9b0b896040518163ffffffff1660e01b815260040160006040518083038186803b1580156200086c57600080fd5b505afa15801562000881573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620008ac9190620010af565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806200093857508060e0015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6200097a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009719062001660565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141562000a4e578173ffffffffffffffffffffffffffffffffffffffff16639c27b27c8989898989896040518763ffffffff1660e01b815260040162000a1496959493929190620014b6565b600060405180830381600087803b15801562000a2f57600080fd5b505af115801562000a44573d6000803e3d6000fd5b5050505062000ad4565b8173ffffffffffffffffffffffffffffffffffffffff16639c27b27c826000015189898986608001518760c001516040518763ffffffff1660e01b815260040162000a9f96959493929190620014b6565b600060405180830381600087803b15801562000aba57600080fd5b505af115801562000acf573d6000803e3d6000fd5b505050505b8873ffffffffffffffffffffffffffffffffffffffff167fcac90553ecdf1df6d098427e71ae407d2bccfacb6e266fa648684fd5b16dea458660405162000b1c91906200145e565b60405180910390a2505050505050505050565b60015481565b612f84806200186a83390190565b600062000b5a62000b548462001717565b620016e3565b90508281526020810184848401111562000b7357600080fd5b62000b80848285620017c3565b509392505050565b600062000b9f62000b998462001717565b620016e3565b90508281526020810184848401111562000bb857600080fd5b62000bc5848285620017d2565b509392505050565b60008151905062000bde816200181b565b92915050565b60008135905062000bf58162001835565b92915050565b60008151905062000c0c8162001835565b92915050565b600082601f83011262000c2457600080fd5b813562000c3684826020860162000b43565b91505092915050565b600082601f83011262000c5157600080fd5b815162000c6384826020860162000b88565b91505092915050565b6000610100828403121562000c8057600080fd5b62000c8d610100620016e3565b9050600082015167ffffffffffffffff81111562000caa57600080fd5b62000cb88482850162000c3f565b600083015250602082015167ffffffffffffffff81111562000cd957600080fd5b62000ce78482850162000c3f565b602083015250604082015167ffffffffffffffff81111562000d0857600080fd5b62000d168482850162000c3f565b604083015250606082015167ffffffffffffffff81111562000d3757600080fd5b62000d458482850162000c3f565b606083015250608062000d5b8482850162000dc0565b60808301525060a062000d718482850162000dc0565b60a08301525060c062000d878482850162000dc0565b60c08301525060e062000d9d8482850162000bfb565b60e08301525092915050565b60008135905062000dba816200184f565b92915050565b60008151905062000dd1816200184f565b92915050565b60006020828403121562000dea57600080fd5b600062000dfa8482850162000bcd565b91505092915050565b60006020828403121562000e1657600080fd5b600062000e268482850162000be4565b91505092915050565b600080600080600080600060e0888a03121562000e4b57600080fd5b600062000e5b8a828b0162000be4565b975050602088013567ffffffffffffffff81111562000e7957600080fd5b62000e878a828b0162000c12565b965050604088013567ffffffffffffffff81111562000ea557600080fd5b62000eb38a828b0162000c12565b955050606088013567ffffffffffffffff81111562000ed157600080fd5b62000edf8a828b0162000c12565b945050608088013567ffffffffffffffff81111562000efd57600080fd5b62000f0b8a828b0162000c12565b93505060a062000f1e8a828b0162000da9565b92505060c062000f318a828b0162000da9565b91505092959891949750929550565b60006020828403121562000f5357600080fd5b600082013567ffffffffffffffff81111562000f6e57600080fd5b62000f7c8482850162000c12565b91505092915050565b600080600080600080600060e0888a03121562000fa157600080fd5b600088013567ffffffffffffffff81111562000fbc57600080fd5b62000fca8a828b0162000c12565b975050602088013567ffffffffffffffff81111562000fe857600080fd5b62000ff68a828b0162000c12565b965050604088013567ffffffffffffffff8111156200101457600080fd5b620010228a828b0162000c12565b955050606088013567ffffffffffffffff8111156200104057600080fd5b6200104e8a828b0162000c12565b945050608088013567ffffffffffffffff8111156200106c57600080fd5b6200107a8a828b0162000c12565b93505060a06200108d8a828b0162000da9565b92505060c0620010a08a828b0162000da9565b91505092959891949750929550565b600060208284031215620010c257600080fd5b600082015167ffffffffffffffff811115620010dd57600080fd5b620010eb8482850162000c6c565b91505092915050565b6000602082840312156200110757600080fd5b6000620011178482850162000da9565b91505092915050565b6200112b8162001785565b82525050565b6200113c8162001771565b82525050565b60006200114f826200174a565b6200115b818562001755565b93506200116d818560208601620017d2565b62001178816200180a565b840191505092915050565b600062001190826200174a565b6200119c818562001766565b9350620011ae818560208601620017d2565b80840191505092915050565b6000620011c9601a8362001755565b91507f50726f6a656374206465706c6f796d656e74206661696c65642e0000000000006000830152602082019050919050565b60006200120b601a8362001755565b91507f4964656e74696669657220616c7265616479206578697374732e0000000000006000830152602082019050919050565b60006200124d60108362001755565b91507f496e76616c69642070726f6a6563742e000000000000000000000000000000006000830152602082019050919050565b60006200128f60248362001755565b91507f436f6e747269627574696f6e206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620012f760198362001755565b91507f4d757374206265206f776e6572206f722063726561746f722e000000000000006000830152602082019050919050565b60006200133960308362001755565b91507f446561646c696e65206d7573742062652067726561746572207468616e20637560008301527f7272656e742074696d657374616d702e000000000000000000000000000000006020830152604082019050919050565b6000620013a160248362001755565b91507f46756e64696e6720676f616c206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6200140581620017b9565b82525050565b600062001419828462001183565b915081905092915050565b60006020820190506200143b600083018462001131565b92915050565b600060208201905062001458600083018462001120565b92915050565b600060208201905081810360008301526200147a818462001142565b905092915050565b600060408201905081810360008301526200149e818562001142565b9050620014af602083018462001131565b9392505050565b600060c0820190508181036000830152620014d2818962001142565b90508181036020830152620014e8818862001142565b90508181036040830152620014fe818762001142565b9050818103606083015262001514818662001142565b9050620015256080830185620013fa565b6200153460a0830184620013fa565b979650505050505050565b600060e08201905081810360008301526200155b818a62001142565b9050818103602083015262001571818962001142565b9050818103604083015262001587818862001142565b905081810360608301526200159d818762001142565b9050620015ae6080830186620013fa565b620015bd60a0830185620013fa565b620015cc60c083018462001120565b98975050505050505050565b60006020820190508181036000830152620015f381620011ba565b9050919050565b600060208201905081810360008301526200161581620011fc565b9050919050565b6000602082019050818103600083015262001637816200123e565b9050919050565b60006020820190508181036000830152620016598162001280565b9050919050565b600060208201905081810360008301526200167b81620012e8565b9050919050565b600060208201905081810360008301526200169d816200132a565b9050919050565b60006020820190508181036000830152620016bf8162001392565b9050919050565b6000602082019050620016dd6000830184620013fa565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200170d576200170c62001808565b5b8060405250919050565b600067ffffffffffffffff82111562001735576200173462001808565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006200177e8262001799565b9050919050565b6000620017928262001799565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015620017f2578082015181840152602081019050620017d5565b8381111562001802576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b620018268162001771565b81146200183257600080fd5b50565b620018408162001785565b81146200184c57600080fd5b50565b6200185a81620017b9565b81146200186657600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002f8438038062002f8483398181016040528101906200003791906200063b565b73__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba886040518060400160405280600381526020017f4b494100000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b8152600401620000a7929190620008e1565b60206040518083038186803b158015620000c057600080fd5b505af4158015620000d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fb91906200060f565b80620001c7575073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba886040518060400160405280600381526020017f414f4e00000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b815260040162000172929190620008e1565b60206040518083038186803b1580156200018b57600080fd5b505af4158015620001a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c691906200060f565b5b62000209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000200906200091c565b60405180910390fd5b600083116200024f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002469062000982565b60405180910390fd5b42821162000294576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028b9062000960565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000307576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002fe906200093e565b60405180910390fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518061010001604052808881526020018781526020018681526020018581526020018481526020014281526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681525060066000820151816000019080519060200190620003b7929190620004a2565b506020820151816001019080519060200190620003d6929190620004a2565b506040820151816002019080519060200190620003f5929190620004a2565b50606082015181600301908051906020019062000414929190620004a2565b506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000600181905550600060028190555060006003819055505050505050505062000b19565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620004da576000855562000526565b82601f10620004f557805160ff191683800117855562000526565b8280016001018555821562000526579182015b828111156200052557825182559160200191906001019062000508565b5b50905062000535919062000539565b5090565b5b80821115620005545760008160009055506001016200053a565b5090565b60006200056f6200056984620009d8565b620009a4565b9050828152602081018484840111156200058857600080fd5b6200059584828562000a82565b509392505050565b600081519050620005ae8162000acb565b92915050565b600081519050620005c58162000ae5565b92915050565b600082601f830112620005dd57600080fd5b8151620005ef84826020860162000558565b91505092915050565b600081519050620006098162000aff565b92915050565b6000602082840312156200062257600080fd5b60006200063284828501620005b4565b91505092915050565b600080600080600080600060e0888a0312156200065757600080fd5b600088015167ffffffffffffffff8111156200067257600080fd5b620006808a828b01620005cb565b975050602088015167ffffffffffffffff8111156200069e57600080fd5b620006ac8a828b01620005cb565b965050604088015167ffffffffffffffff811115620006ca57600080fd5b620006d88a828b01620005cb565b955050606088015167ffffffffffffffff811115620006f657600080fd5b620007048a828b01620005cb565b9450506080620007178a828b01620005f8565b93505060a06200072a8a828b01620005f8565b92505060c06200073d8a828b016200059d565b91505092959891949750929550565b6000620007598262000a0b565b62000765818562000a27565b93506200077781856020860162000a82565b620007828162000aba565b840191505092915050565b60006200079c601c8362000a16565b91507f43617465676f7279206d757374206265204b4941206f7220414f4e2e000000006000830152602082019050919050565b6000620007de601e8362000a16565b91507f43726561746f722061646472657373206d7573742062652076616c69642e00006000830152602082019050919050565b60006200082060308362000a16565b91507f446561646c696e65206d7573742062652067726561746572207468616e20637560008301527f7272656e742074696d657374616d702e000000000000000000000000000000006020830152604082019050919050565b60006200088860248362000a16565b91507f46756e64696e6720676f616c206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006040820190508181036000830152620008fd81856200074c565b905081810360208301526200091381846200074c565b90509392505050565b6000602082019050818103600083015262000937816200078d565b9050919050565b600060208201905081810360008301526200095981620007cf565b9050919050565b600060208201905081810360008301526200097b8162000811565b9050919050565b600060208201905081810360008301526200099d8162000879565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715620009ce57620009cd62000ab8565b5b8060405250919050565b600067ffffffffffffffff821115620009f657620009f562000ab8565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000a458262000a58565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101562000aa257808201518184015260208101905062000a85565b8381111562000ab2576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b62000ad68162000a38565b811462000ae257600080fd5b50565b62000af08162000a4c565b811462000afc57600080fd5b50565b62000b0a8162000a78565b811462000b1657600080fd5b50565b61245b8062000b296000396000f3fe6080604052600436106100e15760003560e01c806363bd1d4a1161007f578063b8b2acaa11610059578063b8b2acaa14610292578063cef42254146102c1578063f251fc8c146102fe578063fe47a8a714610329576100eb565b806363bd1d4a1461023657806373e888fd1461024d5780639c27b27c14610269576100eb565b806337c08923116100bb57806337c089231461019e578063481c6a75146101c9578063590e1ae3146101f45780635a9b0b891461020b576100eb565b80631cee0700146100f05780631f6d49421461012f578063370158ea1461016c576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b5061011760048036038101906101129190611a56565b610354565b60405161012693929190611fa1565b60405180910390f35b34801561013b57600080fd5b50610156600480360381019061015191906118f2565b61039e565b6040516101639190612240565b60405180910390f35b34801561017857600080fd5b506101816103b6565b604051610195989796959493929190611fd8565b60405180910390f35b3480156101aa57600080fd5b506101b361066c565b6040516101c09190612240565b60405180910390f35b3480156101d557600080fd5b506101de610672565b6040516101eb9190611f86565b60405180910390f35b34801561020057600080fd5b50610209610696565b005b34801561021757600080fd5b506102206108ce565b60405161022d91906121c4565b60405180910390f35b34801561024257600080fd5b5061024b610be5565b005b6102676004803603810190610262919061191b565b610f2a565b005b34801561027557600080fd5b50610290600480360381019061028b919061196d565b6111e9565b005b34801561029e57600080fd5b506102a76112fa565b6040516102b89594939291906121e6565b60405180910390f35b3480156102cd57600080fd5b506102e860048036038101906102e39190611a56565b611650565b6040516102f591906121a9565b60405180910390f35b34801561030a57600080fd5b506103136116ed565b6040516103209190612240565b60405180910390f35b34801561033557600080fd5b5061033e6116f3565b60405161034b9190612240565b60405180910390f35b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b60046020528060005260406000206000915090505481565b6006806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062a5780601f106105ff5761010080835404028352916020019161062a565b820191906000526020600020905b81548152906001019060200180831161060d57829003601f168201915b5050505050908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42600680015411156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490612109565b60405180910390fd5b60066004015460035410610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d906120e9565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156108cb576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107de90611f71565b60006040518083038185875af1925050503d806000811461081b576040519150601f19603f3d011682016040523d82523d6000602084013e610820565b606091505b5050905080610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90612189565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167f8acf4934346d52d5e66a4489928806be024d6d8d3db9110a0c946f23bb67a685846040516108c19190612240565b60405180910390a3505b50565b6108d66116f9565b600660405180610100016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561097d5780601f106109525761010080835404028352916020019161097d565b820191906000526020600020905b81548152906001019060200180831161096057829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a1f5780601f106109f457610100808354040283529160200191610a1f565b820191906000526020600020905b815481529060010190602001808311610a0257829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ac15780601f10610a9657610100808354040283529160200191610ac1565b820191906000526020600020905b815481529060010190602001808311610aa457829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b635780601f10610b3857610100808354040283529160200191610b63565b820191906000526020600020905b815481529060010190602001808311610b4657829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905090565b3373ffffffffffffffffffffffffffffffffffffffff16600660070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906120c9565b60405180910390fd5b4260068001541115610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690612109565b60405180910390fd5b600073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba60066000016040518060400160405280600381526020017f414f4e00000000000000000000000000000000000000000000000000000000008152506040518363ffffffff1660e01b8152600401610d33929190612072565b60206040518083038186803b158015610d4b57600080fd5b505af4158015610d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d839190611944565b90508015610dd6576006600401546003541015610dd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcc90612129565b60405180910390fd5b5b600060035490506000811115610f265760006003819055506000600660070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610e3990611f71565b60006040518083038185875af1925050503d8060008114610e76576040519150601f19603f3d011682016040523d82523d6000602084013e610e7b565b606091505b5050905080610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb690612189565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167faeafd3f12e55085474a74a4ee382b64d62a256ea1d447e40e412df48abb17e5d84604051610f1c9190612240565b60405180910390a3505b5050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faf90612149565b60405180910390fd5b60003411610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290612169565b60405180910390fd5b4260068001541015611042576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611039906120a9565b60405180910390fd5b60006005600060015481526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281600101819055503481600201819055506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905034600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600081141561115d576002600081548092919060010191905055505b346003600082825401925050819055506001600081548092919060010191905055508273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fe482e8d853bcf23b76d7656a12af7c09cc6820a4683d6c48851261c2b12323b3346040516111dc9190612240565b60405180910390a3505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e90612149565b60405180910390fd5b8560066000019080519060200190611290929190611754565b5084600660010190805190602001906112aa929190611754565b5083600660020190805190602001906112c4929190611754565b5082600660030190805190602001906112de929190611754565b5081600660040181905550806006800181905550505050505050565b6113026116f9565b600080600080600660015460025460035460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405180610100016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113da5780601f106113af576101008083540402835291602001916113da565b820191906000526020600020905b8154815290600101906020018083116113bd57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561147c5780601f106114515761010080835404028352916020019161147c565b820191906000526020600020905b81548152906001019060200180831161145f57829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561151e5780601f106114f35761010080835404028352916020019161151e565b820191906000526020600020905b81548152906001019060200180831161150157829003601f168201915b50505050508152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115c05780601f10611595576101008083540402835291602001916115c0565b820191906000526020600020905b8154815290600101906020018083116115a357829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509450945094509450945094509091929394565b6116586117e2565b6000600560008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481525050905080915050919050565b60025481565b60035481565b60405180610100016040528060608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261178a57600085556117d1565b82601f106117a357805160ff19168380011785556117d1565b828001600101855582156117d1579182015b828111156117d05782518255916020019190600101906117b5565b5b5090506117de9190611819565b5090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b5b8082111561183257600081600090555060010161181a565b5090565b60006118496118448461228c565b61225b565b90508281526020810184848401111561186157600080fd5b61186c848285612374565b509392505050565b600081359050611883816123c9565b92915050565b600081359050611898816123e0565b92915050565b6000815190506118ad816123f7565b92915050565b600082601f8301126118c457600080fd5b81356118d4848260208601611836565b91505092915050565b6000813590506118ec8161240e565b92915050565b60006020828403121561190457600080fd5b600061191284828501611874565b91505092915050565b60006020828403121561192d57600080fd5b600061193b84828501611889565b91505092915050565b60006020828403121561195657600080fd5b60006119648482850161189e565b91505092915050565b60008060008060008060c0878903121561198657600080fd5b600087013567ffffffffffffffff8111156119a057600080fd5b6119ac89828a016118b3565b965050602087013567ffffffffffffffff8111156119c957600080fd5b6119d589828a016118b3565b955050604087013567ffffffffffffffff8111156119f257600080fd5b6119fe89828a016118b3565b945050606087013567ffffffffffffffff811115611a1b57600080fd5b611a2789828a016118b3565b9350506080611a3889828a016118dd565b92505060a0611a4989828a016118dd565b9150509295509295509295565b600060208284031215611a6857600080fd5b6000611a76848285016118dd565b91505092915050565b611a888161232c565b82525050565b611a978161232c565b82525050565b611aa68161231a565b82525050565b6000611ab7826122d1565b611ac181856122e7565b9350611ad1818560208601612383565b611ada816123b8565b840191505092915050565b6000611af0826122d1565b611afa81856122f8565b9350611b0a818560208601612383565b611b13816123b8565b840191505092915050565b6000611b29826122d1565b611b338185612309565b9350611b43818560208601612383565b611b4c816123b8565b840191505092915050565b600081546001811660008114611b745760018114611b9a57611bde565b607f6002830416611b858187612309565b955060ff198316865260208601935050611bde565b60028204611ba88187612309565b9550611bb3856122bc565b60005b82811015611bd557815481890152600182019150602081019050611bb6565b80880195505050505b505092915050565b6000611bf36014836122f8565b91507f50726f6a6563742068617320657870697265642e0000000000000000000000006000830152602082019050919050565b6000611c33600d836122f8565b91507f4f6e6c792063726561746f722e000000000000000000000000000000000000006000830152602082019050919050565b6000611c73601e836122f8565b91507f46756e64696e6720676f616c20686173206265656e20726561636865642e00006000830152602082019050919050565b6000611cb3600d836122f8565b91507f4f6e6c7920657870697265642e000000000000000000000000000000000000006000830152602082019050919050565b6000611cf36022836122f8565b91507f46756e64696e6720676f616c20686173206e6f74206265656e2072656163686560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d59600d836122f8565b91507f4f6e6c79206d616e616765722e000000000000000000000000000000000000006000830152602082019050919050565b6000611d996024836122f8565b91507f436f6e747269627574696f6e206d75737420626520677265617465722074686160008301527f6e20302e000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611dff6016836122f8565b91507f4661696c656420746f2073656e6420616d6f756e742e000000000000000000006000830152602082019050919050565b6000611e3f6000836122dc565b9150600082019050919050565b606082016000820151611e626000850182611a7f565b506020820151611e756020850182611f53565b506040820151611e886040850182611f53565b50505050565b6000610100830160008301518482036000860152611eac8282611aac565b91505060208301518482036020860152611ec68282611aac565b91505060408301518482036040860152611ee08282611aac565b91505060608301518482036060860152611efa8282611aac565b9150506080830151611f0f6080860182611f53565b5060a0830151611f2260a0860182611f53565b5060c0830151611f3560c0860182611f53565b5060e0830151611f4860e0860182611a7f565b508091505092915050565b611f5c8161236a565b82525050565b611f6b8161236a565b82525050565b6000611f7c82611e32565b9150819050919050565b6000602082019050611f9b6000830184611a9d565b92915050565b6000606082019050611fb66000830186611a8e565b611fc36020830185611f62565b611fd06040830184611f62565b949350505050565b6000610100820190508181036000830152611ff3818b611ae5565b90508181036020830152612007818a611ae5565b9050818103604083015261201b8189611ae5565b9050818103606083015261202f8188611ae5565b905061203e6080830187611f62565b61204b60a0830186611f62565b61205860c0830185611f62565b61206560e0830184611a8e565b9998505050505050505050565b6000604082019050818103600083015261208c8185611b57565b905081810360208301526120a08184611b1e565b90509392505050565b600060208201905081810360008301526120c281611be6565b9050919050565b600060208201905081810360008301526120e281611c26565b9050919050565b6000602082019050818103600083015261210281611c66565b9050919050565b6000602082019050818103600083015261212281611ca6565b9050919050565b6000602082019050818103600083015261214281611ce6565b9050919050565b6000602082019050818103600083015261216281611d4c565b9050919050565b6000602082019050818103600083015261218281611d8c565b9050919050565b600060208201905081810360008301526121a281611df2565b9050919050565b60006060820190506121be6000830184611e4c565b92915050565b600060208201905081810360008301526121de8184611e8e565b905092915050565b600060a08201905081810360008301526122008188611e8e565b905061220f6020830187611f62565b61221c6040830186611f62565b6122296060830185611f62565b6122366080830184611a9d565b9695505050505050565b60006020820190506122556000830184611f62565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612282576122816123b6565b5b8060405250919050565b600067ffffffffffffffff8211156122a7576122a66123b6565b5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006123258261234a565b9050919050565b60006123378261234a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156123a1578082015181840152602081019050612386565b838111156123b0576000848401525b50505050565bfe5b6000601f19601f8301169050919050565b6123d28161231a565b81146123dd57600080fd5b50565b6123e98161232c565b81146123f457600080fd5b50565b6124008161233e565b811461240b57600080fd5b50565b6124178161236a565b811461242257600080fd5b5056fea264697066735822122081df4713d3dc2195c53fff67b08aed0d01ebd139e79c85619a2d40be6e2d53c264736f6c63430007060033a2646970667358221220e520561ec81d02e27ca39e14850eec92d28a1c1f491bfd54beb876755821713564736f6c63430007060033\";\n\nexport class ProjectManager__factory extends ContractFactory {\n  constructor(\n    linkLibraryAddresses: ProjectManagerLibraryAddresses,\n    signer?: Signer\n  ) {\n    super(\n      _abi,\n      ProjectManager__factory.linkBytecode(linkLibraryAddresses),\n      signer\n    );\n  }\n\n  static linkBytecode(\n    linkLibraryAddresses: ProjectManagerLibraryAddresses\n  ): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$03536fd10dbb8a170600640c424d9e3a97\\\\$__\", \"g\"),\n      linkLibraryAddresses[\"src/Utils.sol:Utils\"]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<ProjectManager> {\n    return super.deploy(overrides || {}) as Promise<ProjectManager>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): ProjectManager {\n    return super.attach(address) as ProjectManager;\n  }\n  connect(signer: Signer): ProjectManager__factory {\n    return super.connect(signer) as ProjectManager__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): ProjectManagerInterface {\n    return new utils.Interface(_abi) as ProjectManagerInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ProjectManager {\n    return new Contract(address, _abi, signerOrProvider) as ProjectManager;\n  }\n}\n\nexport interface ProjectManagerLibraryAddresses {\n  [\"src/Utils.sol:Utils\"]: string;\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport {\n  Signer,\n  utils,\n  Contract,\n  ContractFactory,\n  PayableOverrides,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { SimpleManager, SimpleManagerInterface } from \"../SimpleManager\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"create\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"storageAddress\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6080604052610d4c806100136000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063188ec3561461004657806385aa92a714610064578063efc81a8c14610098575b600080fd5b61004e6100cc565b6040518082815260200191505060405180910390f35b61006c6100d4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100a06100f8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600042905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806040516101079061018d565b604051809103906000f080158015610123573d6000803e3d6000fd5b509050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610b7c8061019b8339019056fe6080604052607b6000819055506040518060400160405280600581526020017f74657374310000000000000000000000000000000000000000000000000000008152506002908051906020019061005792919061005d565b50610108565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261009357600085556100da565b82601f106100ac57805160ff19168380011785556100da565b828001600101855582156100da579182015b828111156100d95782518255916020019190600101906100be565b5b5090506100e791906100eb565b5090565b5b808211156101045760008160009055506001016100ec565b5090565b610a65806101176000396000f3fe6080604052600436106100865760003560e01c80636d4ce63c116100595780636d4ce63c14610130578063b60d42881461015b578063c1a28b3814610165578063cf9efb8b1461022d578063ef430aa61461025857610086565b8063188ec3561461008b5780631a39d8ef146100b65780631ab06ee5146100e1578063590e1ae314610119575b600080fd5b34801561009757600080fd5b506100a06102e8565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb6102f0565b6040518082815260200191505060405180910390f35b610117600480360360408110156100f757600080fd5b8101908080359060200190929190803590602001909291905050506102f6565b005b34801561012557600080fd5b5061012e610360565b005b34801561013c57600080fd5b50610145610471565b6040518082815260200191505060405180910390f35b61016361047a565b005b34801561017157600080fd5b5061022b6004803603602081101561018857600080fd5b81019080803590602001906401000000008111156101a557600080fd5b8201836020820111156101b757600080fd5b803590602001918460018302840111640100000000831117156101d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610526565b005b34801561023957600080fd5b50610242610881565b6040518082815260200191505060405180910390f35b34801561026457600080fd5b5061026d610887565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ad578082015181840152602081019050610292565b50505050905090810190601f1680156102da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600042905090565b60035481565b42811161034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806109d1603b913960400191505060405180910390fd5b81600081905550806001819055505050565b6000600354905060006003819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146103f1576040519150601f19603f3d011682016040523d82523d6000602084013e6103f6565b606091505b505090508061046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4661696c656420746f2073656e6420616d6f756e742e0000000000000000000081525060200191505060405180910390fd5b5050565b60008054905090565b600034116104d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a0c6024913960400191505060405180910390fd5b3460036000828254019250508190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b42600154111561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920657870697265642e0000000000000000000000000000000000000081525060200191505060405180910390fd5b73__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561060c5780820151818401526020810190506105f1565b50505050905090810190601f1680156106395780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737431000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b15801561068b57600080fd5b505af415801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b8101908080519060200190929190505050806107f5575073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561073a57808201518184015260208101905061071f565b50505050905090810190601f1680156107675780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737432000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b1580156107b957600080fd5b505af41580156107cd573d6000803e3d6000fd5b505050506040513d60208110156107e357600080fd5b81019080805190602001909291905050505b610867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f746573740000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b806002908051906020019061087d929190610925565b5050565b60015481565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261095b57600085556109a2565b82601f1061097457805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a1578251825591602001919060010190610986565b5b5090506109af91906109b3565b5090565b5b808211156109cc5760008160009055506001016109b4565b509056fe5265666572656e63652074696d657374616d70206d7573742062652067726561746572207468616e2063757272656e742074696d657374616d702e436f6e747269627574696f6e206d7573742062652067726561746572207468616e20302ea26469706673582212206896d04237edbc6faecf15187d6bb7352e7a7522b80157cfe73ab3d9c830876f64736f6c63430007060033a2646970667358221220d6170074719b6177cfa465a5eb603d92917672e83ee75c4e85e35f376e60f46d64736f6c63430007060033\";\n\nexport class SimpleManager__factory extends ContractFactory {\n  constructor(\n    linkLibraryAddresses: SimpleManagerLibraryAddresses,\n    signer?: Signer\n  ) {\n    super(\n      _abi,\n      SimpleManager__factory.linkBytecode(linkLibraryAddresses),\n      signer\n    );\n  }\n\n  static linkBytecode(\n    linkLibraryAddresses: SimpleManagerLibraryAddresses\n  ): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$03536fd10dbb8a170600640c424d9e3a97\\\\$__\", \"g\"),\n      linkLibraryAddresses[\"src/Utils.sol:Utils\"]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<SimpleManager> {\n    return super.deploy(overrides || {}) as Promise<SimpleManager>;\n  }\n  getDeployTransaction(\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): SimpleManager {\n    return super.attach(address) as SimpleManager;\n  }\n  connect(signer: Signer): SimpleManager__factory {\n    return super.connect(signer) as SimpleManager__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): SimpleManagerInterface {\n    return new utils.Interface(_abi) as SimpleManagerInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): SimpleManager {\n    return new Contract(address, _abi, signerOrProvider) as SimpleManager;\n  }\n}\n\nexport interface SimpleManagerLibraryAddresses {\n  [\"src/Utils.sol:Utils\"]: string;\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport {\n  Signer,\n  utils,\n  Contract,\n  ContractFactory,\n  PayableOverrides,\n} from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { SimpleStorage, SimpleStorageInterface } from \"../SimpleStorage\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"payable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"category\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"fund\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"get\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refTimestamp\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"refund\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"x\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_refTimestamp\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"set\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"_category\",\n        type: \"string\",\n      },\n    ],\n    name: \"setCategory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalAmount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6080604052607b6000819055506040518060400160405280600581526020017f74657374310000000000000000000000000000000000000000000000000000008152506002908051906020019061005792919061005d565b50610108565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261009357600085556100da565b82601f106100ac57805160ff19168380011785556100da565b828001600101855582156100da579182015b828111156100d95782518255916020019190600101906100be565b5b5090506100e791906100eb565b5090565b5b808211156101045760008160009055506001016100ec565b5090565b610a65806101176000396000f3fe6080604052600436106100865760003560e01c80636d4ce63c116100595780636d4ce63c14610130578063b60d42881461015b578063c1a28b3814610165578063cf9efb8b1461022d578063ef430aa61461025857610086565b8063188ec3561461008b5780631a39d8ef146100b65780631ab06ee5146100e1578063590e1ae314610119575b600080fd5b34801561009757600080fd5b506100a06102e8565b6040518082815260200191505060405180910390f35b3480156100c257600080fd5b506100cb6102f0565b6040518082815260200191505060405180910390f35b610117600480360360408110156100f757600080fd5b8101908080359060200190929190803590602001909291905050506102f6565b005b34801561012557600080fd5b5061012e610360565b005b34801561013c57600080fd5b50610145610471565b6040518082815260200191505060405180910390f35b61016361047a565b005b34801561017157600080fd5b5061022b6004803603602081101561018857600080fd5b81019080803590602001906401000000008111156101a557600080fd5b8201836020820111156101b757600080fd5b803590602001918460018302840111640100000000831117156101d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610526565b005b34801561023957600080fd5b50610242610881565b6040518082815260200191505060405180910390f35b34801561026457600080fd5b5061026d610887565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ad578082015181840152602081019050610292565b50505050905090810190601f1680156102da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600042905090565b60035481565b42811161034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806109d1603b913960400191505060405180910390fd5b81600081905550806001819055505050565b6000600354905060006003819055506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146103f1576040519150601f19603f3d011682016040523d82523d6000602084013e6103f6565b606091505b505090508061046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4661696c656420746f2073656e6420616d6f756e742e0000000000000000000081525060200191505060405180910390fd5b5050565b60008054905090565b600034116104d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610a0c6024913960400191505060405180910390fd5b3460036000828254019250508190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b42600154111561059e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4f6e6c7920657870697265642e0000000000000000000000000000000000000081525060200191505060405180910390fd5b73__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561060c5780820151818401526020810190506105f1565b50505050905090810190601f1680156106395780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737431000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b15801561068b57600080fd5b505af415801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b8101908080519060200190929190505050806107f5575073__$03536fd10dbb8a170600640c424d9e3a97$__63bed34bba826040518263ffffffff1660e01b8152600401808060200180602001838103835284818151815260200191508051906020019080838360005b8381101561073a57808201518184015260208101905061071f565b50505050905090810190601f1680156107675780820380516001836020036101000a031916815260200191505b50838103825260058152602001807f7465737432000000000000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b1580156107b957600080fd5b505af41580156107cd573d6000803e3d6000fd5b505050506040513d60208110156107e357600080fd5b81019080805190602001909291905050505b610867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f746573740000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b806002908051906020019061087d929190610925565b5050565b60015481565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561091d5780601f106108f25761010080835404028352916020019161091d565b820191906000526020600020905b81548152906001019060200180831161090057829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261095b57600085556109a2565b82601f1061097457805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a1578251825591602001919060010190610986565b5b5090506109af91906109b3565b5090565b5b808211156109cc5760008160009055506001016109b4565b509056fe5265666572656e63652074696d657374616d70206d7573742062652067726561746572207468616e2063757272656e742074696d657374616d702e436f6e747269627574696f6e206d7573742062652067726561746572207468616e20302ea26469706673582212206896d04237edbc6faecf15187d6bb7352e7a7522b80157cfe73ab3d9c830876f64736f6c63430007060033\";\n\nexport class SimpleStorage__factory extends ContractFactory {\n  constructor(\n    linkLibraryAddresses: SimpleStorageLibraryAddresses,\n    signer?: Signer\n  ) {\n    super(\n      _abi,\n      SimpleStorage__factory.linkBytecode(linkLibraryAddresses),\n      signer\n    );\n  }\n\n  static linkBytecode(\n    linkLibraryAddresses: SimpleStorageLibraryAddresses\n  ): string {\n    let linkedBytecode = _bytecode;\n\n    linkedBytecode = linkedBytecode.replace(\n      new RegExp(\"__\\\\$03536fd10dbb8a170600640c424d9e3a97\\\\$__\", \"g\"),\n      linkLibraryAddresses[\"src/Utils.sol:Utils\"]\n        .replace(/^0x/, \"\")\n        .toLowerCase()\n    );\n\n    return linkedBytecode;\n  }\n\n  deploy(\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): Promise<SimpleStorage> {\n    return super.deploy(overrides || {}) as Promise<SimpleStorage>;\n  }\n  getDeployTransaction(\n    overrides?: PayableOverrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): SimpleStorage {\n    return super.attach(address) as SimpleStorage;\n  }\n  connect(signer: Signer): SimpleStorage__factory {\n    return super.connect(signer) as SimpleStorage__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): SimpleStorageInterface {\n    return new utils.Interface(_abi) as SimpleStorageInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): SimpleStorage {\n    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;\n  }\n}\n\nexport interface SimpleStorageLibraryAddresses {\n  [\"src/Utils.sol:Utils\"]: string;\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { Utils, UtilsInterface } from \"../Utils\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"a\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"b\",\n        type: \"string\",\n      },\n    ],\n    name: \"compareStrings\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6102c7610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063bed34bba1461003a575b600080fd5b61018a6004803603604081101561005057600080fd5b810190808035906020019064010000000081111561006d57600080fd5b82018360208201111561007f57600080fd5b803590602001918460018302840111640100000000831117156100a157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561010457600080fd5b82018360208201111561011657600080fd5b8035906020019184600183028401116401000000008311171561013857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101a2565b60405180821515815260200191505060405180910390f35b6000816040516020018082805190602001908083835b602083106101db57805182526020820191506020810190506020830392506101b8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b6020831061024d578051825260208201915060208101905060208303925061022a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201490509291505056fea2646970667358221220cf9538dbdbac2f50958f229eb97b5ea0016e2270fc399cfe2f55c766fbab1ef964736f6c63430007060033\";\n\nexport class Utils__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<Utils> {\n    return super.deploy(overrides || {}) as Promise<Utils>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Utils {\n    return super.attach(address) as Utils;\n  }\n  connect(signer: Signer): Utils__factory {\n    return super.connect(signer) as Utils__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): UtilsInterface {\n    return new utils.Interface(_abi) as UtilsInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Utils {\n    return new Contract(address, _abi, signerOrProvider) as Utils;\n  }\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import { PolyjuiceConfig } from \"@polyjuice-provider/base\";\nimport { PolyjuiceJsonRpcProvider } from \"@polyjuice-provider/ethers\";\nimport { PolyjuiceHttpProvider } from \"@polyjuice-provider/web3\";\nimport { ethers } from \"ethers\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Project, ProjectManager, ProjectManager__factory, Project__factory } from \"../typechain\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { Ensure } from \"../util/ensure\";\n\nexport class NervosClient {\n\n  private readonly _rpcProvider;\n  private readonly _httpProvider;\n  private readonly _web3Provider;\n  private readonly _nervosProviderConfig: PolyjuiceConfig;\n\n  constructor() {\n    Ensure.notNullOrWhiteSpace(process.env.REACT_APP_NERVOS_PROVIDER_URL, 'REACT_APP_NERVOS_PROVIDER_URL');\n    this._nervosProviderConfig = {\n      web3Url: process.env.REACT_APP_NERVOS_PROVIDER_URL\n    };\n    this._rpcProvider = new PolyjuiceJsonRpcProvider(this._nervosProviderConfig, this._nervosProviderConfig.web3Url);\n    this._httpProvider = new PolyjuiceHttpProvider(this._nervosProviderConfig.web3Url!, this._nervosProviderConfig);\n    this._web3Provider = new ethers.providers.Web3Provider(this._httpProvider);\n  }\n\n  get rpcProvider(): PolyjuiceJsonRpcProvider {\n    return this._rpcProvider;\n  }\n\n  async getProjectManagerAsync(account: Maybe<string>): Promise<ProjectManager> {\n    // https://github.com/dethcrypto/TypeChain/blob/master/examples/ethers-v5/src/index.ts\n    // https://github.com/RetricSu/polyjuice-provider-example/blob/main/src/godwoken.ts\n    if (CommonUtil.isNullOrWhitespace(account)) {\n      return ProjectManager__factory.connect(CommonConstants.PROJECT_MANAGER_CONTRACT, this._web3Provider);\n    }\n    const signer = this._web3Provider.getSigner(account as string);\n    return ProjectManager__factory.connect(CommonConstants.PROJECT_MANAGER_CONTRACT, signer);\n  }\n\n  async getProjectAsync(address: string, account: Maybe<string>): Promise<Project> {\n    Ensure.notNullOrWhiteSpace(address, \"address\");\n    if (CommonUtil.isNullOrWhitespace(account)) {\n      return Project__factory.connect(address, this._web3Provider);\n    }\n    const signer = this._web3Provider.getSigner(account as string);\n    return Project__factory.connect(address, signer);\n  }\n}\n\nconst client = new NervosClient();\n\nexport const getNervosClient = () => {\n  return client;\n}","import { BigNumber, Overrides } from \"ethers\";\nimport { BaseDataSource } from \".\";\nimport { getNervosClient, NervosClient } from \"../clients/nervos.client\";\nimport { Project as TypechainProject, ProjectManager as TypechainProjectManager } from \"../typechain\";\nimport { IChainUtil, NervosChainUtil } from \"../util/chain.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contribution, Project } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class NervosDataSource extends BaseDataSource {\n  private readonly _chainUtil: IChainUtil;\n  private readonly _client: NervosClient;\n  private readonly _projectContracts: Map<string, TypechainProject>;\n  private _projectManagerContract?: TypechainProjectManager;\n\n  constructor() {\n    super();\n    this._chainUtil = new NervosChainUtil();\n    this._client = getNervosClient();\n    this._projectContracts = new Map<string, TypechainProject>();\n  }\n\n  private getOverrideOptions(): Overrides {\n    return {\n      gasPrice: 0,\n      gasLimit: 1_000_000\n    };\n  }\n\n  private async getTypechainProjectAsync(_address: string): Promise<TypechainProject> {\n    const existing = this._projectContracts.get(_address);\n    if (existing) {\n      return existing;\n    }\n    const project = await this._client.getProjectAsync(_address, undefined);\n    this._projectContracts.set(_address, project);\n    return project;\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    this._projectManagerContract = await this._client.getProjectManagerAsync(undefined);\n  }\n\n  protected disposeProtected(): void {\n    this._projectManagerContract = undefined;\n  }\n\n  get util(): IChainUtil {\n    return this._chainUtil;\n  }\n\n  async getBalanceAsync(_address: string): Promise<BigNumber> {\n    return this._client.rpcProvider.getBalance(_address);\n  }\n\n  async getProjectIndexAsync(_id: string): Promise<BigNumber> {\n    return this._projectManagerContract?.indexes(_id) ?? BigNumber.from(0);\n  }\n\n  async getProjectAddressAsync(_index: BigNumber): Promise<Maybe<string>> {\n    return this._projectManagerContract?.projects(_index);\n  }\n\n  async getProjectAsync(_address: string): Promise<Project> {\n    const project = await this.getTypechainProjectAsync(_address);\n    const info = await project.getExtendedInfo();\n    return {\n      address: _address,\n      category: info[0][0],\n      title: info[0][1],\n      description: info[0][2],\n      url: info[0][3],\n      goal: info[0][4].toString(),\n      createdTimestamp: info[0][5].toString(),\n      expirationTimestamp: info[0][6].toString(),\n      creator: info[0][7],\n      totalContributions: info[1].toString(),\n      totalContributors: info[2].toString(),\n      totalFunding: info[3].toString()\n    }\n  }\n\n  async getProjectContributionAsync(_address: string, _index: BigNumber): Promise<Contribution> {\n    const project = await this.getTypechainProjectAsync(_address);\n    const c = await project.getContribution(_index);\n    return {\n      contributor: c.contributor,\n      createdTimestamp: c.created.toString(),\n      amount: c.amount.toString()\n    };\n  }\n\n  async getTimestampAsync(): Promise<BigNumber> {\n    return this._projectManagerContract?.getTimestamp() ?? BigNumber.from(0);\n  }\n\n  async getTotalProjectsAsync(): Promise<BigNumber> {\n    return this._projectManagerContract?.totalProjects() ?? BigNumber.from(0);\n  }\n\n  async createProjectAsync(\n    _id: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string> {\n    const manager = await this._client.getProjectManagerAsync(super.getAccount());\n    const tx = await manager.create(_id, _category, _title, _description, _url, _goal, _deadline, {\n      ...this.getOverrideOptions()\n    });\n    logger.info(tx)();\n    return tx.hash;\n  }\n\n  async editProjectAsync(\n    _address: string,\n    _category: string,\n    _title: string,\n    _description: string,\n    _url: string,\n    _goal: BigNumber,\n    _deadline: BigNumber\n  ): Promise<string> {\n    const manager = await this._client.getProjectManagerAsync(super.getAccount());\n    const tx = await manager.setInfo(_address, _category, _title, _description, _url, _goal, _deadline, {\n      ...this.getOverrideOptions()\n    });\n    logger.info(tx)();\n    return tx.hash;\n  }\n\n  async contributeAsync(_address: string, _amount: BigNumber): Promise<string> {\n    const manager = await this._client.getProjectManagerAsync(super.getAccount());\n    const tx = await manager.contribute(_address, {\n      value: _amount,\n      ...this.getOverrideOptions()\n    });\n    logger.info(tx)();\n    return tx.hash;\n  }\n}\n\nconst ds = new NervosDataSource();\n\nexport const getNervosDataSource = () => {\n  return ds;\n}","import { getMockDataSource, getNervosDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(): Promise<void> {\n    this._datasource = getNervosDataSource();\n    await this._datasource.initAsync();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}\n","import { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CommonConstants } from '../common/constants';\nimport { getAccountStorage } from '../storage';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from '../util/types';\nimport { getCommonContext } from './common.context';\n\nconst logger = getLogger();\n\nexport interface ConnectedWeb3Context {\n  account: Maybe<string>,\n  chainId: Maybe<number>,\n  login: (type: WalletType) => Promise<void>,\n  logout: () => void\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst ConnectedWeb3Context = React.createContext<Maybe<ConnectedWeb3Context>>(null)\n\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<Maybe<ConnectedWeb3Context>>(null);\n  const context = useWeb3React();\n  const commonContext = getCommonContext();\n  const accountStorage = getAccountStorage();\n\n  const { activate, deactivate, account, chainId } = context;\n\n  const login = useCallback(async (type: WalletType) => {\n    switch (type) {\n      case WalletType.MetaMask:\n        const injected = new InjectedConnector({});\n        const isMetamaskEnabled = 'ethereum' in window || 'web3' in window;\n        if (!isMetamaskEnabled) {\n          throw new Error('Metamask is not enabled');\n        }\n        await activate(injected, (error) => {\n          throw error;\n        });\n        const account = await injected.getAccount();\n        accountStorage.account = account;\n        logger.info('Account address:', account)();\n        localStorage.setItem(CommonConstants.WALLET_CONNECTOR_STORAGE_KEY, type);\n        break;\n      default:\n        break;\n    }\n  }, [activate, accountStorage]);\n\n  const logout = useCallback(() => {\n    deactivate();\n    accountStorage.account = undefined;\n    localStorage.removeItem(CommonConstants.WALLET_CONNECTOR_STORAGE_KEY);\n    window.location.reload();\n  }, [deactivate, accountStorage]);\n\n  useEffect(() => {\n    logger.info('Account:', account, 'ChainId:', chainId)();\n    const connector = localStorage.getItem(CommonConstants.WALLET_CONNECTOR_STORAGE_KEY);\n    const connectWalletAsync = async () => {\n      if (!account && connector) {\n        const injected = new InjectedConnector({});\n        // Don't await here, MetaMask could be locked -> render the page regardless\n        activate(injected, (error) => {\n          logger.info(error)();\n          localStorage.removeItem(CommonConstants.WALLET_CONNECTOR_STORAGE_KEY);\n        });\n      }\n      accountStorage.account = account;\n      const initAsync = async () => {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync()\n          setConnection({\n            account,\n            chainId,\n            login,\n            logout\n          });\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n      initAsync();\n    }\n    connectWalletAsync();\n  }, [activate, deactivate, login, logout, commonContext, accountStorage, account, chainId]);\n\n  if (!connection) {\n    return null;\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n}","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong. Probably your account does not exist on Nervos Layer 2 (Godwoken) or has insufficient balance.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React from 'react';\nimport { Paper, styled, Typography } from '@mui/material';\n\nconst DefaultPaper = styled(Paper)(\n  ({ theme }) => `\n  padding: ${theme.spacing(1, 1, 1)};\n  margin: ${theme.spacing(0, 0, 8)};\n  white-space: pre-line;\n`,\n);\n\nconst ErrorPaper = styled(DefaultPaper)(\n  ({ theme }) => `\n  background-color: ${theme.palette.error.main};\n  color: #fff;\n  padding: ${theme.spacing(1, 1, 1)};\n  white-space: pre-line;\n`,\n);\n\nexport const NetworkCheck = () => {\n  return (\n    <>\n      <ErrorPaper>\n        <Typography variant=\"h5\" align=\"center\">\n          The selected network is not supported.\n        </Typography>\n      </ErrorPaper>\n      <Typography align=\"center\" gutterBottom>\n        Add the following network to your MetaMask:\n      </Typography>\n      <DefaultPaper>\n        <Typography align=\"center\" sx={{ whiteSpace: 'pre-line' }}>\n          <code>\n            {`Network Name: Godwoken Testnet\n          RPC URL: https://godwoken-testnet-web3-rpc.ckbapp.dev\n          Chain ID: 71393\n          Currency Symbol: Leave Empty\n          Block Explorer URL: Leave Empty`}\n          </code>\n        </Typography>\n      </DefaultPaper>\n    </>\n  );\n}\n","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Item } from '../util/types';\n\nexport const GET_ITEMS_QUERY = gql`\n  query GetItems($first: Int!, $skip: Int!) {\n    items(first: $first, skip: $skip) @client {\n      id\n      createdDate\n      modifiedDate\n      name\n      description\n      imageUrl\n    }\n  }\n`;\n\nexport const ItemQueries = {\n  async items(parent: any, { first, skip }: any, context: ApolloContext): Promise<Item[] | null> {\n    try {\n      console.log('first', first, 'skip', skip);\n      console.log(await context.client.datasource.getTimestampAsync());\n      return [];\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n}","import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { GET_ITEMS_QUERY } from '../../../../queries';\n\nexport const Test = () => {\n  const { data, loading } = useQuery(GET_ITEMS_QUERY, {\n    variables: {\n      first: 10,\n      skip: 0\n    },\n    fetchPolicy: 'network-only'\n  });\n  console.log(loading, data);\n  return (\n    <>\n      Test\n    </>\n  );\n}\n","import { styled, Typography } from '@mui/material';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  padding-bottom: 10px;\n  padding-top: 10px;\n  padding-left: 24px;\n  padding-right: 24px;\n  text-align: right;\n`,\n);\n\nexport const Footer = () => {\n  return (\n    <>\n      <Root>\n        <Typography>v{process.env.REACT_APP_VERSION}</Typography>\n      </Root>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/metamask.4d940aa1.svg\";","\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { Avatar, Dialog, DialogContent, DialogContentText, DialogTitle, Link, List, ListItem, ListItemAvatar, ListItemText } from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport { styled } from '@mui/system';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { WalletType } from '../../../../util/types';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport MetaMaskSVG from './img/metamask.svg';\n\nconst Icon = styled('span')(`\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  display: block;\n  height: 22px;\n  width: 22px;\n`);\n\nconst IconMetaMask = styled(Icon)(`\n  background-image: url('${MetaMaskSVG}');\n`);\n\nconst logger = getLogger();\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open } = props;\n\n  const context = useConnectedWeb3Context();\n\n  const { account } = context;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleClickAsync = async (type: WalletType) => {\n    try {\n      await context.login(type);\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  };\n\n  useEffect(() => {\n    if (account && open) {\n      logger.info('Account address:', account)();\n      onClose();\n    }\n  }, [account, open, onClose])\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please install the MetaMask browser plugin and add the Godwoken Testnet as described&nbsp;\n          <Link href=\"https://github.com/niklr/crowdmint#setup-godwoken-network-in-metamask-\" target=\"_blank\">here</Link >.\n        </DialogContentText>\n        <List sx={{ pt: 2 }}>\n          <ListItem autoFocus button onClick={() => handleClickAsync(WalletType.MetaMask)}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: grey[200] }}>\n                <IconMetaMask />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary=\"Metamask\" />\n          </ListItem>\n        </List>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import AccountCircleTwoToneIcon from '@mui/icons-material/AccountCircleTwoTone';\nimport { AppBar, Button, Chip, styled, Toolbar, Tooltip, Typography } from '@mui/material';\nimport React from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { LoginDialog } from '../../../main/components/login';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const commonContext = getCommonContext();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n\n  const handleClickLogout = () => {\n    context.logout();\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  const showAlternateAddress = () => {\n    return commonContext.datasource.util.toAlternateAddress(context.account)?.toLowerCase() !== context.account?.toLowerCase();\n  }\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <img src={\"./assets/images/logo_64x64.png\"} alt=\"logo\" width=\"30\" />\n          <TitleTypography variant=\"h6\">\n            <a href=\"/\" style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n              {CommonConstants.APP_NAME}\n            </a>\n          </TitleTypography>\n          {context.account ? (\n            <>\n              <Tooltip title={\n                <React.Fragment>\n                  <p>Account address: {context.account}</p>\n                  {showAlternateAddress() && (\n                    <p>{commonContext.datasource.util.alternateAddressName} address: {commonContext.datasource.util.toAlternateAddress(context.account)}</p>\n                  )}\n                </React.Fragment>\n              } placement=\"bottom\" arrow>\n                <Chip icon={<AccountCircleTwoToneIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n              </Tooltip>\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <Button color=\"inherit\" onClick={handleClickLogin}>\n              Login\n            </Button>\n          )}\n          <LoginDialog open={loginOpen} onClose={handleLoginClose}></LoginDialog>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import { gql } from \"@apollo/client\";\nimport { BigNumber } from \"ethers\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const CREATE_PROJECT_MUTATION = gql`\nmutation CreateProject($id: ID!, $category: String!, $title: String!, $description: String!, $url: String!, $goal: String!, $deadline: String!) {\n  createProject(id: $id, category: $category, title: $title, description: $description, url: $url, goal: $goal, deadline: $deadline) @client\n}\n`;\n\nexport const EDIT_PROJECT_MUTATION = gql`\nmutation EditProject($address: String!, $category: String!, $title: String!, $description: String!, $url: String!, $goal: String!, $deadline: String!) {\n  editProject(address: $address, category: $category, title: $title, description: $description, url: $url, goal: $goal, deadline: $deadline) @client\n}\n`;\n\nexport const ProjectMutations = {\n  async createProject(parent: any, { id, category, title, description, url, goal, deadline }: any, context: ApolloContext): Promise<string> {\n    return context.client.datasource.createProjectAsync(id, category, title, description, url, BigNumber.from(goal), BigNumber.from(deadline));\n  },\n  async editProject(parent: any, { address, category, title, description, url, goal, deadline }: any, context: ApolloContext): Promise<string> {\n    return context.client.datasource.editProjectAsync(address, category, title, description, url, BigNumber.from(goal), BigNumber.from(deadline));\n  }\n}","import { gql } from '@apollo/client';\nimport { BigNumber } from 'ethers';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { CommonUtil } from '../util/common.util';\nimport { Contribution, Project } from '../util/types';\n\nexport const GET_TOTAL_PROJECTS_QUERY = gql`\n  query GetTotalProjects {\n    totalProjects @client\n  }\n`;\n\nexport const GET_PROJECT_INDEX_QUERY = gql`\n  query GetProjectIndex($id: String!) {\n    projectIndex(id: $id) @client\n  }\n`;\n\nexport const GET_PROJECT_ADDRESS_QUERY = gql`\n  query GetProjectAddress($index: String!) {\n    projectAddress(index: $index) @client\n  }\n`;\n\nexport const GET_PROJECT_QUERY = gql`\n  query GetProject($address: String) {\n    project(address: $address) @client {\n      address\n      category\n      title\n      description\n      url\n      goal\n      createdTimestamp\n      expirationTimestamp\n      creator\n      totalContributions\n      totalContributors\n      totalFunding\n    }\n  }\n`;\n\nexport const GET_PROJECT_CONTRIBUTION_QUERY = gql`\n  query GetProjectContribution($address: String, $index: String!) {\n    projectContribution(address: $address, index: $index) @client {\n      contributor\n      createdTimestamp\n      amount\n    }\n  }\n`;\n\nexport const ProjectQueries = {\n  async totalProjects(parent: any, params: any, context: ApolloContext): Promise<string> {\n    const amount = await context.client.datasource.getTotalProjectsAsync();\n    return amount.toString();\n  },\n  async projectIndex(parent: any, { id }: any, context: ApolloContext): Promise<string> {\n    const index = await context.client.datasource.getProjectIndexAsync(id);\n    return index.toString();\n  },\n  async projectAddress(parent: any, { index }: any, context: ApolloContext): Promise<Maybe<string>> {\n    return context.client.datasource.getProjectAddressAsync(BigNumber.from(index));\n  },\n  async project(parent: any, { address }: any, context: ApolloContext): Promise<Maybe<Project>> {\n    if (CommonUtil.isNullOrWhitespace(address)) {\n      return;\n    }\n    return context.client.datasource.getProjectAsync(address);\n  },\n  async projectContribution(parent: any, { address, index }: any, context: ApolloContext): Promise<Maybe<Contribution>> {\n    if (CommonUtil.isNullOrWhitespace(address)) {\n      return;\n    }\n    return context.client.datasource.getProjectContributionAsync(address, BigNumber.from(index));\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport { getCommonContext } from '../contexts/common.context';\nimport { IDataSource } from '../datasources';\nimport { ProjectMutations } from '../mutations/project';\nimport { ItemQueries } from '../queries';\nimport { ProjectQueries } from '../queries/project';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst resolvers = {\n  Query: {\n    ...ItemQueries,\n    ...ProjectQueries\n  },\n  Mutation: {\n    ...ProjectMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import { create, IPFSHTTPClient } from 'ipfs-http-client';\nimport { IpfsResult } from '../util/types';\n\nexport class IpfsClient {\n\n  private readonly _client: IPFSHTTPClient;\n\n  constructor() {\n    this._client = create({\n      url: 'https://ipfs.infura.io:5001/api/v0'\n    });\n  }\n\n  uploadAsync = async (file: Blob): Promise<IpfsResult> => {\n    // https://ipfs.infura.io/ipfs/QmdF1fEPJHgvxGxRehrJbSzvGK2U4NujAgMDhpiMSytPL6\n    // Upload directly to IPFS -> Mint on Nervos -> Send CID (path) + minted token id to GraphQL -> Pin with Pinata\n    const result = await this._client.add(file);\n    return {\n      url: `https://ipfs.infura.io/ipfs/${result.path}`,\n      path: result.path,\n      size: result.size,\n      cid: result.cid\n    }\n  }\n}\n\nconst client = new IpfsClient();\n\nexport const getIpfsClient = () => {\n  return client;\n}\n\n/*\nexport interface AddResult {\n  cid: CID\n  size: number\n  path: string\n  mode?: number\n  mtime?: Mtime\n}\n\n\"QmdF1fEPJHgvxGxRehrJbSzvGK2U4NujAgMDhpiMSytPL6\"\n*/","import { BigNumber } from 'ethers';\nimport { GetProject_project } from '../queries/__generated__/GetProject';\nimport { CommonUtil } from './common.util';\nimport { Project } from './types';\n\nexport abstract class TransformUtil {\n  static toProject(source: Maybe<GetProject_project>): Maybe<Project> {\n    if (!source) {\n      return;\n    }\n    return {\n      address: source?.address,\n      category: source?.category,\n      createdTimestamp: source?.createdTimestamp,\n      creator: source?.creator,\n      description: source?.description,\n      expirationTimestamp: source?.expirationTimestamp,\n      goal: source?.goal,\n      title: source?.title,\n      totalContributions: source?.totalContributions,\n      totalContributors: source?.totalContributors,\n      totalFunding: source?.totalFunding,\n      url: source?.url\n    }\n  }\n\n  static toBigNumber(number: Maybe<string>): BigNumber {\n    if (CommonUtil.isNullOrWhitespace(number)) {\n      return BigNumber.from(0);\n    }\n    return BigNumber.from(number);\n  }\n\n  static toTimestamp(date: Maybe<Date>): string {\n    if (date) {\n      return Math.floor(date.getTime() / 1000).toString();\n    }\n    return \"0\";\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from '@apollo/client';\nimport { BigNumber } from 'ethers';\nimport { getApolloClient } from '../clients/apollo.client';\nimport { getIpfsClient, IpfsClient } from '../clients/ipfs.client';\nimport { CommonConstants } from '../common/constants';\nimport { CREATE_PROJECT_MUTATION, EDIT_PROJECT_MUTATION } from '../mutations/project';\nimport { CreateProject, CreateProjectVariables } from '../mutations/__generated__/CreateProject';\nimport { EditProject, EditProjectVariables } from '../mutations/__generated__/EditProject';\nimport { GET_PROJECT_ADDRESS_QUERY, GET_PROJECT_INDEX_QUERY } from '../queries/project';\nimport { GetProjectAddress, GetProjectAddressVariables } from '../queries/__generated__/GetProjectAddress';\nimport { GetProjectIndex, GetProjectIndexVariables } from '../queries/__generated__/GetProjectIndex';\nimport { CommonUtil } from '../util/common.util';\nimport { Ensure } from '../util/ensure';\nimport { getLogger } from '../util/logger';\nimport { TransformUtil } from '../util/transform.util';\nimport { SaveProject } from '../util/types';\n\nconst logger = getLogger();\n\nclass ProjectService {\n\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _ipfs: IpfsClient;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._ipfs = getIpfsClient();\n  }\n\n  private validate(values: SaveProject, markdown: any): void {\n    Ensure.notNull(values, \"values\");\n    Ensure.notNullOrWhiteSpace(values.title, \"title\", \"Please enter a title.\");\n    Ensure.notNullOrWhiteSpace(values.description, \"description\", \"Please enter a description.\");\n    Ensure.notNullOrWhiteSpace(markdown, \"markdown\", \"Please enter content in the markdown editor.\");\n    if (values.title.length > CommonConstants.PROJECT_TITLE_MAX_LENGTH) {\n      throw new Error(\"Title is too long.\")\n    }\n    if (values.description.length > CommonConstants.PROJECT_DESCRIPTION_MAX_LENGTH) {\n      throw new Error(\"Description is too long.\")\n    }\n  }\n\n  async getProjectIndexAsync(_id: string, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    const query = await this._apollo.query<GetProjectIndex, GetProjectIndexVariables>({\n      query: GET_PROJECT_INDEX_QUERY,\n      variables: {\n        id: _id\n      },\n      fetchPolicy: _fetchPolicy\n    });\n    return BigNumber.from(query.data.projectIndex);\n  }\n\n  async getProjectAddressAsync(_index: string, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<string>> {\n    const query = await this._apollo.query<GetProjectAddress, GetProjectAddressVariables>({\n      query: GET_PROJECT_ADDRESS_QUERY,\n      variables: {\n        index: _index\n      },\n      fetchPolicy: _fetchPolicy\n    });\n    return query.data.projectAddress;\n  }\n\n  async createAsync(values: SaveProject, markdown: any): Promise<string> {\n    this.validate(values, markdown);\n    Ensure.notNullOrWhiteSpace(values.category, \"category\", \"Please specify a valid project category.\");\n    Ensure.notNullOrWhiteSpace(values.goal, \"goal\", \"Please specify a valid goal.\");\n    Ensure.notNull(values.expirationTimestamp, \"expirationTimestamp\", \"Please specify a valid expiration date.\");\n\n    const now = BigNumber.from(TransformUtil.toTimestamp(new Date()));\n    const deadline = BigNumber.from(values.expirationTimestamp);\n    if (now.gte(deadline)) {\n      throw new Error(\"Expiration date is in the past.\");\n    }\n    const goal = BigNumber.from(values.goal);\n    if (goal.lte(0)) {\n      throw new Error(\"Goal is not valid.\");\n    }\n\n    const ipfsResult = await this._ipfs.uploadAsync(markdown);\n\n    const id = CommonUtil.uuid();\n    logger.info(\"Project id:\", id)();\n    const result = await this._apollo.mutate<CreateProject, CreateProjectVariables>({\n      mutation: CREATE_PROJECT_MUTATION,\n      variables: {\n        id,\n        category: values.category,\n        title: values.title,\n        description: values.description,\n        url: ipfsResult.url,\n        goal: values.goal,\n        deadline: values.expirationTimestamp\n      }\n    })\n    logger.info(result.data?.createProject)();\n    const projectIndex = await this.getProjectIndexAsync(id);\n    console.log(projectIndex)\n    const projectAddress = await this.getProjectAddressAsync(projectIndex.toString());\n    if (!projectAddress || CommonUtil.isNullOrWhitespace(projectAddress)) {\n      throw new Error(\"Project could not be created.\");\n    }\n    return projectAddress;\n  }\n\n  async editAsync(address: string, values: SaveProject, markdown: any): Promise<void> {\n    this.validate(values, markdown);\n    Ensure.notNullOrWhiteSpace(address, \"address\", \"Project address is empty.\");\n\n    const ipfsResult = await this._ipfs.uploadAsync(markdown);\n\n    const result = await this._apollo.mutate<EditProject, EditProjectVariables>({\n      mutation: EDIT_PROJECT_MUTATION,\n      variables: {\n        address,\n        category: values.category,\n        title: values.title,\n        description: values.description,\n        url: ipfsResult.url,\n        goal: values.goal,\n        deadline: values.expirationTimestamp\n      }\n    })\n    logger.info(result.data?.editProject)();\n  }\n}\n\nconst service = new ProjectService();\n\nexport const getProjectService = () => {\n  return service;\n}","import React from 'react';\nimport { LoadingButton } from '@mui/lab';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Box } from '@mui/system';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { Editor as TuiEditor, Viewer as TuiViewer } from '@toast-ui/react-editor';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserFileUtil } from '../../../../util/file.util';\nimport { getLogger } from '../../../../util/logger';\nimport { Alert } from '../alert';\n\nconst logger = getLogger();\n\ninterface Props {\n  readOnly?: boolean,\n  markdownUrl?: string,\n  containerRef: React.RefObject<any>,\n  editorRef: React.RefObject<any>\n}\n\nexport const Editor = (props: Props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState('');\n  const [markdownUrl, setMarkdownUrl] = useState('');\n  let height = \"400px\";\n  if (props.containerRef?.current?.clientHeight) {\n    height = props.containerRef?.current?.clientHeight + \"px\";\n  }\n\n  useEffect(() => {\n    const fileUtil = new BrowserFileUtil();\n    const downloadAsync = async () => {\n      try {\n        if (props.markdownUrl) {\n          setIsLoading(true);\n          const response = await fileUtil.readFileAsync(props.markdownUrl);\n          setContent(response);\n          setMarkdownUrl(props.markdownUrl);\n        }\n      } catch (error) {\n        logger.error(error)();\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (props.markdownUrl !== markdownUrl) {\n      downloadAsync();\n    }\n  }, [markdownUrl, props.markdownUrl])\n\n  if (isLoading) {\n    return (\n      <>\n        <Box sx={{ m: 2 }}>\n          <Alert message=\"Loading...\" type=\"default\"></Alert>\n        </Box>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.readOnly ? (\n        <Box sx={{ px: 2, py: 1 }}>\n          <TuiViewer\n            initialValue={content}\n          />\n        </Box>\n      ) : (\n        <TuiEditor\n          initialValue={content}\n          previewStyle=\"tab\"\n          initialEditType=\"markdown\"\n          height={height}\n          usageStatistics={false}\n          ref={props.editorRef}\n        />\n      )}\n    </>\n  );\n}\n","import { DateTimePicker } from '@mui/lab';\nimport { Box, FormControl, Grid, InputAdornment, InputLabel, MenuItem, OutlinedInput, Paper, Select, SelectChangeEvent, Slider, Stack, TextField, Typography } from '@mui/material';\nimport React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ProjectType, ProjectTypes } from '../../../../common/constants';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { getProjectService } from '../../../../services/project.service';\nimport { getLogger } from '../../../../util/logger';\nimport { MomentUtil } from '../../../../util/moment.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { TransformUtil } from '../../../../util/transform.util';\nimport { SaveProject } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { Editor } from '../../../common/components/editor';\n\nconst logger = getLogger();\n\nexport const ProjectCreate = () => {\n  const navigate = useNavigate();\n  const containerRef = useRef(null);\n  const editorRef = React.createRef<any>();\n  const momentUtil = new MomentUtil();\n  const commonContext = getCommonContext();\n  const chainUtil = commonContext.datasource.util;\n  const projectService = getProjectService();\n  const baseMarkdownUrl = 'https://raw.githubusercontent.com/blake256/templates/main/crowdmint/template.md';\n\n  const [values, setValues] = useState<SaveProject>({\n    category: ProjectTypes[ProjectType.AON].type,\n    title: \"\",\n    description: \"\",\n    goal: \"\",\n    expirationTimestamp: TransformUtil.toTimestamp(momentUtil.get().add(1, \"days\").toDate())\n  });\n\n  const getDate = (timestamp: any) => {\n    return momentUtil.getFromUnix(timestamp).toDate();\n  }\n\n  const handleCategoryChange = (event: SelectChangeEvent) => {\n    setValues({ ...values, category: event.target.value });\n  };\n\n  const handleExpirationDateChange = (newValue: Date | null) => {\n    setValues({ ...values, expirationTimestamp: TransformUtil.toTimestamp(new Date(newValue?.toString() ?? 0)) });\n  };\n\n  const handleChange = (prop: keyof SaveProject) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const createProjectAsync = async () => {\n    try {\n      const markdown = editorRef?.current?.getInstance().getMarkdown();\n      const projectAddress = await projectService.createAsync(values, markdown);\n      SnackbarUtil.enqueueMessage(\"Project created!\");\n      navigate(`/projects/${projectAddress}`);\n    } catch (error) {\n      logger.error(error)();\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Typography sx={{ pt: 4 }} variant=\"h2\" component=\"div\" gutterBottom>\n        Start a new project 🚀\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item md={8} xs={12}>\n          <Paper>\n            <Box sx={{ p: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                <OutlinedInput\n                  id=\"title-input\"\n                  value={values.title}\n                  label=\"Title\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('title')}\n                />\n              </FormControl>\n            </Box>\n          </Paper>\n          <Paper ref={containerRef} sx={{ maxHeight: \"800px\", minHeight: \"670px\", my: 2, overflow: \"auto\" }}>\n            <Editor containerRef={containerRef} editorRef={editorRef} readOnly={false} markdownUrl={baseMarkdownUrl}></Editor>\n          </Paper>\n          <Paper>\n            <Box sx={{ p: 2 }}>\n              <Box sx={{ width: \"40%\", margin: \"auto\" }}>\n                <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={createProjectAsync} fullWidth={true}>\n                  Submit\n                </ClickOnceButton>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Paper>\n            <Box sx={{ display: 'flex', p: 2, bgcolor: \"secondary.main\" }}>\n              <Typography variant=\"h5\">Project details</Typography>\n            </Box>\n            <Box sx={{ p: 2 }}>\n              <Stack spacing={3}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                  <OutlinedInput\n                    id=\"description-input\"\n                    value={values.description}\n                    label=\"Description\"\n                    autoComplete=\"off\"\n                    multiline\n                    rows={4}\n                    size=\"small\"\n                    onChange={handleChange('description')}\n                  />\n                </FormControl>\n                <FormControl fullWidth>\n                  <InputLabel id=\"project-category-select-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"project-category-select-label\"\n                    id=\"project-category-select\"\n                    value={values.category}\n                    label=\"Category\"\n                    autoComplete=\"off\"\n                    onChange={handleCategoryChange}\n                  >\n                    <MenuItem value={ProjectTypes[ProjectType.AON].type}>{ProjectTypes[ProjectType.AON].name}</MenuItem>\n                    <MenuItem value={ProjectTypes[ProjectType.KIA].type}>{ProjectTypes[ProjectType.KIA].name}</MenuItem>\n                  </Select>\n                </FormControl>\n                <FormControl fullWidth sx={{ m: 1 }}>\n                  <InputLabel htmlFor=\"goal-input\">Goal</InputLabel>\n                  <OutlinedInput\n                    id=\"goal-input\"\n                    value={values.goal}\n                    label=\"Goal\"\n                    autoComplete=\"off\"\n                    onChange={handleChange('goal')}\n                    startAdornment={<InputAdornment position=\"start\">${chainUtil.nativeName}</InputAdornment>}\n                  />\n                </FormControl>\n                <DateTimePicker\n                  value={getDate(values.expirationTimestamp)}\n                  label=\"Expiration date\"\n                  onChange={handleExpirationDateChange}\n                  renderInput={(params) => <TextField {...params} />}\n                />\n                <TextField\n                  defaultValue={1000}\n                  label=\"NFT shares\"\n                  type=\"number\"\n                />\n                <Box>\n                  <Typography gutterBottom>\n                    Overfunding distribution\n                  </Typography>\n                  <Slider defaultValue={50} valueLabelDisplay=\"auto\" />\n                </Box>\n              </Stack>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { Box, Skeleton, Tooltip, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { ProjectTypes } from '../../../../common/constants';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { MomentUtil } from '../../../../util/moment.util';\nimport { GenericType, Project } from '../../../../util/types';\n\ninterface Props {\n  isEdit?: boolean;\n  loading?: boolean;\n  project?: Maybe<Project>;\n}\n\nexport const ProjectInfo = (props: Props) => {\n  const [percentage, setPercentage] = useState<number>(0);\n  const [category, setCategory] = useState<Maybe<GenericType>>(undefined);\n  const commonContext = getCommonContext();\n  const chainUtil = commonContext.datasource.util;\n  const momentUtil = new MomentUtil();\n\n  useEffect(() => {\n    setPercentage(CommonUtil.calculatePercentage(props.project?.totalFunding, props.project?.goal));\n    setCategory(ProjectTypes.find(e => e.type === props.project?.category));\n  }, [props.project]);\n\n  const formatTimestamp = (timestamp: any) => {\n    return momentUtil.getLocalReverseFormatted(momentUtil.getFromUnix(timestamp));\n  }\n\n  return (\n    <>\n      <Box sx={{ px: 2, pt: 2, display: props.isEdit ? \"none\" : \"block\" }}>\n        <Typography fontWeight=\"bold\">Description</Typography>\n        {props.loading || !category ? (\n          <Skeleton animation=\"wave\" height={15} width=\"50%\" />\n        ) : (\n          <Typography fontSize={14}>\n            {CommonUtil.isNullOrWhitespace(props.project?.description) ?\n              \"No description available.\" : CommonUtil.truncateString(props.project?.description, 256)\n            }\n          </Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Type</Typography>\n        {props.loading || !category ? (\n          <Skeleton animation=\"wave\" height={15} width=\"50%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{category?.name} ({category?.type})</Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Goal</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"40%\" />\n        ) : (\n          <Tooltip title={chainUtil.toNativeString(props.project?.totalFunding) + ' / ' + chainUtil.toNativeString(props.project?.goal)} placement=\"left\" arrow>\n            <Typography fontSize={13} noWrap>\n              {chainUtil.toNative(props.project?.totalFunding).toString()} / {chainUtil.toNative(props.project?.goal).toString()} {chainUtil.nativeName} ({percentage}%)\n            </Typography>\n          </Tooltip>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Creation date</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"40%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{formatTimestamp(props.project?.createdTimestamp)}</Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Expiration date</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"40%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{formatTimestamp(props.project?.expirationTimestamp)}</Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Contributions / Contributors</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"30%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{props.project?.totalContributions} / {props.project?.totalContributors}</Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, pt: 2 }} >\n        <Typography fontWeight=\"bold\">Creator</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"70%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{props.project?.creator}</Typography>\n        )}\n      </Box>\n      <Box sx={{ px: 2, py: 2 }} >\n        <Typography fontWeight=\"bold\">Contract</Typography>\n        {props.loading ? (\n          <Skeleton animation=\"wave\" height={15} width=\"70%\" />\n        ) : (\n          <Typography fontSize={13} noWrap>{props.project?.address}</Typography>\n        )}\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { Project } from '../../../../util/types';\n\ninterface Props {\n  canEdit: boolean;\n  loading?: boolean;\n  project?: Maybe<Project>;\n}\n\nexport const ProjectInfoTitle = (props: Props) => {\n  return (\n    <Box sx={{ display: 'flex', p: 2, bgcolor: \"secondary.main\" }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Box sx={{\n          display: \"flex\",\n          alignItems: \"center\"\n        }}>\n          <InfoOutlinedIcon sx={{ mr: 1 }} />\n          <Typography variant=\"h5\">Project information</Typography>\n        </Box>\n      </Box>\n      <Box>\n        {!props.loading && props.canEdit && (\n          <Button variant=\"contained\" color=\"primary\" sx={{ ml: 2 }} component={RouterLink} to={'/projects/' + props.project?.address + '/edit'}>\n            Edit\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Box, Button, FormControl, Grid, InputLabel, OutlinedInput, Paper, Skeleton, Stack, Typography } from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link as RouterLink, useNavigate, useParams } from 'react-router-dom';\nimport { GET_PROJECT_QUERY } from '../../../../queries/project';\nimport { GetProject, GetProjectVariables } from '../../../../queries/__generated__/GetProject';\nimport { getProjectService } from '../../../../services/project.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { TransformUtil } from '../../../../util/transform.util';\nimport { Project, SaveProject } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { Editor } from '../../../common/components/editor';\nimport { ProjectInfo } from '../info';\nimport { ProjectInfoTitle } from '../info-title';\n\nconst logger = getLogger();\n\nexport const ProjectEdit = () => {\n  const { address } = useParams();\n  const [project, setProject] = useState<Maybe<Project>>(undefined);\n  const [values, setValues] = useState<SaveProject>({\n    category: \"\",\n    title: \"\",\n    description: \"\",\n    goal: \"\",\n    expirationTimestamp: \"\"\n  });\n  const navigate = useNavigate();\n  const containerRef = useRef(null);\n  const editorRef = React.createRef<any>();\n  const projectService = getProjectService();\n\n  const projectQuery = useQuery<GetProject, GetProjectVariables>(GET_PROJECT_QUERY, {\n    variables: {\n      address: address\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'network-only'\n  });\n\n  const error = projectQuery.error;\n  const loading = projectQuery.loading;\n\n  useEffect(() => {\n    const p = projectQuery.data?.project;\n    setProject(TransformUtil.toProject(p));\n    setValues({\n      category: p?.category ?? \"\",\n      title: p?.title ?? \"\",\n      description: p?.description ?? \"\",\n      goal: p?.goal ?? \"\",\n      expirationTimestamp: p?.expirationTimestamp ?? \"\"\n    });\n  }, [address, projectQuery.data?.project]);\n\n  const handleChange = (prop: keyof SaveProject) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const saveAsync = async () => {\n    try {\n      if (!address || CommonUtil.isNullOrWhitespace(address)) {\n        throw new Error(\"Invalid address\");\n      }\n      const markdown = editorRef?.current?.getInstance().getMarkdown();\n      await projectService.editAsync(address, values, markdown);\n      SnackbarUtil.enqueueMessage(\"Project updated!\");\n      navigate(`/projects/${address}`);\n    } catch (error) {\n      logger.error(error)();\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  if (error) {\n    return (\n      <Alert message=\"Could not find the specified project.\" type=\"warning\"></Alert>\n    );\n  }\n\n  return (\n    <>\n      <Typography sx={{ pt: 4 }} variant=\"h4\" component=\"div\" gutterBottom>\n        Edit project\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item md={8} xs={12}>\n          <Paper>\n            <Box sx={{ p: 2 }}>\n              {loading ? (\n                <Skeleton animation=\"wave\" height={30} width=\"60%\" />\n              ) : (\n                <FormControl fullWidth>\n                  <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                  <OutlinedInput\n                    id=\"title-input\"\n                    value={values.title}\n                    label=\"Title\"\n                    autoComplete=\"off\"\n                    onChange={handleChange('title')}\n                  />\n                </FormControl>\n              )}\n            </Box>\n          </Paper>\n          <Paper ref={containerRef} sx={{ maxHeight: \"800px\", minHeight: \"670px\", my: 2, overflow: \"auto\" }}>\n            {!loading && (\n              <Editor containerRef={containerRef} editorRef={editorRef} readOnly={false} markdownUrl={project?.url}></Editor>\n            )}\n          </Paper>\n          <Paper>\n            <Box sx={{ p: 2, textAlign: \"right\" }}>\n              <Button variant=\"outlined\" color=\"primary\" sx={{ mr: 2 }} component={RouterLink} to={'/projects/' + address}>\n                Cancel\n              </Button>\n              <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={saveAsync}>\n                Save\n              </ClickOnceButton>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Paper>\n            <ProjectInfoTitle canEdit={false} loading={loading} project={project}></ProjectInfoTitle>\n            <Box sx={{ px: 2, pt: 2 }}>\n              <Stack spacing={3}>\n                {loading ? (\n                  <Skeleton animation=\"wave\" height={30} width=\"80%\" />\n                ) : (\n                  <FormControl fullWidth>\n                    <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                    <OutlinedInput\n                      id=\"description-input\"\n                      value={values.description}\n                      label=\"Description\"\n                      autoComplete=\"off\"\n                      multiline\n                      rows={4}\n                      size=\"small\"\n                      onChange={handleChange('description')}\n                    />\n                  </FormControl>\n                )}\n              </Stack>\n            </Box>\n            <ProjectInfo isEdit={true} loading={loading} project={project}></ProjectInfo>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { Box, Button, Container, Link, Stack, styled, Typography } from '@mui/material';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { TransformUtil } from '../../../../util/transform.util';\n\nconst logger = getLogger();\n\nconst HeroContent = styled('div')(\n  ({ theme }) => `\n  background-color: ${theme.palette.background.paper};\n  padding: ${theme.spacing(1, 0, 0)};\n`,\n);\n\nexport const Hero = () => {\n  const context = useConnectedWeb3Context();\n  const commonContext = getCommonContext();\n  const testAsync = async () => {\n    if (context.account) {\n      try {\n        const balance = await commonContext.datasource.getBalanceAsync(context.account);\n        logger.info(context.account, 'Balance:', balance.toString())();\n\n        const timestamp = await commonContext.datasource.getTimestampAsync();\n        const totalProjects = await commonContext.datasource.getTotalProjectsAsync();\n        logger.info('ProjectManager timestamp:', timestamp.toString(), 'local timestamp:', TransformUtil.toTimestamp(new Date()), 'totalProjects:', totalProjects.toString())();\n      } catch (error) {\n        SnackbarUtil.enqueueError(error);\n      }\n    }\n  }\n  testAsync();\n  return (\n    <>\n      <Box sx={{ mb: 2 }}>\n        <img src={\"./assets/images/logo_text.png\"} alt=\"logo\" />\n      </Box>\n      <HeroContent>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Decentralized crowdfunding on <Link href=\"https://www.nervos.org/\" target=\"_blank\" underline=\"none\">Nervos Network</Link>.<br></br>\n            CROWDMINT is a blockchain based solution leveraging NFTs to crowdfund projects.\n          </Typography>\n        </Container>\n      </HeroContent>\n      <Stack spacing={2} sx={{ mt: 6 }} direction=\"row\">\n        <Button variant=\"contained\" color=\"primary\" component={RouterLink} to='/projects/create'>\n          Start project\n        </Button>\n        {/* <Button variant=\"outlined\" color=\"primary\">\n          Browse existing\n        </Button> */}\n      </Stack>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';\nimport PersonOutlineRoundedIcon from '@mui/icons-material/PersonOutlineRounded';\nimport {\n  Avatar, Card, CardActionArea,\n  CardActions, CardContent, CardHeader, Chip,\n  Grid, Skeleton, Tooltip, Typography\n} from '@mui/material';\nimport LinearProgress, { LinearProgressProps } from '@mui/material/LinearProgress';\nimport { Box } from '@mui/system';\nimport { BigNumber } from 'ethers';\nimport * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { GET_PROJECT_ADDRESS_QUERY, GET_PROJECT_QUERY } from '../../../../queries/project';\nimport { GetProject, GetProjectVariables } from '../../../../queries/__generated__/GetProject';\nimport { GetProjectAddress, GetProjectAddressVariables } from '../../../../queries/__generated__/GetProjectAddress';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { FormatUtil } from '../../../../util/format.util';\nimport { MomentUtil } from '../../../../util/moment.util';\nimport { Alert } from '../../../common/components/alert';\n\ninterface Props {\n  index: BigNumber;\n}\n\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.primary\">\n          {`${Math.round(props.value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport const ListItem: React.FC<Props> = (props: Props) => {\n  const commonContext = getCommonContext();\n  const chainUtil = commonContext.datasource.util;\n  const momentUtil = new MomentUtil();\n\n  const projectAddressQuery = useQuery<GetProjectAddress, GetProjectAddressVariables>(GET_PROJECT_ADDRESS_QUERY, {\n    variables: {\n      index: props.index.toString()\n    }\n  });\n\n  const projectQuery = useQuery<GetProject, GetProjectVariables>(GET_PROJECT_QUERY, {\n    skip: !projectAddressQuery.data,\n    variables: {\n      address: projectAddressQuery.data?.projectAddress\n    }\n  });\n\n  const error = projectAddressQuery.error || projectQuery.error;\n  const loading = projectAddressQuery.loading || projectQuery.loading;\n  const project = projectQuery.data?.project;\n\n  const formatTimestamp = (timestamp: any) => {\n    return momentUtil.getLocalReverseFormatted(momentUtil.getFromUnix(timestamp));\n  }\n\n  if (error) {\n    return (\n      <Alert message={FormatUtil.formatMessage(error)} type=\"warning\"></Alert>\n    );\n  }\n\n  return (\n    <Card sx={{ m: 2 }}>\n      <CardActionArea disabled={loading} component={RouterLink} to={'/projects/' + project?.address}>\n        <CardHeader sx={{ paddingBottom: 1 }}\n          avatar={\n            loading ? (\n              <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n            ) : (\n              <Tooltip title=\"Placeholder\" placement=\"top\" arrow>\n                <Avatar sx={{ bgcolor: \"secondary.main\" }}>&nbsp;</Avatar>\n              </Tooltip>\n            )\n          }\n          // action={\n          //   loading ? null : (\n          //     <IconButton aria-label=\"settings\">\n          //       <MoreVertIcon />\n          //     </IconButton>\n          //   )\n          // }\n          title={\n            loading ? (\n              <Skeleton\n                animation=\"wave\"\n                height={10}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            ) : (\n              <Box component=\"div\" sx={{ width: \"100%\", whiteSpace: \"nowrap\" }}>\n                <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\">\n                  {CommonUtil.truncateString(project?.title, 26)}\n                </Box>\n              </Box>\n            )\n          }\n          subheader={\n            loading ? (\n              <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n            ) : (\n              <Box sx={{ position: \"relative\" }}>\n                <Typography variant=\"caption\" color=\"GrayText\">\n                  {formatTimestamp(project?.createdTimestamp)}\n                </Typography>\n                {momentUtil.isExpired(project?.expirationTimestamp) && (\n                  <Typography variant=\"caption\" color=\"GrayText\" sx={{ position: \"absolute\", top: 1, right: 0 }}>\n                    <b>Expired</b>\n                  </Typography>\n                )}\n              </Box>\n            )\n          }\n        />\n        {\n          loading ? (\n            <Box sx={{ paddingTop: 1 }}>\n              <Skeleton sx={{ height: 115, marginBottom: 1 }} animation=\"wave\" variant=\"rectangular\" />\n            </Box>\n          ) : (\n            <>\n              {/* <CardMedia\n            component=\"img\"\n            height=\"140\"\n            image=\"https://pi.tedcdn.com/r/talkstar-photos.s3.amazonaws.com/uploads/72bda89f-9bbf-4685-910a-2f151c4f3a8a/NicolaSturgeon_2019T-embed.jpg?w=512\"\n            alt=\"Nicola Sturgeon on a TED talk stage\"\n          /> */}\n            </>\n          )\n        }\n        <CardContent sx={{ pt: 0, pb: 1 }}>\n          {loading ? (\n            <Box sx={{ paddingTop: 1, paddingBottom: 2 }}>\n              <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n              <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n            </Box>\n          ) : (\n            <>\n              <Box>\n                <LinearProgressWithLabel value={CommonUtil.calculatePercentage(project?.totalFunding, project?.goal)} />\n              </Box>\n              <Box component=\"div\" style={{ width: \"100%\", whiteSpace: \"nowrap\" }}>\n                <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\">\n                  <Tooltip title={chainUtil.toNativeString(project?.totalFunding) + ' / ' + chainUtil.toNativeString(project?.goal)} placement=\"bottom\" arrow>\n                    <Typography variant=\"body2\" align=\"center\">\n                      {chainUtil.toNative(project?.totalFunding).toString()} / {chainUtil.toNative(project?.goal).toString()} {chainUtil.nativeName}\n                    </Typography>\n                  </Tooltip>\n                </Box>\n              </Box>\n              <Card sx={{ height: \"100px\", overflow: \"auto\" }} variant=\"outlined\">\n                <Box sx={{ p: 1 }}>\n                  <Typography variant=\"body2\" color=\"GrayText\">\n                    {CommonUtil.isNullOrWhitespace(project?.description) ? \"No description available.\" : project?.description}\n                  </Typography>\n                </Box>\n              </Card>\n            </>\n          )}\n        </CardContent>\n      </CardActionArea>\n      {!loading && (\n        <CardActions sx={{ paddingTop: 0 }}>\n          <Grid container rowSpacing={0} columnSpacing={2} sx={{ marginTop: 1 }}>\n            <Grid item xs={6}>\n              <Tooltip title={\"Contract: \" + project?.address} arrow>\n                <Chip sx={{ width: \"100%\" }} icon={<DescriptionOutlinedIcon />} label={project?.address} size=\"small\" />\n              </Tooltip>\n            </Grid>\n            <Grid item xs={6}>\n              <Tooltip title={\"Creator: \" + project?.creator}>\n                <Chip sx={{ width: \"100%\" }} icon={<PersonOutlineRoundedIcon />} label={project?.creator} size=\"small\" />\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </CardActions>\n      )}\n    </Card >\n  );\n}","import { Grid } from '@mui/material';\nimport { BigNumber } from 'ethers';\nimport { getLogger } from '../../../../util/logger';\nimport { Alert } from '../../../common/components/alert';\nimport { ListItem } from '../list-item';\n\nconst logger = getLogger();\n\ninterface Props {\n  total: BigNumber;\n}\n\nexport const ProjectList: React.FC<Props> = (props: Props) => {\n  const total = props.total.toNumber();\n  const indexes: number[] = [];\n  for (let index = total; indexes.length < 5 && indexes.length < total; index--) {\n    indexes.push(index);\n  }\n  logger.info(\"ProjectList indexes\", indexes)();\n\n  if (indexes.length <= 0) {\n    return (\n      <Grid item key='1' xs={12} md={6}>\n        <Alert message=\"No projects found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      {indexes.map((index: number) => (\n        <Grid item key={index} xs={12} sm={6} md={4} sx={{ minWidth: \"350px\" }}>\n          <ListItem index={BigNumber.from(index)}></ListItem>\n        </Grid>\n      ))}\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { Container, Grid, IconButton, Typography } from '@mui/material';\nimport { BigNumber } from 'ethers';\nimport { GET_TOTAL_PROJECTS_QUERY } from '../../../../queries/project';\nimport { GetTotalProjects } from '../../../../queries/__generated__/GetTotalProjects';\nimport { FormatUtil } from '../../../../util/format.util';\nimport { Alert } from '../../../common/components/alert';\nimport { Hero } from '../../../common/components/hero';\nimport { ProjectList } from '../list';\n\nexport const LatestProjects = () => {\n  const totalProjectsQuery = useQuery<GetTotalProjects>(GET_TOTAL_PROJECTS_QUERY, {\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'network-only'\n  });\n\n  const error = totalProjectsQuery.error;\n  const loading = totalProjectsQuery.loading;\n\n  const refetchAll = async () => {\n    await totalProjectsQuery.refetch();\n  };\n\n  return (\n    <>\n      <Hero></Hero>\n      <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n        <Typography sx={{ fontWeight: 500, ml: \"36px\" }} textAlign=\"center\">\n          Latest projects\n          <IconButton sx={{ float: 'right' }} aria-label=\"refresh\" onClick={() => refetchAll()}>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Typography>\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n          {loading || error ? (\n            <Grid item key='1' xs={12} md={6}>\n              {loading ? (\n                <Alert message=\"Loading...\" type=\"default\" ></Alert>\n              ) : (\n                <Alert message={FormatUtil.formatMessage(error)} type=\"warning\"></Alert>\n              )}\n            </Grid>\n          ) : (\n            <ProjectList total={BigNumber.from(totalProjectsQuery.data?.totalProjects ?? 0)}></ProjectList>\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Project } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\ninterface ContributeProject {\n  amount: string\n}\n\ninterface Props {\n  open: boolean\n  onClose: (success: boolean) => void\n  project?: Maybe<Project>\n}\n\nexport const ProjectContributeDialog: React.FC<Props> = (props: Props) => {\n  const commonContext = getCommonContext();\n  const chainUtil = commonContext.datasource.util;\n\n  const [open, setOpen] = useState(false);\n  const [values, setValues] = useState<ContributeProject>({\n    amount: \"\"\n  });\n\n  const handleClose = (success: boolean) => {\n    props.onClose(success);\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  const handleChange = (prop: keyof ContributeProject) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      if (!props.project) {\n        throw new Error(\"Project could not be loaded.\");\n      }\n      const amount = chainUtil.toNativeFull(values.amount);\n      if (amount.lt(1)) {\n        throw new Error(\"Invalid amount\");\n      }\n      await commonContext.datasource.contributeAsync(props.project.address, amount);\n      handleClose(true);\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={() => { handleClose(false) }} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Contribute</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.project?.title}\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={values.amount}\n            onChange={handleChange('amount')}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${chainUtil.nativeName}</InputAdornment>}\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { handleClose(false) }}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  );\n}","import { useQuery } from '@apollo/client';\nimport { Skeleton, TableCell } from '@mui/material';\nimport { BigNumber } from 'ethers';\nimport React from 'react';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { GET_PROJECT_CONTRIBUTION_QUERY } from '../../../../queries/project';\nimport { GetProjectContribution, GetProjectContributionVariables } from '../../../../queries/__generated__/GetProjectContribution';\nimport { MomentUtil } from '../../../../util/moment.util';\n\ninterface Props {\n  address: Maybe<string>;\n  index: BigNumber;\n}\n\nexport const ProjectContributionListItem: React.FC<Props> = (props: Props) => {\n  const commonContext = getCommonContext();\n  const chainUtil = commonContext.datasource.util;\n  const momentUtil = new MomentUtil();\n\n  const contributionQuery = useQuery<GetProjectContribution, GetProjectContributionVariables>(GET_PROJECT_CONTRIBUTION_QUERY, {\n    variables: {\n      address: props.address,\n      index: props.index.toString()\n    }\n  });\n\n  const loading = contributionQuery.loading;\n  const contribution = contributionQuery.data?.projectContribution;\n\n  const formatTimestamp = (timestamp: any) => {\n    return momentUtil.getLocalReverseFormatted(momentUtil.getFromUnix(timestamp));\n  }\n\n  return (\n    <>\n      <TableCell component=\"th\" scope=\"row\">\n        {loading ? (\n          <Skeleton animation=\"wave\" height={30} width=\"50%\" />\n        ) : (\n          <>{contribution?.contributor ?? \"...\"}</>\n        )}\n      </TableCell>\n      <TableCell align=\"left\">\n        {loading ? (\n          <Skeleton animation=\"wave\" height={30} width=\"50%\" />\n        ) : (\n          <>{contribution?.createdTimestamp ? formatTimestamp(contribution?.createdTimestamp) : \"...\"}</>\n        )}\n      </TableCell>\n      <TableCell align=\"right\">\n        {loading ? (\n          <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n        ) : (\n          <>{contribution?.amount ? chainUtil.toNativeString(contribution?.amount) : \"...\"} {chainUtil.nativeName}</>\n        )}\n      </TableCell>\n    </>\n  );\n}\n","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from '@mui/material';\nimport { BigNumber } from 'ethers';\nimport React, { useCallback, useEffect } from 'react';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { ProjectContributionListItem } from '../contribution-list-item';\n\nconst logger = getLogger();\n\ninterface Props {\n  address: Maybe<string>;\n  total: BigNumber;\n}\n\nexport const ProjectContributionList: React.FC<Props> = (props: Props) => {\n  const total = props.total.toNumber();\n  const rpp = 5;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rpp);\n  const [indexes, setIndexes] = React.useState<number[]>([]);\n\n  const updateIndexes = useCallback(() => {\n    const indexes: number[] = [];\n    const maxRows = CommonUtil.calculateMaxRows(total, rowsPerPage, page);\n    for (let index = rowsPerPage * page + maxRows - 1; indexes.length < maxRows; index--) {\n      indexes.push(index);\n    }\n    setIndexes(indexes);\n    logger.info(\"ProjectContributionList indexes\", indexes)();\n  }, [total, rowsPerPage, page]);\n\n  useEffect(() => {\n    setRowsPerPage(rpp);\n    setLastPage(total, rpp);\n  }, [total, rpp]);\n\n  useEffect(() => {\n    updateIndexes();\n  }, [total, rpp, page, updateIndexes]);\n\n  const setLastPage = (total: number, rpp: number) => {\n    setPage(Math.max(Math.floor(total / rpp) - 1, 0));\n  }\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number,\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const rpp = parseInt(event.target.value, 10);\n    setRowsPerPage(rpp);\n    setLastPage(total, rpp);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper} sx={{ maxHeight: 440 }}>\n        <Table stickyHeader sx={{ minWidth: 650 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Contributor address\n              </TableCell>\n              <TableCell align=\"left\">\n                Date\n              </TableCell>\n              <TableCell align=\"right\">\n                Amount\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {indexes.map((index: number) => (\n              <TableRow\n                key={index.toString()}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <ProjectContributionListItem address={props.address} index={BigNumber.from(index)}>\n                </ProjectContributionListItem>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        component=\"div\"\n        count={total}\n        page={page}\n        onPageChange={handleChangePage}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[5, 10, 25, 50, 100]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Box, Button, Chip, Grid, LinearProgress, Paper, Skeleton, TextField, Tooltip, Typography } from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCommonContext } from '../../../../contexts/common.context';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_PROJECT_QUERY } from '../../../../queries/project';\nimport { GetProject, GetProjectVariables } from '../../../../queries/__generated__/GetProject';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { MomentUtil } from '../../../../util/moment.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { TransformUtil } from '../../../../util/transform.util';\nimport { Project } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { Editor } from '../../../common/components/editor';\nimport { ProjectContributeDialog } from '../contribute-dialog';\nimport { ProjectContributionList } from '../contribution-list';\nimport { ProjectInfo } from '../info';\nimport { ProjectInfoTitle } from '../info-title';\n\nconst logger = getLogger();\n\nexport const ProjectOverview = () => {\n  const { address } = useParams();\n  const context = useConnectedWeb3Context();\n  const commonContext = getCommonContext();\n  const [project, setProject] = useState<Maybe<Project>>(undefined);\n  const [percentage, setPercentage] = useState<number>(0);\n  const [canEdit, setCanEdit] = useState<boolean>(false);\n  const [openContributeDialog, setOpenContributeDialog] = React.useState(false);\n  const chainUtil = commonContext.datasource.util;\n  const momentUtil = new MomentUtil();\n  const containerRef = useRef(null);\n  const editorRef = React.createRef<any>();\n\n  const projectQuery = useQuery<GetProject, GetProjectVariables>(GET_PROJECT_QUERY, {\n    variables: {\n      address: address\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'network-only'\n  });\n\n  const error = projectQuery.error;\n  const loading = projectQuery.loading;\n\n  useEffect(() => {\n    const p = projectQuery.data?.project;\n    const accountAddress = commonContext.datasource.util.toAlternateAddress(context.account);\n    logger.info(\"Creator:\", p?.creator, \"Account:\", accountAddress)();\n    setProject(TransformUtil.toProject(p));\n    setPercentage(CommonUtil.calculatePercentage(p?.totalFunding, p?.goal));\n    setCanEdit(p?.creator?.toLowerCase() === accountAddress?.toLowerCase());\n    return () => {\n      // TODO: destroy contract event listeners\n      logger.info(\"ProjectOverview cleaned up\")();\n    };\n  }, [context.account, commonContext.datasource.util, projectQuery.data?.project]);\n\n  if (error) {\n    return (\n      <Alert message=\"Could not find the specified project.\" type=\"warning\"></Alert>\n    );\n  }\n\n  const handleContributeCallback = async (success: boolean) => {\n    if (success) {\n      SnackbarUtil.enqueueMessage(\"Success!\");\n      await projectQuery.refetch();\n    }\n    setOpenContributeDialog(false);\n  }\n\n  return (\n    <>\n      <Grid sx={{ pt: 4 }} container spacing={2}>\n        <Grid item md={8} xs={12}>\n          <Paper>\n            <Box sx={{ p: 2, wordBreak: \"break-all\" }}>\n              {loading ? (\n                <Skeleton animation=\"wave\" height={30} width=\"60%\" />\n              ) : (\n                <Typography variant=\"h5\">{project?.title}</Typography>\n              )}\n            </Box>\n            <Box sx={{ px: 2, pb: 2 }}>\n              {loading ? (\n                <Skeleton animation=\"wave\" height={30} width=\"80%\" />\n              ) : (\n                <LinearProgress sx={{ height: \"20px\", borderRadius: \"5px\" }} variant=\"determinate\" value={percentage} />\n              )}\n            </Box>\n            {!loading && (\n              <Box sx={{\n                px: 2, pb: 2,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\"\n              }}>\n                <Tooltip title={chainUtil.toNativeString(project?.totalFunding) + ' / ' + chainUtil.toNativeString(project?.goal)} placement=\"bottom\" arrow>\n                  <Typography color=\"GrayText\" noWrap>\n                    {chainUtil.toNative(project?.totalFunding).toString()} / {chainUtil.toNative(project?.goal).toString()} {chainUtil.nativeName}\n                  </Typography>\n                </Tooltip>\n                {momentUtil.isExpired(project?.expirationTimestamp) ? (\n                  <Chip label=\"Expired\" size=\"small\" />\n                ) : (\n                  <Button variant=\"contained\" size=\"medium\" color=\"secondary\" onClick={() => setOpenContributeDialog(true)}>Contribute</Button>\n                )}\n                <Typography color=\"GrayText\" noWrap>{percentage}%</Typography>\n              </Box>\n            )}\n          </Paper>\n          <Paper ref={containerRef} sx={{ maxHeight: \"800px\", minHeight: \"670px\", my: 2, overflow: \"auto\" }}>\n            {!loading && (\n              <Editor containerRef={containerRef} editorRef={editorRef} readOnly={true} markdownUrl={project?.url}></Editor>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Paper>\n            <ProjectInfoTitle canEdit={canEdit} loading={loading} project={project}></ProjectInfoTitle>\n            <ProjectInfo loading={loading} project={project}></ProjectInfo>\n          </Paper>\n          <Paper sx={{ mt: 4 }}>\n            <Box sx={{ display: 'flex', p: 2, bgcolor: \"secondary.main\" }}>\n              <Box sx={{ flexGrow: 1 }}>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Typography variant=\"h5\">Limited NFT shares</Typography>\n                </Box>\n              </Box>\n            </Box>\n            <Box sx={{ px: 2, pt: 2 }} >\n              <Box sx={{ pb: 1 }}>\n                <Chip label=\"0\" size=\"small\" variant=\"outlined\" /> of <Chip label=\"1000\" size=\"small\" /> available\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', py: 2 }}>\n                <TextField\n                  label=\"NFT amount\"\n                  id=\"nft-amount\"\n                  defaultValue=\"0\"\n                  size=\"small\"\n                  type=\"number\"\n                  fullWidth\n                  disabled\n                />\n                <Button sx={{ ml: 1 }} variant=\"outlined\" disabled>Mint</Button>\n              </Box>\n              <Box sx={{ pb: 1 }}>\n                <b>50%</b> of the overfunded amount will be distributed among NFT holders\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <ProjectContributionList address={project?.address} total={TransformUtil.toBigNumber(project?.totalContributions)}></ProjectContributionList>\n        </Grid>\n      </Grid>\n      <ProjectContributeDialog\n        open={openContributeDialog}\n        onClose={handleContributeCallback}\n        project={project}>\n      </ProjectContributeDialog>\n    </>\n  );\n}\n","import { useSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { Networks } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { NetworkCheck } from '../../../account/components/network';\nimport { Test } from '../../../common/components/test';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { ProjectCreate } from '../../../project/components/create';\nimport { ProjectEdit } from '../../../project/components/edit';\nimport { LatestProjects } from '../../../project/components/latest';\nimport { ProjectOverview } from '../../../project/components/overview';\n\nexport const Main: React.FC = (props: any) => {\n  const basename = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_PROD_BASENAME : process.env.REACT_APP_DEV_BASENAME;\n  const context = useConnectedWeb3Context();\n  const [isNetworkSupported, setIsNetworkSupported] = React.useState(true);\n\n  SnackbarUtil.snackbar = useSnackbar();\n\n  const { chainId } = context;\n\n  useEffect(() => {\n    if (chainId) {\n      const network = Networks.find(e => e.id === chainId);\n      setIsNetworkSupported(!!network);\n    }\n  }, [chainId]);\n\n  return (\n    <MainWrapper>\n      <HashRouter basename={basename}>\n        <Header />\n        <MainScroll>\n          {!isNetworkSupported ? (\n            <NetworkCheck />\n          ) : (\n            <Routes>\n              <Route path=\"/projects/create\" element={<ProjectCreate />} />\n              <Route path=\"/projects/:address/edit\" element={<ProjectEdit />} />\n              <Route path=\"/projects/:address\" element={<ProjectOverview />} />\n              <Route path=\"/test\" element={<Test />} />\n              <Route path=\"/\" element={<LatestProjects />} />\n            </Routes>\n          )}\n        </MainScroll>\n        <Footer />\n      </HashRouter>\n    </MainWrapper>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/bg.02134422.svg\";","import { ApolloProvider } from '@apollo/client';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport styled from '@emotion/styled';\nimport { LocalizationProvider } from '@mui/lab';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport { ethers } from 'ethers';\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { Main } from './features/main/components/main';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { getApolloClient } from './clients/apollo.client';\nimport BackgroundSVG from './bg.svg';\n\nfunction getLibrary(provider: ethers.providers.ExternalProvider | ethers.providers.JsonRpcFetchFunc, connector: any) {\n  return new ethers.providers.Web3Provider(provider)\n}\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`,\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  return (\n    <LocalizationProvider dateAdapter={DateAdapter}>\n      <Background>\n        <SnackbarProvider maxSnack={3}>\n          <Web3ReactProvider getLibrary={getLibrary}>\n            <ConnectedWeb3>\n              <ApolloProvider client={apolloClient}>\n                <Main />\n              </ApolloProvider>\n            </ConnectedWeb3>\n          </Web3ReactProvider>\n        </SnackbarProvider>\n      </Background>\n    </LocalizationProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n// A custom theme for this app\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\n// 284aa4 c5d5ff c5b7f7 d693de ec3a76 dc0530 cc0000\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#284aa4',\n    },\n    secondary: {\n      main: '#c5d5ff',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}