{"version":3,"sources":["clients/vite.client.ts","util/task.ts","util/types.ts","common/constants.ts","util/logger.ts","util/file.util.ts","bg.svg","util/coin.util.ts","clients/coingecko.client.ts","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","common/network.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/list-item/component.tsx","features/pool/components/list/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts"],"names":["WS_RPC","require","logger","getLogger","providerOptions","retryTimes","retryInterval","client","_isConnected","_connector","_provider","_client","_emitter","_walletManager","_connectorFactory","initAsync","network","a","Promise","resolve","reject","create","rpcUrl","isResolved","on","err","error","ViteAPI","info","path","this","getEmitter","getWalletManager","WalletConnectorFactory","disconnect","method","args","request","account","methodName","abi","params","tokenId","amount","toAddress","block","accountBlock","createAccountBlock","address","WebWalletAccount","setProvider","setPrivateKey","privateKey","autoSetPreviousAccountBlock","sign","send","result","SessionWalletAccount","connector","emitConfirmTransactionDialog","sendTransactionAsync","Error","contractAddress","offchaincode","data","abiutils","encodeFunctionCall","dataBase64","Buffer","from","toString","requestAsync","selfAddr","offChainCode","resultBytes","outputs","i","length","push","type","offchainDecodeResult","decodeParameters","resultList","name","value","vmLog","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","event","payload","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","JSON","stringify","replace","subscribe","parse","unsubscribe","height","undefined","Task","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","status","resolveAccountBlockData","statusTxt","blockType","bytes","getViteClient","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","PoolSortType","PoolDialogType","GlobalEvent","VmLogEvent","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","POOLS_CONTRACT_ADDRESS","VITE_TOKEN_ID","REWARD_FACTOR","Networks","id","networkId","connectorUrl","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","iconUrl","url","PoolSortTypes","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","DEFAULT","search","LogEventModel","init","banner","Object","assign","noop","Boolean","process","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","message","toJsonString","timestamp","map","Array","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","console","debug","warn","FileUtilType","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","Map","existing","get","toLowerCase","getCoinUtil","_coinUtil","CoinGecko","mappedName","mapCoingeckoName","ids","simple","price","BigNumber","usd","_baseUrl","axios","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_coingeckoClient","_vitexClient","_tokens","_moment","initAsyncProtected","clear","disposeProtected","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","getTokenPriceUSDAsync","stakingToken","stakingTokenPrice","rewardToken","rewardTokenPrice","totalTime","minus","startBlock","secondsInYear","toPercent","apr","times","totalRewards","dividedBy","totalStaked","isFinite","isNaN","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","add","toNumber","getTokenDetailAsync","token","tokenDecimals","urlIcon","mapCoinMarketCapName","set","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","u","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","fetch","response","text","ds","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","div","_tokenId","_amount","_updatePoolAsync","getAccount","gt","pendingAmount","emitPoolDeposit","emitPoolWithdraw","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","waitForAccountBlockAsync","then","objectFromEntries","entries","fromEntries","entry","contract","contractName","createAddressListenerAsync","results","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","pow","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","Number","callContractAsync","has","Deposit","addr","pid","Withdraw","context","_vite","_datasource","initViteClientAsync","dispose","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","manager","_networkHeight","_network","_setNetworkCallback","cb","split","filter","includes","getNetworkManager","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","Grid","container","direction","justifyContent","alignItems","spacing","item","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","networkManager","getNetwork","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","log","graphQLErrors","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","background","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","InputLabel","Select","labelId","onChange","selectedNetwork","target","MenuItem","Header","loginOpen","setLoginOpen","src","alt","width","icon","truncateStringInTheMiddle","Button","onClick","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","service","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","getPoolService","ViteUtil","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","gte","getDuration","days","hours","minutes","ml","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","state","handleClose","setState","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","PoolWithdrawDialog","getStakedAmount","formatBigNumber","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","handleClickClaimAsync","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","pt","Link","underline","href","cursor","lg","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","Main","useSnackbar","Background","BackgroundSVG","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","String","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","session","WalletAccount","baseInit","WalletConnector","walletManager","opts","meta","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","r","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","localStorage","removeItem","sessionStorage","getItem","fromJS","saveData","setItem","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics"],"mappings":"gQAMQA,EAAWC,EAAQ,KAAnBD,OAEFE,EAASC,cAGTC,EAAkB,CAAEC,WAAY,GAAIC,cAAe,KAgQnDC,EAAS,IA9Pf,WASE,aAAe,IAAD,gCARNC,kBAQM,OAPNC,gBAOM,OANNC,eAMM,OALNC,aAKM,OAJGC,cAIH,OAHGC,oBAGH,OAFGC,uBAEH,OAedC,UAfc,uCAeF,WAAOC,GAAP,SAAAC,EAAA,+EAA4B,IAAIC,SAAc,SAACC,EAASC,GAClE,EAAKX,WAAa,EAAKK,kBAAkBO,OAAOL,GAChD,EAAKN,UAAY,IAAIV,EAAOgB,EAAQM,OA7BhB,IA6ByClB,GAC7D,IAAImB,GAAa,EACjB,EAAKb,UAAUc,GAAG,SAAS,SAACC,GAC1BvB,EAAOwB,MAAMD,EAAbvB,GACIqB,IACJH,EAAOK,GACP,EAAKjB,cAAe,MAEtB,EAAKG,QAAU,IAAIgB,UAAQ,EAAKjB,WAAW,WACzCR,EAAO0B,KAAP,+BAAoC,EAAKlB,UAAUmB,MAAnD3B,GACAqB,GAAa,EACbJ,IACA,EAAKX,cAAe,SAdZ,2CAfE,sDACZsB,KAAKtB,cAAe,EACpBsB,KAAKlB,SAAWmB,cAChBD,KAAKjB,eAAiBmB,cACtBF,KAAKhB,kBAAoB,IAAImB,IAAuBH,KAAKjB,gBAb7D,6CAgBE,WACE,OAAOiB,KAAKtB,eAjBhB,qBAoBE,WACE,OAAOsB,KAAKrB,aArBhB,qBA0CE,WAAiB,IAAD,EACdP,EAAO0B,KAAK,uBAAZ1B,GACA,UAAA4B,KAAKpB,iBAAL,SAAgBwB,aAChBJ,KAAKtB,cAAe,IA7CxB,iEAgDE,WAAmB2B,GAAnB,iCAAAlB,EAAA,0DACMa,KAAKtB,eAAgBsB,KAAKnB,QADhC,+BAAsCyB,EAAtC,iCAAsCA,EAAtC,oCAEW,EAAAN,KAAKnB,SAAQ0B,QAAb,SAAqBF,GAArB,OAAgCC,KAF3C,gCAIWlB,QAAQE,OAAO,+CAJ1B,gDAhDF,6HAwDE,WAAwBkB,EAAwBC,EAAoBC,EAAUC,EAAaC,EAAcC,EAAgBC,GAAzH,mBAAA3B,EAAA,yDACM4B,EAAQC,eACTC,mBAAmB,eAAgB,CAClCC,QAASV,EAAQU,QACjBR,MACAD,aACAG,UACAC,SACAC,YACAH,aAGAH,aAAmBW,KAZzB,wBAaIJ,EAAQA,EAAMK,YAAYpB,KAAKnB,SAASwC,cAAcb,EAAQc,YAblE,SAcUP,EAAMQ,8BAdhB,uBAeyBR,EAAMS,OAAOC,OAftC,cAeUC,EAfV,yBAgBWA,GAhBX,aAiBalB,aAAmBmB,KAjBhC,qBAkBQ3B,KAAK4B,UAlBb,wBAmBM5B,KAAKlB,SAAS+C,8BAA6B,GAnBjD,oBAqB6B7B,KAAK4B,UAAUE,qBAAqB,CACvDf,MAAOA,EAAMC,eAtBvB,eAqBcU,EArBd,OAwBQ1B,KAAKlB,SAAS+C,8BAA6B,GAxBnD,kBAyBeH,GAzBf,yCA2BQ1B,KAAKlB,SAAS+C,8BAA6B,GA3BnD,2CA+BY,IAAIE,MAAM,4BA/BtB,sCAkCU,IAAIA,MAAM,yBAlCpB,2DAxDF,+IA8FE,WAA8BC,EAAyBtB,EAAUuB,EAAsBtB,GAAvF,+BAAAxB,EAAA,6DACM+C,EAAOC,MAASC,mBAAmB1B,EAAKC,GACxC0B,EAAaC,EAAOC,KAAKL,EAAM,OAAOM,SAAS,UAFrD,SAGqBxC,KAAKyC,aAAa,8BAA+B,CAClEC,SAAUV,EACVW,aAAcV,EACdC,KAAMG,IANV,YAGMX,EAHN,yBAWI,IAFIkB,EAAcN,EAAOC,KAAKb,EAAQ,UAAUc,SAAS,OACrDK,EAAU,GACLC,EAAI,EAAGA,EAAIpC,EAAImC,QAAQE,OAAQD,IACtCD,EAAQG,KAAKtC,EAAImC,QAAQC,GAAGG,MAI9B,GAFIC,EAAuBf,MAASgB,iBAAiBN,EAASD,GAC1DQ,EAAa,GACbF,EACF,IAASJ,EAAI,EAAGA,EAAIpC,EAAImC,QAAQE,OAAQD,IAClCpC,EAAImC,QAAQC,GAAGO,KACjBD,EAAWJ,KAAK,CACdK,KAAM3C,EAAImC,QAAQC,GAAGO,KACrBC,MAAOJ,EAAqBJ,KAG9BM,EAAWJ,KAAK,CACdK,KAAM,GACNC,MAAOJ,EAAqBJ,KA1BxC,yBA+BWM,GA/BX,iCAiCS,IAjCT,iDA9FF,sFAkIE,SAAYG,EAAY7C,GAEtB,IADA,IAAI8C,EAASD,EAAMC,OACVC,EAAI,EAAGA,EAAI/C,EAAIqC,OAAQU,IAAK,CACnC,IAAIC,EAAUhD,EAAI+C,GAClB,GAAItB,MAASwB,mBAAmBD,KAAaF,EAAO,GAClD,GAAID,EAAMrB,KAUR,MATiB,CACf0B,MAAOJ,EAAO,GACdlD,KAAM6B,MAAS0B,UACbH,EAAQI,OACRC,QAAMC,QAAQzB,KAAKgB,EAAMrB,KAAM,UAAUM,SAAS,OAClDgB,EAAOS,MAAM,IAEfC,MAAOR,EAAQL,SA/I3B,+EAwJE,WAAiCnC,GAAjC,qBAAA/B,EAAA,6DACQgF,EAAU,CACdC,mBAAoB,CAClBC,YAAa,CACXC,WAAY,IACZC,SAAU,OAKhBC,GADIA,EAAcC,KAAKC,UAAUP,IACPQ,QAAQ,cAAezD,GAVnD,mBAWuBlB,KAAKnB,eAX5B,aAWuB,EAAc+F,UAAU,0BAA2BH,KAAKI,MAAML,IAXrF,cAWQ9C,EAXR,yBAYSA,GAZT,gDAxJF,mFAuKE,SAAewC,GAAmB,IAAD,EAC/B,UAAAlE,KAAKnB,eAAL,SAAciG,YAAYZ,KAxK9B,6EA2KE,WAA+BhD,EAAiB6D,GAAhD,oBAAA5F,EAAA,+EACS,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAH,EAAA,sDACbuC,OAAcsD,EACdpF,OAAaoF,EACJ,IAAIC,IAAJ,sBAAS,gCAAA9F,EAAA,+EAEQ,EAAKsD,aAC7B,iCACAvB,EACA6D,GALgB,UAEdG,EAFc,iDAST,GATS,UAYdC,EAAmBD,EAAcC,iBAZnB,0CAcT,GAdS,wBAiBM,EAAK1C,aAAa,+BAAgC0C,GAjBxD,WAiBdC,EAjBc,kDAmBT,GAnBS,eAsBlB1D,EAAM,2BACD,EAAK2D,sBAAsBD,IAD1B,IAEJpE,aAAcoE,IAxBE,mBA2BX,GA3BW,yCA6BlBxF,EAAK,KA7Ba,mBA8BX,GA9BW,0DAgCnB,KACE0F,OAAM,WACL1F,EACFN,EAAOM,GAEPP,EAAQqC,MAxCK,2CAAZ,0DADT,2CA3KF,4FA0NE,SAA8BV,GAC5B,IAAIuE,EAASvF,KAAKwF,wBAAwBxE,GACtCyE,EAAY,GAChB,OAAQF,GACN,KAAK,EACHE,EAAY,uBACZ,MACF,KAAK,EACHA,EAAY,wBACZ,MACF,KAAK,EACHA,EAAY,6BAGhB,MAAO,CACLF,SACAE,eA1ON,qCA8OE,SAAgCzE,GAC9B,GAC8B,IAA3BA,EAAa0E,WAA8C,IAA3B1E,EAAa0E,YAC7C1E,EAAakB,KAEd,OAAO,EAET,IAAIyD,EAAQ5B,QAAMC,QAAQzB,KAAKvB,EAAakB,KAAM,UAElD,OAAqB,KAAjByD,EAAM5C,OACD,EAEF4C,EAAM,QA1PjB,MAgQaC,EAAgB,WAC3B,OAAOnH,K,wIC9QIwG,EAAb,WAME,WAAYY,EAA8BC,GAIxC,OAJ2D,yBALrDC,gBAKoD,OAJpDC,mBAIoD,OAHpDC,WAGoD,OAFpDC,eAEoD,EAC1DlG,KAAKiG,MAAQJ,EACb7F,KAAKgG,cAAgBF,EAEd9F,KAVX,wCAaE,WAAc,IAAD,OACXA,KAAK+F,WAAaI,WAAU,sBAAC,sBAAAhH,EAAA,yDACtB,EAAK8G,MADiB,uBAEzB,EAAKG,UAFoB,0CAKf,EAAKH,QALU,wCAMzB,EAAKG,UANoB,0BAS3B,EAAKC,OATsB,2CAU1BrG,KAAKgG,iBAxBZ,qBA2BE,WACEhG,KAAKkG,WAAalG,KAAKkG,cA5B3B,mBA+BE,SAAMI,GACJtG,KAAKkG,UAAYI,EACbtG,KAAK+F,YAIT/F,KAAKqG,SArCT,kBAyCE,WACErG,KAAKoG,UACApG,KAAK+F,aAGVQ,OAAOC,aAAaxG,KAAK+F,YACzB/F,KAAK+F,gBAAaf,OA/CtB,M,gCCyFO,IAAKyB,EAWAC,EAMAC,EAgBAC,EAjCZ,wI,SAAYH,O,qBAAAA,I,aAAAA,I,gCAAAA,M,cAWAC,O,qBAAAA,I,uBAAAA,I,kBAAAA,M,cAMAC,K,oDAAAA,E,0CAAAA,E,sDAAAA,E,kDAAAA,E,0BAAAA,E,4BAAAA,E,yBAAAA,M,cAgBAC,K,0BAAAA,E,kBAAAA,E,qBAAAA,M,8EC1HZ,wNAEaC,EAAkB,CAC7BC,SAAU,qBACVC,yBAA0B,iBAC1BC,6BAA8B,qBAC9BC,uBAAwB,0DACxBC,cAAe,+BACfC,cAAe,MAGJC,EAAsB,CACjC,CACEC,GAAI,EACJC,UAAW,EACXjE,KAAM,UACN7D,OAAQ,+BACR+H,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXjE,KAAM,UACN7D,OAAQ,gCACR+H,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXjE,KAAM,eACN7D,OAAQ,gCACR+H,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXjE,KAAM,QACN7D,OAAQ,uBACR+H,aAAc,2BAILC,EAAY,CACvBC,KAAM,OACNC,aAAc,eACdC,MAAO,SAGIC,EAAsB,CACjCC,WAAYL,EAAUG,MACtBN,GAAI,KACJhE,KAAM,UACNyE,OAAQ,UACRC,eAAgB,UAChBC,SAAU,EACVC,aAASjD,EACTkD,SAAKlD,GAGMmD,EAA+B,CAC1C,CACE9E,KAAM,GACNJ,KAAM,WAER,CACEI,KAAM,MACNJ,KAAM,OAER,CACEI,KAAM,eACNJ,KAAM,iBAIGmF,EAA4C,CACvDC,YAAY,EACZC,UAAU,EACVC,OAAQJ,EAAc1B,IAAa+B,SAASvF,KAC5CwF,OAAQ,K,8FC5EGC,EAIX,WAAmBC,GAAgC,yBAHnDC,YAGkD,OAFlDtI,UAEkD,EAChDuI,OAAOC,OAAO9I,KAAM2I,IAYlBI,EAAO,aAqHP3K,EAAS,IA5Ef,uFAEE,WACE,OAAO4K,QAAQC,UAHnB,uBAME,SAAkBhG,GAChB,MAAM,IAAN,OAAWA,EAAX,aAAmB,IAAIiG,MAAOC,qBAA9B,OAPJ,iCAUE,SAA4BlG,GAA6C,IACvE,IAAMmG,EAAQ,SAACC,GACb,OAAIC,IAAWC,SAASF,GACfA,EACEA,aAAatH,MACfsH,EAAEG,QAEJF,IAAWG,aAAaJ,IAPsC,mBAA5B/I,EAA4B,iCAA5BA,EAA4B,kBASvE,IAAMoB,EAAS,IAAIgH,EAAc,CAC/BE,OAAQ5I,KAAK0J,UAAUzG,GACvB3C,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMqJ,KAAI,SAAAN,GAAC,OAAIO,MAAMC,QAAQR,GAAKA,EAAEM,KAAI,SAAAG,GAAE,OAAIV,EAAMU,MAAOV,EAAMC,QAEzE,OAAO3H,IAvBX,iBA0BE,WAAa,IAAD,OACV,OAAI1B,KAAK+J,UACA,WAAoB,IAAC,IAAD,qBAAhBzJ,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKsI,oBAAoB,QAAS1J,GACjD,OAAO,EAAA2J,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQC,MAAOD,QAAS3I,EAAOkH,QAA5D,OAAuEtI,KAGzEyI,IAjCb,gBAqCE,WAAY,IAAD,OACT,OAAI/I,KAAK+J,UACA,WAAoB,IAAC,IAAD,qBAAhBzJ,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKsI,oBAAoB,OAAQ1J,GAChD,OAAO,EAAA2J,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQvK,KAAMuK,QAAS3I,EAAOkH,QAA3D,OAAsEtI,KAGxEyI,IA5Cb,gBAgDE,WAAY,IAAD,OACT,OAAI/I,KAAK+J,UACA,WAAoB,IAAC,IAAD,qBAAhBzJ,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKsI,oBAAoB,OAAQ1J,GAChD,OAAO,EAAA2J,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQE,KAAMF,QAAS3I,EAAOkH,QAA3D,OAAsEtI,KAGxEyI,IAvDb,iBA2DE,WAAa,IAAD,OACV,OAAI/I,KAAK+J,UACA,WAAoB,IAAC,IAAD,qBAAhBzJ,EAAgB,yBAAhBA,EAAgB,iBACjB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMyC,QAAS,IACZuG,IAAWC,SAASjJ,EAAK,KAC5BA,EAAK0C,KAAK,+CAGd,IAAMtB,EAAS,EAAKsI,oBAAoB,QAAS1J,GACjD,OAAO,EAAA2J,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQzK,MAAOyK,QAAS3I,EAAOkH,QAA5D,OAAuEtI,KAGzEyI,MAvEb,MA8Ea1K,EAAY,WACvB,OAAOD,I,4CCxHGoM,E,6FCnBG,MAA0B,+B,sHCkCnCC,EAAO,IAlCb,WAKE,aAAe,yBAJEC,iBAIH,OAHGC,uBAGH,OAFGC,mBAEH,EACZ5K,KAAK0K,YAAc,IAAIG,IAAoB,CACzC,CAAC,6FAA8F,2BAC/F,CAAC,6FAA8F,2BAC/F,CAAC,6FAA8F,4BAEjG7K,KAAK2K,kBAAoB,IAAIE,IAC7B7K,KAAK4K,cAAgB,IAAIC,IAZ7B,8CAeE,SAAW5C,GACT,IAAKA,EACH,MAAO,GAET,IAAM6C,EAAW9K,KAAK0K,YAAYK,IAAI9C,GACtC,cAAO6C,QAAP,IAAOA,IAAY7C,IApBvB,kCAuBE,SAAqB5E,GACnB,IAAMyH,EAAW9K,KAAK2K,kBAAkBI,IAAI1H,GAC5C,cAAOyH,QAAP,IAAOA,IAAYzH,EAAKsB,QAAQ,IAAK,KAAKqG,gBAzB9C,8BA4BE,SAAiB3H,GACf,IAAMyH,EAAW9K,KAAK4K,cAAcG,IAAI1H,GACxC,cAAOyH,QAAP,IAAOA,IAAYzH,EAAKsB,QAAQ,IAAK,KAAKqG,kBA9B9C,MAoCaC,EAAc,WACzB,OAAOR,G,QChCHrM,EAASC,cAwBTI,EAAS,IAtBf,WAIE,aAAe,yBAHEI,aAGH,OAFGqM,eAEH,EACZlL,KAAKnB,QAAU,IAAIsM,IACnBnL,KAAKkL,UAAYD,IANrB,gGASE,WAA4B5H,GAA5B,mBAAAlE,EAAA,sEAEUiM,EAAapL,KAAKkL,UAAUG,iBAAiBhI,GAC7C1C,EAAS,CAAE2K,IAAKF,GAH1B,SAIyBpL,KAAKnB,QAAQ0M,OAAOC,MAAM7K,GAJnD,cAIUe,EAJV,yBAKW,IAAI+J,IAAU/J,EAAOQ,KAAKkJ,GAAYM,MALjD,uCAOItN,EAAOwB,MAAP,KAAAxB,GAPJ,kBAQW,IAAIqN,IAAU,IARzB,yDATF,+D,kBCqBMhN,EAAS,IAbf,WAGE,aAAe,yBAFEkN,cAEH,EACZ3L,KAAK2L,SAAW,yBAJpB,8FAOE,WAA0B/K,GAA1B,eAAAzB,EAAA,sEACuByM,IAAMb,IAAmC/K,KAAK2L,SAAW,gCAAkC/K,GADlH,cACQc,EADR,yBAESA,EAAOQ,KAAKA,MAFrB,gDAPF,+D,gBCfa2J,EAAb,4FAEE,SAAsBC,EAAeC,EAAsBvC,GACzD,GAAiB,OAAbsC,QAAkC9G,IAAb8G,EACvB,MAAItC,EACI,IAAIzH,MAAMyH,GAEV,IAAIzH,MAAM,8BAAgCgK,KAPxD,iCAYE,SAAkCD,EAAyBC,EAAsBvC,GAC/E,GAAiB,OAAbsC,QAAkC9G,IAAb8G,GAA+C,MAAb,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUE,QAC3D,MAAIxC,EACI,IAAIzH,MAAMyH,GAEV,IAAIzH,MAAM,8BAAgCgK,KAjBxD,uBAsBE,SAAwBD,EAAyBC,EAAsBE,GACrE,GAAIH,GAAYA,EAAS/I,OAASkJ,EAChC,MAAM,IAAIlK,MAAJ,UAAagK,EAAb,0CAA2DE,QAxBvE,K,iBCEaC,EAAb,WAGE,WAAYC,GAAyB,yBAFpBC,aAEmB,EAEhCpM,KAAKoM,QADHD,GAGaE,UAAUC,SAE3BC,IAAOJ,OAAOnM,KAAKoM,SATvB,6CAYE,WACE,OAAOpM,KAAKoM,UAbhB,iBAgBE,WACE,OAAOG,QAjBX,yBAoBE,SAAmBC,GACjB,OAAOD,IAAOE,SAASD,EAAS,aArBpC,yBAwBE,SAAmBE,GACjB,OAAOH,IAAOI,KAAKD,KAzBvB,iCA4BE,SAA2BA,GACzB,OAAOH,IAAOG,EAAM,OA7BxB,sBAgCE,SAAgBA,GACd,OAAOH,IAAOK,IAAIF,GAAMG,UAjC5B,0BAoCE,SAAoBH,GAClB,OAAO1M,KAAK8M,SAASJ,GAAMK,OAAO,SArCtC,0BAwCE,SAAoBL,GAClB,OAAO1M,KAAK8M,SAASJ,GAAMK,OAAO,OAzCtC,+BA4CE,SAAyBL,GACvB,OAAO1M,KAAKgN,aAAaN,GAAQ,IAAM1M,KAAKiN,aAAaP,KA7C7D,sCAgDE,SAAgCA,GAC9B,OAAO1M,KAAKiN,aAAaP,GAAQ,IAAM1M,KAAKgN,aAAaN,KAjD7D,uBAoDE,SAAiBhD,GACf,IACE,OAAIA,GAAa,GACR6C,IAAOK,MAAMD,QAAUjD,EAGhC,MAAO9J,GACP,OAAO,OA3Db,K,QCUMxB,EAASC,cAgBO6O,EAAtB,WASE,aAAe,yBARIpO,cAQL,OAPGC,oBAOH,OANGoO,sBAMH,OALGC,kBAKH,OAJGlC,eAIH,OAHGmC,aAGH,OAFNC,QAAsB,IAAIpB,EAGhClM,KAAKlB,SAAWmB,cAChBD,KAAKjB,eAAiBmB,cACtBF,KAAKmN,iBJRA1O,EISLuB,KAAKoN,aHVA3O,EGWLuB,KAAKkL,UAAYD,IACjBjL,KAAKqN,QAAU,IAAIxC,IAfvB,oFAkBE,sBAAA1L,EAAA,6DACEf,EAAO0B,KAAK,sBAAZ1B,GACA4B,KAAKsN,QAAU,IAAIpB,EAFrB,SAGQlM,KAAKuN,qBAHb,gDAlBF,2EAwBE,WACEnP,EAAO0B,KAAK,2BAAZ1B,GACA4B,KAAKqN,QAAQG,QACbxN,KAAKyN,qBA3BT,wBA8BE,WACE,IAAMjN,EAAUR,KAAKjB,eAAe2O,mBAEpC,OADA7B,EAAO8B,QAAQnN,EAAS,UAAW,qCAC5BA,IAjCX,gEAoCE,WAAkBoN,GAAlB,yBAAAzO,EAAA,oEAEQyO,EAAKC,cAAgB,KAAM7N,KAAKsN,QAAQQ,UAAUF,EAAKC,eAAiBD,EAAKG,oBAAsBH,EAAKI,SAFhH,8CAIahJ,GAJb,uBAMoChF,KAAKmN,iBAAiBc,sBAAsBL,EAAKM,aAAa7K,MANlG,cAMU8K,EANV,gBAOmCnO,KAAKmN,iBAAiBc,sBAAsBL,EAAKQ,YAAY/K,MAPhG,cAOUgL,EAPV,OAQUC,EAAYV,EAAKI,SAASO,MAAMX,EAAKY,YACrCC,EAAgB,IAAIhD,IAAU,SAC9BiD,EAAY,IAAIjD,IAAU,KAC1BkD,EAAMN,EAAiBO,MAAMhB,EAAKiB,cAAcC,UAAUX,EAAkBS,MAAMhB,EAAKmB,aAAaH,MAAMN,IAAYM,MAAMH,GAAeG,MAAMF,GAX3J,mBAYYC,EAAIK,YAAcL,EAAIM,aAAUjK,EAAY2J,GAZxD,yCAcIvQ,EAAOwB,MAAP,KAAAxB,GAdJ,uBAeW4G,GAfX,0DApCF,gIAuDE,WAA2BgJ,GAA3B,iBAAA7O,EAAA,kEAES6O,IAAYA,EAASkB,IAAI,GAFlC,0CAGc,GAHd,uBAKqClP,KAAKmP,6BAL1C,UAKUC,EALV,SAMUC,EAAmBrB,EAASO,MAAMa,IACnBF,IAAI,GAP7B,yCAQa,GARb,gCAUWlP,KAAKsN,QAAQvC,MAAMuE,IAAID,EAAiBE,WAAY,WAAW5C,QAV1E,kCAYIvO,EAAOwB,MAAP,KAAAxB,GAZJ,iCAcS,GAdT,0DAvDF,yHAwEE,WAAoBiJ,GAApB,qBAAAlI,EAAA,oEAEU2L,EAAW9K,KAAKqN,QAAQtC,IAAI1D,IAFtC,yCAIayD,GAJb,uBAMyB9K,KAAKoN,aAAaoC,oBAAoBnI,GAN/D,YAMU3F,EANV,gCAQY+N,EAAQ,CACZ5H,WAAY,QACZR,KACAhE,KAAM3B,EAAO2B,KACbyE,OAAQpG,EAAOoG,OACfC,eAAgBrG,EAAOqG,eACvBC,SAAUtG,EAAOgO,cACjBzH,QAASvG,EAAOiO,QAChBzH,IAAK,wCAA0ClI,KAAKkL,UAAU0E,qBAAqBlO,EAAO2B,OAE5FrD,KAAKqN,QAAQwC,IAAIxI,EAAIoI,GAlB3B,kBAmBaA,GAnBb,0DAsBIrR,EAAOwB,MAAP,KAAAxB,GAtBJ,eAwBQ0R,EAxBR,2BAyBOlI,KAzBP,IA0BIP,OAEFrH,KAAKqN,QAAQwC,IAAIxI,EAAIyI,GA5BvB,kBA6BSA,GA7BT,0DAxEF,uHAwGE,WAA4BzI,EAAY0I,GAAxC,6FAC6B/P,KAAKgQ,cAAcD,EAAEE,gBADlD,cACQ/B,EADR,gBAE4BlO,KAAKgQ,cAAcD,EAAEG,eAFjD,cAEQ9B,EAFR,gBAG6BpO,KAAKmQ,qBAAqB,IAAI1E,IAAUsE,EAAE/B,WAHvE,cAGQH,EAHR,OAIQD,EAAa,CACjB/F,WAAYL,IAAUC,KACtBJ,KACA6G,eACAE,cACAW,YAAa,IAAItD,IAAUsE,EAAEK,qBAC7BvB,aAAc,IAAIpD,IAAUsE,EAAEM,oBAC9B7B,WAAY,IAAI/C,IAAUsE,EAAEvB,YAC5BR,SAAU,IAAIvC,IAAUsE,EAAE/B,UAC1BH,eACAE,kBAAmB,IAAItC,IAAUsE,EAAEhC,mBACnCuC,gBAAiB,IAAI7E,IAAUsE,EAAEO,iBACjCC,eAAgB,IAAI9E,IAAUsE,EAAEQ,gBAChCC,QAAS,IAAI/E,IAAUsE,EAAES,SACzBC,eAAgBzQ,KAAKsN,QAAQvC,MAAM4B,QAlBvC,kBAoBSiB,GApBT,iDAxGF,iIA+HE,WAAoC8C,GAApC,0FACS,CACL7I,WAAYL,IAAUE,aACtBL,GAAG,GAAD,OAAKqJ,EAAExP,QAAP,YAAkBwP,EAAEC,QACtBA,OAAQD,EAAEC,OACVnQ,QAASkQ,EAAExP,QACX0P,eAAgB,IAAInF,IAAUiF,EAAEE,gBAChCC,WAAY,IAAIpF,IAAUiF,EAAEG,cAPhC,2CA/HF,8D,iCP1BsBC,G,OAAtB,mCAIaC,EAAb,0MACE,WAAoBhR,GAApB,eAAAZ,EAAA,sEACyB6R,MAAMjR,GAD/B,cACQkR,EADR,yBAESA,EAASC,QAFlB,2CADF,4DAAqCJ,I,SAazBtG,O,qBAAAA,I,kBAAAA,M,KAKL,I,mCQhBDpM,GAASC,cAwMT8S,GAAK,IAtMX,kDAOE,aAAyD,IAAD,EAA5CC,EAA4C,uDAAvB,IAAIL,EAAmB,4BACtD,gBAPeM,eAMuC,IALhDC,YAKgD,IAJhDC,YAIgD,IAHhDC,yBAGgD,IAFhDC,iCAEgD,EAEtD,EAAKJ,UAAYD,EACjB,EAAKE,OAAS,GACd,EAAKC,OAAS,GACd,EAAKC,oBAAsB,IAAI/F,IAAU,GACzCrN,GAAO0B,KAAK,wBAAZ1B,GANsD,EAP1D,0DAgBE,WAAkC,IAAD,OAC/B4B,KAAKwR,oBAAsB,IAAI/F,IAAU,GACzCzL,KAAKyR,4BAA8BC,aAAY,WAC7C,EAAKF,oBAAsB,EAAKA,oBAAoBG,KAAK,KAExD,OArBP,mEAwBE,qBAAA5B,EAAA,mFACoB/P,KAAKqR,UAAUO,cAAc,qCADjD,OACMC,EADN,OAEEA,EAAQpN,KAAKI,MAAMgN,GACnB7R,KAAKsR,OAAS,GACLQ,EAAQ,EAJnB,YAIsBA,EAAQD,EAAM9O,QAJpC,wBAKUgN,EAAkB8B,EAAMC,GALlC,UAMuB9R,KAAK+R,YAAYD,EAAO/B,GAN/C,eAMUnC,EANV,iBAOqB5N,KAAKgS,YAAYpE,GAPtC,QAOIA,EAAKe,IAPT,OAQI3O,KAAKsR,OAAOtO,KAAK4K,GARrB,QAI4CkE,IAJ5C,gEAxBF,sHAoCE,WAAkBlE,GAAlB,SAAAzO,EAAA,2DACUyO,EAAKvG,GADf,OAES,IAFT,OAIS,IAJT,+CAGa,IAAIoE,IAAU,aAH3B,gCAKa,IAAIA,IAAU,aAL3B,mGAO+BmC,IAP/B,uDApCF,8HA+CE,0GACoB5N,KAAKqR,UAAUO,cAAc,qCADjD,OACMK,EADN,OAEEA,EAAQxN,KAAKI,MAAMoN,GACnBjS,KAAKuR,OAAS,GACLO,EAAQ,EAJnB,YAIsBA,EAAQG,EAAMlP,QAJpC,wBAKU2N,EAA0BuB,EAAMH,GAL1C,UAMuB9R,KAAKkS,oBAAoBxB,GANhD,QAMU5Q,EANV,OAOIE,KAAKuR,OAAOvO,KAAKlD,GAPrB,QAI4CgS,IAJ5C,gEA/CF,6HA0DE,qFACE1T,GAAO0B,KAAK,oCAAZ1B,GACA4B,KAAKmS,yBAFP,SAGQnS,KAAKoS,iBAHb,uBAIQpS,KAAKqS,qBAJb,gDA1DF,oFAiEE,WACMrS,KAAKyR,6BACPa,cAActS,KAAKyR,+BAnEzB,2EAuEE,WAA6Bc,GAA7B,SAAApT,EAAA,+EACS,IAAIsM,IAAU,IADvB,2CAvEF,sIA2EE,sBAAAtM,EAAA,+EACSa,KAAKwR,qBADd,gDA3EF,uHA+EE,WAAmBgB,EAAaD,GAAhC,eAAApT,EAAA,sEACQmK,IAAWmJ,QAAQnJ,IAAWoJ,OAAO,IAAK,MADlD,UAEQ9E,EAAO5N,KAAKsR,OAAOkB,GACpBD,EAHP,yCAIW3E,GAJX,2CAOOA,GAPP,kBAQoB5N,KAAK2S,qBAAqBH,EAAKD,GARnD,iCAQIK,SARJ,mGA/EF,2HA2FE,WAAoBL,GAApB,qBAAApT,EAAA,sEACQmK,IAAWmJ,QAAQ,KAD3B,UAEOF,EAFP,yCAGWvS,KAAKsR,QAHhB,OAKQO,EAAQ,GALhB,cAMkB7R,KAAKsR,QANvB,gEAMavB,EANb,aAOI8B,EAPJ,UAOqB7R,KAAK6S,aAAa9C,EAAE1I,GAAIkL,GAP7C,yBAOUvP,KAPV,wLASS6O,GATT,gEA3FF,gIAuGE,WAA2BiB,EAAiBP,GAA5C,SAAApT,EAAA,0DACMmK,IAAWyJ,mBAAmBR,GADpC,8CAEWvN,GAFX,gCAIShF,KAAKuR,OAAOyB,MAAK,SAAA3J,GAAC,OAAIA,EAAEsH,SAAWmC,GAAWzJ,EAAE7I,QAAQwK,iBAAV,OAA4BuH,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUvH,mBAJ7F,gDAvGF,gIA8GE,sBAAA7L,EAAA,+EACSa,KAAKsR,OAAOvO,QADrB,gDA9GF,2HAkHE,WAA+B6K,GAA/B,6FAC4B5N,KAAKmP,6BADjC,UACQ8D,EADR,UAEQC,EAAcD,EAAcrF,EAAKI,SAAWiF,EAAcrF,EAAKI,WAIlDJ,EAAKG,mBAN1B,qDAWMH,EAAKmB,YAAYoE,GAAG,GAX1B,uBAYIvF,EAAKG,kBAAoBmF,EAZ7B,0BAiBQE,EAASF,EAAY3E,MAAMX,EAAKG,mBAChCsF,EAAezF,EAAK0C,gBAAgB1B,MAAMwE,GAAQxE,MAAM/H,IAAgBM,eAAemM,IAAI1F,EAAKmB,aACtGnB,EAAK2C,eAAiB3C,EAAK2C,eAAeoB,KAAK0B,GAE/CzF,EAAKG,kBAAoBmF,EArB3B,iDAlHF,wHA0IE,WAAmBV,EAAae,EAAkBC,GAAlD,uBAAArU,EAAA,sEACQmK,IAAWmJ,QAAQ,KAD3B,cAEQ7E,EAAO5N,KAAKsR,OAAOkB,GAF3B,SAGQxS,KAAKyT,iBAAiB7F,GAH9B,cAKQ/M,EAAS,IAAI4K,IAAU+H,GACvBhT,EAAUR,KAAK0T,aAAaxS,QANpC,SAOuBlB,KAAK2S,qBAAqBH,EAAKhS,GAPtD,YAOMoS,EAPN,yBAUQA,EAAShC,eAAe+C,GAAG,KACvBC,EAAgBhB,EAAShC,eAAehC,MAAMhB,EAAK2C,gBAAgB+C,IAAIzM,IAAgBM,eAAeoH,MAAMqE,EAAS/B,YAC3HjD,EAAK4C,QAAU5C,EAAK4C,QAAQmB,KAAKiC,IAGnChB,EAAShC,eAAiBgC,EAAShC,eAAee,KAAK9Q,GACvD+R,EAAS/B,WAAa+B,EAAShC,eAAehC,MAAMhB,EAAK2C,gBAAgB+C,IAAIzM,IAAgBM,eAhBjG,yCAkBqBnH,KAAKkS,oBAAoB,CACxCvB,OAAQ6B,EACRtR,QAASV,EACToQ,eAAgB/P,EAAO2B,WACvBqO,WAAY,MAtBlB,QAkBI+B,EAlBJ,OAwBI5S,KAAKuR,OAAOvO,KAAK4P,GAxBrB,eA0BEhF,EAAKmB,YAAcnB,EAAKmB,YAAY4C,KAAK9Q,GACzCb,KAAKlB,SAAS+U,gBAAgBrB,EAAK,IAAI/G,IAAU+H,GAAUhT,GA3B7D,mBA4BS,GA5BT,iDA1IF,6HAyKE,WAAoBgS,EAAagB,GAAjC,uBAAArU,EAAA,sEACQmK,IAAWmJ,QAAQ,KAD3B,cAEQ7E,EAAO5N,KAAKsR,OAAOkB,GAF3B,SAGQxS,KAAKyT,iBAAiB7F,GAH9B,cAKQ/M,EAAS,IAAI4K,IAAU+H,GACvBhT,EAAUR,KAAK0T,aAAaxS,QANpC,SAOyBlB,KAAK2S,qBAAqBH,EAAKhS,GAPxD,UAOQoS,EAPR,8BASU,IAAI7Q,MAAM,yBATpB,YAWM6Q,EAAShC,eAAe1B,IAAI,KAAMrO,EAAO8S,GAAGf,EAAShC,gBAX3D,uBAYU,IAAI7O,MAAM,wBAZpB,eAgBQ6R,EAAgBhB,EAAShC,eAAehC,MAAMhB,EAAK2C,gBAAgB+C,IAAIzM,IAAgBM,eAAeoH,MAAMqE,EAAS/B,YAC3HjD,EAAK4C,QAAU5C,EAAK4C,QAAQmB,KAAKiC,GAGjChB,EAAShC,eAAiBgC,EAAShC,eAAerC,MAAM1N,GACxD+M,EAAKmB,YAAcnB,EAAKmB,YAAYR,MAAM1N,GAC1C+R,EAAS/B,WAAa+B,EAAShC,eAAehC,MAAMhB,EAAK2C,gBAAgB+C,IAAIzM,IAAgBM,eAE7FnH,KAAKlB,SAASgV,iBAAiBtB,EAAK,IAAI/G,IAAU+H,GAAUhT,GAxB9D,mBAyBS,GAzBT,iDAzKF,8DAAoC0M,IAwMvB6G,GAAoB,WAC/B,OAAO5C,ICnNI6C,GAAb,WAME,WAAYvH,EAAkBwH,GAA+B,yBAL5CC,eAK2C,OAJ3CC,iBAI2C,OAHpDC,mBAGoD,OAFpDC,oBAEoD,EAC1DrU,KAAKkU,UAAYzH,EACjBzM,KAAKmU,YAAcF,EACnBjU,KAAKqU,eAAiB,IAAInL,KAAK,GAAGoL,UATtC,6CAYE,WACE,OAAO,IAAIpL,MAAOoL,WAAatU,KAAKqU,eAAiBrU,KAAKkU,YAb9D,6DAgBE,sBAAA/U,EAAA,yDACOa,KAAKoU,gBAAiBpU,KAAK8N,YADlC,gCAE+B9N,KAAKmU,cAFpC,OAEInU,KAAKoU,cAFT,OAGIpU,KAAKqU,gBAAiB,IAAInL,MAAOoL,UAHrC,gCAKStU,KAAKoU,eALd,gDAhBF,6D,SCUMhW,GAASC,cA8LT8S,GAAK,IA5LX,kDAQE,aAAyD,IAAD,EAA5CC,EAA4C,uDAAvB,IAAIL,EAAmB,4BACtD,gBAReM,eAOuC,IANvCxS,aAMuC,IALvC0V,iBAAwC,IAAI1J,IAKL,EAJvC2J,+BAIuC,IAHhDC,eAGgD,IAFhDC,eAEgD,IAmJhDC,oBAnJgD,uCAmJ1B,WAAOzT,EAAiB6D,GAAxB,SAAA5F,EAAA,+EAA2C,IAAIC,SAAc,SAACC,EAASC,GACnG,EAAKT,QAAQ+V,yBAAyB1T,EAAS6D,GAAQ8P,MAAK,SAACnT,GAGnD,IAAD,EAFgB,KAAb,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ6D,QACVlG,IAEAC,EAAM,iBAACoC,QAAD,IAACA,OAAD,EAACA,EAAQ+D,iBAAT,QAAsB,gCALJ,2CAnJ0B,0DA2KhDqP,kBAAoB,SAACC,GAC3B,OAAOlM,OAAOmM,YACZD,EAAQpL,KAAI,SAACsL,GACX,MAAO,CAACA,EAAM5R,KAAM4R,EAAM3R,YA5K9B,EAAK+N,UAAYD,EACjB,EAAKvS,QAAU+G,cACf,EAAK4O,0BAA4B,IAAIR,GAAmB,IAAvB,sBAA4B,sBAAA7U,EAAA,sEAE9C,EAAKN,QAAQ4D,aAAa,iCAFoB,oFAI7DrE,GAAO0B,KAAK,wBAAZ1B,GARsD,EAR1D,6FAmBE,6GACyB4B,KAAKqR,UAAUO,cAAc,8CADtD,cACQsD,EADR,OAEElV,KAAKyU,UAAYhQ,KAAKI,MAAMqQ,GAC5BlV,KAAKyU,UAAUvT,QAAU2F,IAAgBI,uBACzC7I,GAAO0B,KAAP,6BAAwBE,KAAKyU,iBAA7B,aAAwB,EAAgBU,aAAxC,WAAA/W,GAJF,SAKyB4B,KAAKnB,QAAQuW,2BAA2BpV,KAAKyU,UAAUvT,SALhF,OAKElB,KAAK0U,UALP,OAME1U,KAAK0U,UAAUhV,IAAG,SAAC2V,GAAoB,IAAD,EACpC,GAAI,UAAC,EAAKZ,iBAAN,aAAC,EAAgB/T,IAGnB,IAAK,IAAIoR,EAAQ,EAAGA,EAAQuD,EAAQtS,OAAQ+O,IAAS,CACnD,IAAMpQ,EAAS2T,EAAQvD,GACjBvO,EAAQ,EAAK1E,QAAQyW,YAAY5T,EAAO6T,MAAO,EAAKd,UAAU/T,KACpEtC,GAAO0B,KAAP,OAAYyD,QAAZ,IAAYA,IAAS7B,EAArBtD,GACImF,GACF,EAAKiS,iBAAiBjS,QAP1BnF,GAAO0B,KAAK,8DAAZ1B,MARN,iDAnBF,oFAyCE,WACE4B,KAAKyV,wBACLzV,KAAKuU,iBAAiB/G,UA3C1B,mCA8CE,WACMxN,KAAK0U,WACP1U,KAAKnB,QAAQ6W,eAAe1V,KAAK0U,aAhDvC,oBAoDE,WAAkC,IAAD,EAC/B,QAAgC1P,KAA5B,UAAAhF,KAAKyU,iBAAL,eAAgBvT,SAClB,MAAM,IAAIa,MAAM,4BAEhB,OAAO/B,KAAKyU,YAxDlB,2EA4DE,WAA6BlC,GAA7B,eAAApT,EAAA,mEAEQmK,IAAWyJ,mBAAmBR,GAFtC,yCAGa,IAAI9G,IAAU,IAH3B,uBAKyBzL,KAAKnB,QAAQ4D,aAAa,iCAAkC8P,GALrF,kBAKU7Q,EALV,kBAMSA,OANT,EAMSA,EAAQiU,eANjB,yCAOa,IAAIlK,IAAU,IAP3B,gCASW,IAAIA,IAAU/J,EAAOiU,eAAe9O,IAAgBK,eAAe0O,SAAStC,IAAI,IAAI7H,IAAU,IAAIoK,IAAI,MATjH,yCAWIzX,GAAOwB,MAAP,KAAAxB,GAXJ,kBAYW,IAAIqN,IAAU,IAZzB,0DA5DF,sIA4EE,4BAAAtM,EAAA,+EAEyBa,KAAKwU,0BAA0BsB,WAFxD,cAEUpU,EAFV,yBAGW,IAAI+J,IAAU/J,IAHzB,uCAKItD,GAAOwB,MAAP,KAAAxB,GALJ,kBAMW,IAAIqN,IAAU,IANzB,yDA5EF,uHAsFE,WAAmB+G,EAAaD,GAAhC,mBAAApT,EAAA,sEACuBa,KAAKnB,QAAQkX,wBAAwB/V,KAAKkV,SAAShU,QAASlB,KAAKgW,qBAAqB,eAAgBhW,KAAKkV,SAASe,SAAU,CAACzD,IADtJ,cACQ9Q,EADR,OAEQqO,EAAI/P,KAAK8U,kBAAkBpT,GAFnC,SAGqB1B,KAAK+R,YAAYS,EAAKzC,GAH3C,cAGQnC,EAHR,gBAImB5N,KAAKgS,YAAYpE,GAJpC,cAIEA,EAAKe,IAJP,iBAKwB3O,KAAK2S,qBAAqBH,EAAKD,GALvD,eAKE3E,EAAKgF,SALP,yBAMShF,GANT,iDAtFF,2HA+FE,WAAoB2E,GAApB,qBAAApT,EAAA,sEACuBa,KAAKkW,qBAD5B,OACQrV,EADR,OAEQgR,EAAQ,GACLC,EAAQ,EAHnB,YAGsBA,EAAQjR,GAH9B,0CAKyBb,KAAK6S,aAAaf,EAAOS,GALlD,OAKY3E,EALZ,OAMMiE,EAAM7O,KAAK4K,GANjB,kDAQMxP,GAAOwB,MAAP,KAAAxB,GARN,QAGsC0T,IAHtC,gDAWSD,GAXT,0DA/FF,gIA6GE,WAA2BiB,EAAiBP,GAA5C,mBAAApT,EAAA,yDACOoT,IAAYjJ,IAAWyJ,mBAAmBR,GADjD,8CAEWvN,GAFX,uBAIuBhF,KAAKnB,QAAQkX,wBAAwB/V,KAAKkV,SAAShU,QAASlB,KAAKgW,qBAAqB,eAAgBhW,KAAKkV,SAASe,SAAU,CAACnD,EAASP,IAJ/J,cAIQ7Q,EAJR,OAKQgP,EAAI1Q,KAAK8U,kBAAkBpT,GALnC,SAMqB1B,KAAKkS,oBAAoBxB,GAN9C,cAMQ5Q,EANR,yBAOSA,GAPT,iDA7GF,gIAuHE,4BAAAX,EAAA,sEACuBa,KAAKnB,QAAQkX,wBAAwB/V,KAAKkV,SAAShU,QAASlB,KAAKgW,qBAAqB,gBAAiBhW,KAAKkV,SAASe,SAAU,IADtJ,cACQvU,EADR,yBAESyU,OAAOzU,EAAO,GAAG4B,QAF1B,gDAvHF,uHA4HE,WAAmBkP,EAAae,EAAkBC,GAAlD,iBAAArU,EAAA,6DACQqB,EAAUR,KAAK0T,aADvB,SAEuB1T,KAAKnB,QAAQuX,kBAAkB5V,EAAS,UAAWR,KAAKkV,SAASxU,IAAK,CAAC8R,GAAMe,EAAUC,EAASxT,KAAKkV,SAAShU,SAFrI,cAEQQ,EAFR,gBAGQ1B,KAAK2U,oBAAoBnU,EAAQU,QAASQ,EAAOqD,QAHzD,iCAIS,GAJT,gDA5HF,6HAmIE,WAAoByN,EAAagB,GAAjC,iBAAArU,EAAA,6DACQqB,EAAUR,KAAK0T,aADvB,SAEuB1T,KAAKnB,QAAQuX,kBAAkB5V,EAAS,WAAYR,KAAKkV,SAASxU,IAAK,CAAC8R,EAAKgB,QAAUxO,EAAW,IAAKhF,KAAKkV,SAAShU,SAF5I,cAEQQ,EAFR,gBAGQ1B,KAAK2U,oBAAoBnU,EAAQU,QAASQ,EAAOqD,QAHzD,iCAIS,GAJT,gDAnIF,2FA0IE,SAA6B1B,GAC3B,IAAI3B,EASJ,GARI1B,KAAKuU,iBAAiB8B,IAAIhT,GAC5B3B,EAAS1B,KAAKuU,iBAAiBxJ,IAAI1H,IAEnC3B,EAAS1B,KAAKkV,SAASxU,IAAIsS,MAAK,SAAA3J,GAAC,MAAe,aAAXA,EAAEpG,MAAuBoG,EAAEhG,OAASA,OAEvErD,KAAKuU,iBAAiB1E,IAAIxM,EAAM3B,GAGhCA,EACF,OAAOA,EAEP,MAAM,IAAIK,MAAJ,+BAAkCsB,EAAlC,yBAvJZ,qEAqKE,WAA+BkS,GAA/B,iEACE,IACMA,EAAMrR,QAAU0C,KAAW0P,SAAWf,EAAMjV,KAAKiW,MAAQhB,EAAMjV,KAAKkW,KAAOjB,EAAMjV,KAAKO,OACxFb,KAAKlB,SAAS+U,gBAAgBsC,OAAOZ,EAAMjV,KAAKkW,KAAM,IAAI/K,IAAU8J,EAAMjV,KAAKO,QAAS0U,EAAMjV,KAAKiW,MAC1FhB,EAAMrR,QAAU0C,KAAW6P,UAAYlB,EAAMjV,KAAKiW,MAAQhB,EAAMjV,KAAKkW,KAAOjB,EAAMjV,KAAKO,OAChGb,KAAKlB,SAASgV,iBAAiBqC,OAAOZ,EAAMjV,KAAKkW,KAAM,IAAI/K,IAAU8J,EAAMjV,KAAKO,QAAS0U,EAAMjV,KAAKiW,MAEpGnY,GAAO0B,KAAK,uBAAwByV,EAApCnX,GAEF,MAAOwB,GACPxB,GAAOwB,MAAMA,EAAbxB,GAVJ,gDArKF,4DAAoC8O,ICP9B9O,GAASC,cA2CTqY,GAAU,IAzChB,WAIE,aAAe,yBAHEC,WAGH,OAFNC,iBAEM,EACZ5W,KAAK2W,MAAQ/Q,cACb5F,KAAK4W,YAAc7C,KANvB,oFASE,WAAgB7U,GAAhB,SAAAC,EAAA,sEACQa,KAAK6W,oBAAoB3X,GADjC,YAEUA,EAAQmI,GAFlB,OAGS,IAHT,6BAIMrH,KAAK4W,YAAc7C,KAJzB,kCAOM/T,KAAK4W,YDoLJzF,GC3LP,4CAUQnR,KAAK4W,YAAY3X,YAVzB,iDATF,4EAsBE,WACEb,GAAO0B,KAAK,0BAAZ1B,GACA4B,KAAK4W,YAAYE,UACjB9W,KAAK2W,MAAMG,YAzBf,sBA4BE,WACE,OAAO9W,KAAK4W,cA7BhB,wEAgCE,WAAkC1X,GAAlC,0FAEUc,KAAK2W,MAAM1X,UAAUC,GAF/B,sDAIId,GAAOwB,MAAP,KAAAxB,GAJJ,wDAhCF,+DA2Ca2Y,GAAmB,WAC9B,OAAOL,I,mBChDIM,GAAmBC,aAAH,mKAMhBC,GAAoBD,aAAH,iIAMjBE,GAAgB,CACrBC,QADqB,SACbC,EADa,EAC8BX,GAA2C,OAAD,qHAAtErP,EAAsE,EAAtEA,GAAIzG,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,OAAyD,kBAC1F6V,EAAQjY,OAAO6Y,WAAWC,aAAapB,OAAO9O,GAAKzG,EAASC,IAD8B,8CAG7F2W,SAJqB,SAIZH,EAJY,EAIsBX,GAA2C,OAAD,mHAA7DrP,EAA6D,EAA7DA,GAAIxG,EAAyD,EAAzDA,OAAyD,kBAClF6V,EAAQjY,OAAO6Y,WAAWG,cAActB,OAAO9O,GAAKxG,IAD8B,+CCfhF6W,GAA4BT,aAAH,kIAMzBU,GAAiB,CACtBC,eADsB,SACPP,EADO,EACwBX,GAA6C,OAAD,iHAA5DlW,EAA4D,EAA5DA,QAA4D,SACjFkW,EAAQjY,OAAO6Y,WAAWO,uBAAuBrX,GADgC,uFCPrFsX,GAAiCb,aAAH,qGAM9Bc,GAAiB,CACtB3I,mBADsB,SACHiI,EAAa1W,EAAa+V,GAA6C,OAAD,oHAChFA,EAAQjY,OAAO6Y,WAAWnI,6BADsD,uFCPpF6I,GAAef,aAAH,6JAqBZgB,IATkBhB,aAAH,mIACxBe,IAQwB,CACpBvI,MADoB,SACd4H,EADc,EACYX,GAAyC,OAAD,iHAAnDrP,EAAmD,EAAnDA,GAAmD,kBACrEqP,EAAQjY,OAAO6Y,WAAWtH,cAAc3I,IAD6B,gDCrBnE6Q,GAAcjB,aAAH,2YAyBXkB,GAAwBlB,aAAH,0JAUrBmB,GAAiBnB,aAAH,mLACvBe,GACAG,GACAD,IAQSG,GAAkBpB,aAAH,kKACxBe,GACAG,GACAD,IAcSI,IANwBrB,aAAH,qFAMMA,aAAH,0MACjCkB,KAQSI,GAAc,CACnB3K,KADmB,SACdyJ,EADc,EACqBX,GAAwC,OAAD,mHAA3DrP,EAA2D,EAA3DA,GAAI7G,EAAuD,EAAvDA,QAAuD,kBAC5EkW,EAAQjY,OAAO6Y,WAAWzE,aAAasD,OAAO9O,GAAK7G,IADyB,8CAG/EqR,MAJmB,SAIbwF,EAJa,EAIkBX,GAA0C,OAAD,iHAAzDlW,EAAyD,EAAzDA,QAAyD,kBAC3EkW,EAAQjY,OAAO6Y,WAAWkB,cAAchY,IADmC,8CAG9EiY,WAPmB,SAORpB,EAAa1W,EAAa+V,GAA0C,OAAD,oHACrEA,EAAQjY,OAAO6Y,WAAWpB,qBAD2C,sFAG9EwC,aAVmB,SAUNrB,EAVM,EAUiCX,GAAuD,OAAD,mHAA9E/F,EAA8E,EAA9EA,OAAQnQ,EAAsE,EAAtEA,QAAsE,kBACvGkW,EAAQjY,OAAO6Y,WAAW3E,qBAAqBwD,OAAOxF,GAASnQ,IADwC,+CC/B5G/B,GAAS,IAxCf,8JACE,WACE,OAAOsY,KAAmBO,eAF9B,GAAyCqB,KAwC1B,CAAwB,CAErCC,MApC2B,IAAIC,IAAc,CAC7CC,aAAc,CACZC,MAAO,CACLC,OAAQ,OAkCZC,UAjBqB,CACrBxN,UAZsB,IAAIyN,IAAkB,CAC5C7V,KAAM,YACN8V,YAAa,+BACbC,UAH4C,SAGlC9V,GACR,OAAOA,EAAMd,YAEf6W,WAN4C,SAMjC/V,GACT,OAAO,IAAImI,IAAUnI,MAMvByV,MAAM,mDACDpB,IACAI,IACAQ,IACAN,IAELqB,SAAS,eACJnC,KASLoC,QAAS,CACP,cAAetQ,eACf,iBAAkBA,WAITuQ,GAAkB,WAC7B,OAAO/a,I,SC9DHL,GAASC,cA6CTob,GAAU,IA3ChB,WAKE,aAAe,yBAJPC,oBAIM,OAHNC,cAGM,OAFNC,yBAEM,EACZ5Z,KAAK0Z,eAAiB,IAAIjO,IAAU,GANxC,+CAaE,WACE,OAAOzL,KAAK0Z,gBAdhB,IASE,SAAkB3U,GAChB/E,KAAK0Z,eAAiB3U,IAV1B,gCAiBE,SAAyB8U,GACvB7Z,KAAK4Z,oBAAsBC,IAlB/B,wBAqBE,WACE,OAAO7Z,KAAK2Z,WAtBhB,wBAyBE,SAAWza,GACTc,KAAK2Z,SAAWza,EACZc,KAAK4Z,qBACP5Z,KAAK4Z,oBAAoB5Z,KAAK2Z,YA5BpC,yBAgCE,WACE,IAAK,IACGrO,EAAG,OAAGrC,WAAH,EAAGA,MAAgC6Q,MAAM,KAAKnQ,KAAI,SAAAN,GAAC,OAAI8M,OAAO9M,MACvE,OAAOjC,IAAS2S,QAAO,SAAA1Q,GAAC,cAAIiC,QAAJ,IAAIA,OAAJ,EAAIA,EAAK0O,SAAS3Q,EAAEhC,OAC5C,MAAOzH,GACPxB,GAAOwB,MAAMA,GAEf,OAAOwH,QAvCX,MA6Ca6S,GAAoB,WAC/B,OAAOR,I,yGCtCIS,IAXeC,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,qCACjC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,QADbD,EAEzB,gBAAGM,EAAH,EAAGA,MAAH,oCACMC,KAAeC,SAAY,CAChCC,gBAAiBH,EAAMI,QAAQC,OAAOC,MACtCC,MAAO,sBACPC,UAAWR,EAAMS,QAAQ,GACzBC,SAAU,QAIkBhB,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,qCACrC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBe,OAAK,EAACb,QAAS,CAAEC,OAAQJ,QADfD,EAE7B,kBAAGM,EAAH,EAAGA,MAAH,wCACMC,KAAeU,OAAU,CAC9BJ,MAAOP,EAAMI,QAAQC,OAAOO,QAF7B,4BAIMX,KAAeC,SAAY,CAChCC,gBAAiBH,EAAMI,QAAQC,OAAOO,QALvC,MCTUC,IDkBcnB,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,qCAChC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,QADdD,EAExB,gBAAGM,EAAH,EAAGA,MAAH,oCACMC,KAAeC,SAAY,CAChCC,gBAAiB,UACjBI,MAAO,sBACPO,SAAU,IACVJ,SAAUV,EAAMe,WAAWC,QAAQ,IACnCC,OAAQ,yBC1BoB,WAAO,IAAD,EACgBC,mBAAS,IAAIlQ,IAAU,IADvC,oBAC7B2D,EAD6B,KACTwM,EADS,OAEND,oBAAS,GAFH,oBAE7BE,EAF6B,KAEpBC,EAFoB,KAG9BC,EAAU9b,cAkBhB,OAhBA+b,qBAAU,WACR,IAAMC,EAAc,SAAClX,GACnB,IAAMmX,EAAenX,EAAOvC,WACxB2Z,EAAYpX,EACZmX,EAAanZ,OAAS,IACxBoZ,EAAY,IAAI1Q,IAAUyQ,EAAaE,OAAOF,EAAanZ,OAAS,EAAGmZ,EAAanZ,UAEtF+Y,EAAWK,EAAUE,IAAI,GAAGlJ,GAAG,IAC/ByI,EAAsB7W,IAGxB,OADAgX,EAAQrc,GAAGiH,KAAY2V,0BAA2BL,GAC3C,WACLF,EAAQQ,IAAI5V,KAAY2V,0BAA2BL,MAEpD,CAACF,IAGF,eAACS,GAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,OAAQC,GAAI,QAA3B,SACE,gBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,WAAWC,WAAW,SAASC,QAAS,EAAvF,UACE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAAChD,GAAD,CAAkBiD,MAAM,uBAAuBC,UAAU,MAAMhC,OAAK,EAApE,SACE,gBAACiC,GAAA,EAAD,CAAYC,QAAQ,UAAUb,GAAI,CAAEc,cAAe,SAAUC,QAAS,eAAtE,UACE,eAAC,KAAD,CAAgBf,GAAI,CAClBzB,MAAO,OACPyC,GAAI,MACJC,UAAW7B,EAAU,gBAAkB,eACvCV,SAAU,UAEX/L,EAAmB5M,kBAI1B,eAACoa,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAAChD,GAAD,CAAkBiD,MAAM,UAAUC,UAAU,MAAMhC,OAAK,EAAvD,SACE,eAACuC,GAAA,EAAD,CAAMC,MAAO,SAAqCN,QAAQ,WAAWO,KAAK,qB,oBC3ChFC,GAAO3D,YAAO,MAAPA,EACX,cAAGM,MAAH,+BAKIsD,GAAkB5D,YAAOkD,KAAPlD,EACtB,cAAGM,MAAH,gEAMWuD,GAA0B,SAAC3D,GACtC,OACE,eAACyD,GAAD,UACE,eAACG,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,GAAA,EAAD,UAEE,eAACJ,GAAD,CAAiBT,QAAQ,KAAzB,SACGzW,IAAgBC,kB,UCrBvBsX,GAAmBjE,YAAO,MAAPA,EACvB,cAAGM,MAAH,6LAYI4D,GAAkBlE,YAAO,MAAPA,EACtB,cAAGM,MAAH,mFAOW6D,GAAuB,SAAAjE,GAAU,IACpCkE,EAA2BlE,EAA3BkE,SAAaC,EADsB,aACRnE,EADQ,cAG3C,OACE,eAAC+D,GAAD,2BAAsBI,GAAtB,aACE,eAACC,GAAA,EAAD,CAAWlD,SAAS,KAApB,SACE,eAAC8C,GAAD,UAAkBE,UC3BpBG,GAAoBvE,YAAO,MAAPA,EACxB,cAAGM,MAAH,6EAOWkE,GAAwB,SAAAtE,GAAU,IACrCkE,EAA2BlE,EAA3BkE,SAAaC,EADuB,aACTnE,EADS,cAG5C,OAAO,eAACqE,GAAD,2BAAuBF,GAAvB,aAAmCD,MCFtCK,GAAcC,IAAMC,mBAAmC9Z,GAgBhD+Z,GAAgC,SAAC1E,GAAkB,IAAD,EACnCsB,mBAAuB,MADY,oBACtD/b,EADsD,KAC/Cof,EAD+C,OAEjCrD,mBAA2C,MAFV,oBAEtDsD,EAFsD,KAE9CC,EAF8C,OAG/BvD,mBAAyB,MAHM,oBAGtDzc,EAHsD,KAG7CigB,EAH6C,KAKvCjf,cACRkf,oBAAsBF,EAEbjF,KACRoF,qBAAuBF,EAEtC,IAAMzI,EAAwB,CAC5BsI,WACApf,QACAqf,SACA/f,WAGF,OACE,eAAC0f,GAAYU,SAAb,CAAsBhc,MAAOoT,EAA7B,SAAuC2D,EAAMkE,YCrC3CngB,GAASC,cAQTkhB,GAAuBV,IAAMC,mBAA4C9Z,GAKlEwa,GAA0B,WACrC,IAAM9I,EAAUmI,IAAMY,WAAWF,IAEjC,IAAK7I,EACH,MAAM,IAAI3U,MAAM,gDAGlB,OAAO2U,GAWIgJ,GAAiC,SAACrF,GAAkB,IAAD,EAC1BsB,mBAAuC,MADb,oBACvDgE,EADuD,KAC3CC,EAD2C,KAExDC,ED7BsB,WAC5B,IAAMnJ,EAAUmI,IAAMY,WAAWb,IAEjC,IAAKlI,EACH,MAAM,IAAI3U,MAAM,gDAGlB,OAAO2U,ECsBaoJ,GACdC,EAAgBhJ,KAEdkI,EAAoBY,EAApBZ,OAAQ/f,EAAY2gB,EAAZ3gB,QAEhB8c,qBAAU,WACHiD,GACmB/e,cACR8f,eAEf,CAACf,IAEJjD,qBAAU,WACR,IAAK9c,EAAS,CAAC,IACP+gB,EAAiBhG,KACjB3S,EAAY6O,QAAOlN,UACzBgX,EAAed,WAAW/X,IAAS4L,MAAK,SAAA3J,GAAC,OAAIA,EAAEhC,KAAOC,MACtDlJ,GAAO0B,KAAK,WAAYmgB,EAAeC,aAAvC9hB,MAED,CAACc,IAEJ,IAAMihB,EAASC,uBAAY,WACHlgB,cACRmgB,eACd9Z,OAAO+Z,SAASC,WACf,IA6BH,GA3BAvE,qBAAU,WAAO,IAAD,IACR1Y,EAAQ,CACZ9C,QAAO,OAAEye,QAAF,IAAEA,GAAF,UAAEA,EAAQuB,cAAV,aAAE,EAAgBtf,QACzBhC,UACAihB,UAkBF,OAfA/hB,GAAO0B,KAAK,wBAAZ,OAAqCmf,QAArC,IAAqCA,GAArC,UAAqCA,EAAQuB,cAA7C,aAAqC,EAAgBtf,QAArD9C,GAEe,uCAAG,sBAAAe,EAAA,0DACZD,EADY,wBAEdd,GAAO0B,KAAK,qBAAZ1B,GAFc,SAIZwhB,EAAc,MAJF,SAKNG,EAAc9gB,UAAUC,GALlB,OAMZ0gB,EAActc,GANF,gDAQZlF,GAAOwB,MAAP,KAAAxB,GARY,yDAAH,oDAYfa,GACO,WACL8gB,EAAcjJ,aAEf,CAACmI,EAAQ/f,EAASihB,EAAQJ,KAExBJ,EACH,OCxFA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,UACE,eAACtC,GAAA,EAAD,2BAEF,eAAC,GAAD,ODsFJ,IAAM/Z,EAAK,eACNqc,GAGL,OACE,eAACJ,GAAqBD,SAAtB,CAA+Bhc,MAAOA,EAAtC,SAA8C+W,EAAMkE,YExGlCkC,GAAtB,kGACE,SAAqBve,GACnB,IAAMwe,EAAiB,wBACvB,GAAIxe,EAAM,CAER,IAAIsH,EAC4B,EAAhC,GAFAa,QAAQsW,IAAIze,GAEPoH,IAAWC,SAASrH,GAmBvBsH,EAAUtH,OAlBNA,EAAKsH,QACPA,EAAUtH,EAAKsH,SAEZ,UAAItH,EAAKtC,aAAT,aAAI,EAAY4J,SACnBA,EAAUtH,EAAKtC,MAAM4J,QACZtH,EAAK0e,cAEZpX,EADEtH,EAAK0e,cAAc7d,OAAS,EACpBb,EAAK0e,cAAc,GAAGpX,QAEtBkX,EAII,QADhBlX,EAAU/E,KAAKC,UAAUxC,MAEvBsH,EAAUkX,GAMhB,OAAIlX,EAAQzG,OAAS,IACZyG,EAAQ4S,OAAO,EAAG,KAAO,MAE3B5S,EAET,OAAOkX,MAhCX,KCCsBG,GAAtB,iGAEE,SAAoBjhB,GAClBihB,EAAaC,SAASC,gBAAgBN,GAAWO,cAAcphB,MAHnE,4BAKE,SAAsB4J,GACpBqX,EAAaC,SAASC,gBAAgBvX,OAN1C,KAAsBqX,GACbC,c,iGCGIG,GAA0B,SAAC5G,GACtC,IAAM6G,EAAaC,iBAAuB,MAuB1C,OArBAnF,qBAAU,WACR,IAAMoF,EAAa,CACjBvD,KAAM,IACNwD,QAASA,WAAQC,KACjBC,WAAY,EACZC,WAAY,OACZC,KAAMC,SAAMC,oBACZC,OAAQ,EACRC,MAAO5Y,aACP6Y,MAAO,IAGLzH,EAAMnJ,MAAQgQ,EAAWa,UAC3Bb,EAAWa,QAAQC,UAAY,GACrB,IAAIC,UAAOf,EAAWa,SAC9BG,SAAS7H,EAAMnJ,KAAMkQ,GAAYvM,MAAK,WACtCxK,QAAQsW,IAAI,2BAGf,CAACtG,EAAMnJ,OAGR,sBAAKiR,IAAKjB,KClBDkB,GAA+B,SAAC/H,GAAkB,IAAD,EACpDgI,EAA2BhI,EAA3BgI,QAASC,EAAkBjI,EAAlBiI,KAAMC,EAAYlI,EAAZkI,QACjBC,EAAa5c,cACbmW,EAAU9b,cAEhB+b,qBAAU,WACR,IAAMC,EAAc,SAACqG,GACnBC,EAAQD,IAGV,OADAvG,EAAQrc,GAAGiH,KAAY8b,oBAAqBxG,GACrC,WACLF,EAAQQ,IAAI5V,KAAY8b,oBAAqBxG,MAE9C,CAACF,EAASwG,IAMb,OAAKC,EAAW5gB,UAQd,gBAAC8gB,GAAA,EAAD,CAAQL,QAZU,WAClBA,KAW8BC,KAAMA,EAAM/G,SAAS,KAAnD,UACE,eAACoH,GAAA,EAAD,6BACA,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,mDAGA,eAAC,KAAD,CAAKpG,GAAI,CAAEqG,GAAI,EAAGC,UAAW,UAA7B,SACE,eAAC,GAAD,CAAQ7R,KAAI,UAAEsR,EAAW5gB,iBAAb,aAAE,EAAsBohB,cAbxC,gC,wCC9BAC,GAAsB9I,YAAO+I,KAAP/I,EAC1B,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACd0I,OAAQ1I,EAAMwC,QAAQ,GACtB,oBAAqB,CACnBjC,MAAOP,EAAMI,QAAQC,OAAOC,OAE9B,qBAAsB,CACpBC,MAAOP,EAAMI,QAAQC,OAAOC,WAIrBqI,GAAwB,WACnC,IAAMnD,EAAiBhG,KACjBoJ,EAAWpD,EAAeqD,cAFS,EAGX3H,mBAAyBsE,EAAeC,cAH7B,oBAGlChhB,EAHkC,KAGzBigB,EAHyB,KAazC,OACEkE,EAAStgB,OAAS,EAChB,gBAACkgB,GAAD,CAAqB3F,QAAQ,WAAWO,KAAK,QAA7C,UACE,eAAC0F,GAAA,EAAD,CAAYlc,GAAG,yBACf,eAACmc,GAAA,EAAD,CACEC,QAAQ,uBACRpc,GAAG,uBACH/D,MAAK,OAAEpE,QAAF,IAAEA,OAAF,EAAEA,EAASmI,GAAG7E,WACnBkhB,SAhBa,SAACxf,GACpB,IAAMyf,EAAkBN,EAASrQ,MAAK,SAAA3J,GAAC,OAAIA,EAAEhC,GAAG7E,aAAe0B,EAAM0f,OAAOtgB,SACxEqgB,IACFxE,EAAWwE,GACX1D,EAAed,WAAWwE,KAQxB,SAMGN,EAAS1Z,KAAI,SAAAN,GACZ,OACE,eAACwa,GAAA,EAAD,CAAgCvgB,MAAO+F,EAAEhC,GAAG7E,WAA5C,SAAyD6G,EAAEhG,MAA5CgG,EAAEhC,GAAG7E,oBAM5B,gCCrCAsb,GAAO3D,YAAO,MAAPA,EACX,cAAGM,MAAH,+BAIIsD,GAAkB5D,YAAOkD,KAAPlD,EACtB,cAAGM,MAAH,gEAKWqJ,GAAmB,SAACzJ,GAC/B,IAeyBnZ,EAfnBwV,EAAU8I,KAD8B,EAEZX,IAAMlD,UAAS,GAFH,oBAEvCoI,EAFuC,KAE5BC,EAF4B,KAoB9C,OACE,eAAC,GAAD,UACE,eAAC/F,GAAA,EAAD,CAAQC,SAAS,SAASlD,MAAM,UAAhC,SACE,gBAACmD,GAAA,EAAD,WACE,sBAAK8F,IAAK,mBAAoBC,IAAI,OAAOC,MAAM,OAC/C,eAAC,GAAD,CAAiB7G,QAAQ,KAAzB,SACGzW,IAAgBC,WAEnB,eAAC,GAAD,IACC4P,EAAQlW,QACP,uCACE,eAAC0Z,GAAD,CAAkBuC,GAAE,6BAAW/B,KAAeC,SAAY,CAAEY,SAAU,SAAY4B,MAAOzG,EAAQlW,QAAS4c,UAAU,SAAShC,OAAK,EAAlI,SACE,eAACuC,GAAA,EAAD,CAAMlB,GAAI,CAAEzB,MAAO,QAAS,kBAAmB,CAAEA,MAAO,UAAaoJ,KAAM,eAAC,KAAD,IAAuBxG,OAhBvF1c,EAgB8GwV,EAAQlW,QAftI8I,IAAW+a,0BAA0BnjB,EAAS,GAAI,IAe8Foc,QAAQ,eAErJ,eAACgH,GAAA,EAAD,CAAQtJ,MAAM,UAAUuJ,QA1BV,WACxB7N,EAAQyJ,UAyBE,uBAKF,uCACE,eAACmE,GAAA,EAAD,CAAQtJ,MAAM,UAAUuJ,QApCX,WACvBP,GAAa,IAmCH,mBAGA,eAAC,GAAD,CAAa1B,KAAMyB,EAAWxB,QAASyB,EAAc3B,QA/BxC,WACvB2B,GAAa,iB,oBCtBJQ,GAAyB,SAACnK,GAAkB,IAAD,IAClDW,EAAQ,UACRJ,EAAkB,2BAEtB,OAAQP,EAAMpX,MACZ,IAAK,UACH+X,EAAQ,UACRJ,EAAkB,uBAUtB,OAJIP,EAAMza,OACRyK,QAAQsW,IAAIrX,IAAWG,aAAa4Q,EAAMza,QAI1C,eAAC6kB,GAAA,EAAD,UACE,eAACjI,GAAA,EAAD,CAAKC,GAAI,CACPzB,MAAK,UAAEX,EAAMW,aAAR,QAAiBA,EACtBJ,gBAAe,UAAEP,EAAMO,uBAAR,QAA2BA,EAC1C8J,QAAS,OACT3B,UAAW,UAJb,SAME,eAAC1F,GAAA,EAAD,UAAahD,EAAM7Q,e,4DC/Bdmb,GAAuB,WAAO,IAcnBC,EAdkB,EACZjJ,mBAA2BvT,KADf,oBACjCyc,EADiC,KACzBC,EADyB,KAElC/I,EAAU9b,cAEV8kB,EAAY,SAACC,EAA6BC,GAC9ClJ,EAAQmJ,4BAA4BF,EAAWC,IAe3CE,EAAsB,SAACP,GAAD,OAAkC,SAAC1gB,GAC7D,IAAM+gB,EAAS,2BAAQJ,GAAR,mBAAiBD,EAAO1gB,EAAM0f,OAAOwB,UACpDN,EAAUG,GACVF,EAAUF,EAAQI,KAGpB,OACE,eAACrI,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASP,GAAI,CAAE4I,GAAI,GAAtE,SACE,eAACzI,GAAA,EAAD,CAAMM,MAAI,EAACoI,GAAI,GAAIC,GAAI,GAAvB,SACE,gBAAC3I,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAMM,MAAI,EAACoI,IAAE,EAAC7I,GAAI,CAAEgB,GAAI,GAAxB,SACE,eAAC+H,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAO3I,UAAU,MAAME,WAAW,SAASC,QAAS,EAApD,UACE,eAACyI,GAAA,EAAD,CAAkBC,QAAS,eAACC,GAAA,EAAD,CACzBR,QAASP,EAAOxc,WAChBqb,SAAUyB,EAAoB,gBAAmBvH,MAAM,gBACzD,gBAAC6H,GAAA,EAAD,CAAO3I,UAAU,MAAME,WAAW,SAAlC,UACE,eAACK,GAAA,EAAD,oBACA,eAACwI,GAAA,EAAD,CAAQT,QAASP,EAAOvc,SAAUob,SAAUyB,EAAoB,cAChE,eAAC9H,GAAA,EAAD,6BAKR,eAACT,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAACsI,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAO3I,UAAU,MAAME,WAAW,SAASC,QAAS,EAApD,UACE,gBAACiG,GAAA,EAAD,CAAarF,KAAK,QAAQpB,GAAI,CAAEqJ,SAAU,SAA1C,UACE,eAACvC,GAAA,EAAD,CAAYlc,GAAG,sBAAf,qBACA,eAACmc,GAAA,EAAD,CACEC,QAAQ,sBACRpc,GAAG,gBACH/D,MAAOuhB,EAAOtc,OACdqV,MAAM,UACN8F,SA9CS,SAACxf,GAC1B,IAAM+gB,EAAS,2BAAQJ,GAAR,IAAgBtc,OAAQrE,EAAM0f,OAAOtgB,QACpDwhB,EAAUG,GACVF,EAAUF,EAAQI,IAsCJ,SAOG9c,IAAcwB,KAAI,SAAAN,GAAC,OAClB,gBAACwa,GAAA,EAAD,CAAuBvgB,MAAO+F,EAAEpG,KAAhC,UAAuCoG,EAAEhG,KAAzC,SAAegG,EAAEpG,cAIvB,eAAC8iB,GAAA,EAAD,CACE1e,GAAG,SACH/D,MAAOuhB,EAAOpc,OACdmV,MAAM,SACNN,QAAQ,WACRO,KAAK,QACLmI,aAAa,MACbtC,UAtDMkB,EAsDiB,SAtDgB,SAAC1gB,GACtD,IAAM+gB,EAAS,2BAAQJ,GAAR,mBAAiBD,EAAO1gB,EAAM0f,OAAOtgB,QACpDwhB,EAAUG,GACVF,EAAUF,EAAQI,sB,mBCHhBgB,GAAU,IAlBhB,WAGE,aAAe,yBAFEC,UAEH,EACZlmB,KAAKkmB,KAAO,IAAIrb,IAJpB,0CAOE,SAAOsB,GACL,IAAMC,EAAO,OAAGD,QAAH,IAAGA,IAAUE,UAAUC,SAChC7B,EAAOzK,KAAKkmB,KAAKnb,IAAIqB,GAKzB,OAJK3B,IACHA,EAAO,IAAIyB,EAAWE,GACtBpM,KAAKkmB,KAAKrW,IAAIzD,EAAS3B,IAElBA,MAdX,MAoBa0b,GAAmB,WAC9B,OAAOF,IClBaG,GAAtB,gGACE,SAAmBrM,EAA0BlI,GAC3C,IAAKA,EACH,OAAOA,EAET,IAAMtF,EAAS4Z,KAAmB5mB,SAJ+C,EAKhD8mB,qBAAUxU,GAAO,SAACjE,GAAD,OAAUA,EAAKC,cAAgB,GAAKtB,EAAOxB,MAAM4B,QAAUiB,EAAKC,gBALjC,oBAK1EyY,EAL0E,KAK7DC,EAL6D,KAM7EC,EAAmBD,EAGnBC,EAFAzM,EAAOzR,SACLyR,EAAO1R,WACEke,EAAUxM,QAAO,SAAA1Q,GAAC,QAAMA,EAAEuJ,UAAYvJ,EAAEuJ,SAAShC,eAAe+C,GAAG,MAEnE4S,EAGTxM,EAAO1R,WACEie,EAAYvM,QAAO,SAAA1Q,GAAC,QAAMA,EAAEuJ,UAAYvJ,EAAEuJ,SAAShC,eAAe+C,GAAG,MAErE2S,EAGf,IAAMG,EAASL,EAAWM,UAAU3M,EAAOxR,OAAQie,GACnD,OAAOJ,EAAWO,YAAY5M,EAAOtR,OAAQge,KAtBjD,uBAyBE,SAAiBle,EAAgBsJ,GAC/B,IAAKA,IAAUtJ,EACb,OAAOsJ,EAET,OAAQtJ,GACN,KAAKJ,IAAc1B,KAAamgB,KAAK3jB,KACnC,OAAO4jB,mBACLhV,GACA,SAACjE,GAAD,mCAAgBA,EAAKe,WAArB,aAAgB,EAAUY,kBAA1B,QAAwC,IACxC,QAEJ,KAAKpH,IAAc1B,KAAaqgB,cAAc7jB,KAC5C,OAAO4jB,mBACLhV,GACA,SAACjE,GAAD,OAAgBA,EAAKmB,YAAYQ,aACjC,QAEJ,KAAKpH,IAAc1B,KAAa+B,SAASvF,KACzC,QACE,OAAO4O,KA5Cf,yBAgDE,SAAmBkV,EAAclV,GAC/B,IAAKA,IAAUkV,EACb,OAAOlV,EAET,IAAMmV,EAAgBD,EAAK/b,cAC3B,OAAO6G,EAAMkI,QAAO,SAACnM,GAAD,OAClBA,EAAKQ,YAAYrG,eAAeiD,cAAcgP,SAASgN,IAAkBpZ,EAAKM,aAAanG,eAAeiD,cAAcgP,SAASgN,UAtDvI,K,4FCWM5oB,GAASC,cA6FT4oB,GAAU,IA3FhB,WAKE,aAAe,yBAJEC,aAIH,OAHGnoB,oBAGH,OAFGuO,aAEH,EACZtN,KAAKknB,QAAU1N,KACfxZ,KAAKjB,eAAiBmB,cACtBF,KAAKsN,QAAU6Y,KAAmB5mB,SARtC,mFAWE,WAAeiT,GAAf,mCAAArT,EAAA,6DAA4BgoB,EAA5B,+BAAwD,eAAxD,kBAE4BnnB,KAAKknB,QAAQE,MAAiC,CACpEA,MAAOhP,GACPiP,UAAW,CACThgB,GAAImL,EAAIhQ,YAEV8kB,YAAaH,IAPnB,cAEUI,EAFV,gBASgCvnB,KAAKknB,QAAQE,MAAiD,CACxFA,MAAO9O,GACP+O,UAAW,CACT1W,OAAQ6B,EACRhS,QAAO,UAAER,KAAKjB,eAAe2O,0BAAtB,aAAE,EAAwCxM,SAEnDomB,YAAaH,IAfnB,cASUK,EATV,OAiBU5Z,EAAO2Z,EAAUrlB,KAAK0L,KAjBhC,6CAmBSA,GAnBT,IAoBMgF,SAAU4U,EAActlB,KAAKwW,aAC7BjI,eAAgBzQ,KAAKsN,QAAQvC,MAAM4B,UArBzC,kCAwBIvO,GAAOwB,MAAP,KAAAxB,GAxBJ,0DAXF,wHAuCE,WAAmBoU,EAAae,EAAkBC,GAAlD,mBAAArU,EAAA,sEACuBa,KAAKknB,QAAQO,OAAkC,CAClEC,SAAU1Q,GACVqQ,UAAW,CACThgB,GAAImL,EAAIhQ,WACR5B,QAAS2S,EACT1S,OAAQ2S,KANd,cACQ9R,EADR,yBASSsH,QAAO,oBAACtH,EAAOQ,YAAR,aAAC,EAAakV,eAAd,WAThB,gDAvCF,6HAmDE,WAAoB5E,EAAagB,GAAjC,mBAAArU,EAAA,sEACuBa,KAAKknB,QAAQO,OAAoC,CACpEC,SAAUxQ,GACVmQ,UAAW,CACThgB,GAAImL,EAAIhQ,WACR3B,OAAQ2S,KALd,cACQ9R,EADR,yBAQSsH,QAAO,oBAACtH,EAAOQ,YAAR,aAAC,EAAasV,gBAAd,WARhB,gDAnDF,2FA8DE,SAAqB5J,EAAmBqF,GACtC,KAAI,OAACrF,QAAD,IAACA,OAAD,EAACA,EAAMgF,UACT,OAAO,EAGT,IAAMM,EAAcD,EAAY0U,GAAG/Z,EAAKI,UAAYiF,EAAcrF,EAAKI,SAIvE,GAAIkF,EAAYhE,IAAItB,EAAKG,mBACvB,OAAO,EAIT,GAAIH,EAAKmB,YAAYoE,GAAG,IAAI1H,IAAU,IAEpC,OADAmC,EAAKG,kBAAoBmF,GAClB,EAIT,IAAME,EAASF,EAAY3E,MAAMX,EAAKG,mBAChCsF,EAAezF,EAAK0C,gBAAgB1B,MAAMwE,GAAQxE,MAAM/H,IAAgBM,eAAemM,IAAI1F,EAAKmB,aAItG,OAHAnB,EAAK2C,eAAiB3C,EAAK2C,eAAeoB,KAAK0B,GAE/CzF,EAAKG,kBAAoBmF,GAClB,MAvFX,MA6Fa0U,GAAiB,WAC5B,OAAOX,IC5GaY,GAAtB,0GACE,SAA6Bja,GAC3B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMgF,UAGHhF,EAAKgF,SAAShC,eAAehC,MAAMhB,EAAK2C,gBAAgB+C,IAAIzM,IAAgBM,eAAeoH,MAAMX,EAAKgF,SAAS/B,YAF9G,IAAIpF,IAAU,KAH3B,6BAQE,SAAuBqc,EAAepY,EAAuB1H,GAC3D,OAAO8f,EAAGxU,IAAI,IAAI7H,IAAU,IAAIoK,IAAInG,IAAgBqY,cAAc/f,EAAUyD,IAAUuc,YAAYC,eATtG,K,UCUaC,GAAmC,SAAC7N,GAAkB,IAAD,QAC5BwE,IAAMlD,UAAS,GADa,oBACzDwM,EADyD,KAC7CC,EAD6C,KAG1DC,EAAW,uCAAG,sBAAAlpB,EAAA,6DAClBipB,GAAc,GADI,kBAGV/N,EAAMpG,aAHI,sDAKhB5J,QAAQsW,IAAR,MALgB,OAOlByH,GAAc,GAPI,yDAAH,qDAUjB,OACE,eAACE,GAAA,EAAD,CACEC,QAASJ,EACTtK,KAAI,UAAExD,EAAMwD,YAAR,QAAgB,QACpBP,QAAO,UAAEjD,EAAMiD,eAAR,QAAmB,YAC1BtC,MAAK,UAAEX,EAAMW,aAAR,QAAiB,UACtBwN,UAAWnO,EAAMmO,UACjBjE,QAAS8D,EACTI,SAAUpO,EAAMoO,SAPlB,SASGpO,EAAMkE,YC1BAmK,GAAiC,SAACrO,GAAkB,IAAD,EAC1BsB,oBAAkB,GADQ,oBACvDgN,EADuD,KAC3CC,EAD2C,OAEhBjN,mBAAoB,IAAIlQ,IAAU,IAFlB,oBAEvDod,EAFuD,KAEtCC,EAFsC,OAG5BnN,mBAAiB,IAHW,oBAGvDoN,EAHuD,KAG5CC,EAH4C,KAIxDzc,EAAS0c,mBAAQ,kBAAM9C,KAAmB5mB,WAAU,IACpD0gB,EAAiBhG,KAqCvB,OAnCA+B,qBAAU,WACR,IAAIlW,EAAW4L,aAAY,WAAO,IAAD,EACzB3M,EAASkb,EAAeiJ,cAC9B,aAAI7O,EAAMzM,YAAV,aAAI,EAAYI,SAAU,CACxB,IAAI6a,EAAkB,IAAIpd,IAAU,GAQpC,GAPI1G,EAAOmK,IAAImL,EAAMzM,KAAKY,aACxBoa,GAAc,GACdC,EAAkBxO,EAAMzM,KAAKY,WAAWD,MAAMxJ,KAE9C6jB,GAAc,GACdC,EAAkBxO,EAAMzM,KAAKI,SAASO,MAAMxJ,IAE1C8jB,EAAgBM,IAAI,GAAI,CAC1BL,EAAmBD,GACnB,IAAMpc,EAAWF,EAAO6c,YAAYP,EAAgBtZ,YAChD9C,EAAS4c,OAAS,EACpBL,EAAavc,EAAS4c,OAAS,SAAW5c,EAAS6c,QAAU,UACpD7c,EAAS6c,QAAU,EAC5BN,EAAavc,EAAS6c,QAAU,UAAY7c,EAAS8c,UAAY,YACxD9c,EAAS8c,UAAY,EAC9BP,EAAavc,EAAS8c,UAAY,YAAc9c,EAASD,UAAY,YAErEwc,EAAavc,EAASD,UAAY,iBAGpCsc,EAAmB,IAAIrd,IAAU,IACjCud,EAAa,OAGhB,KACH,OAAO,WACL1W,cAAcxM,MAEf,CAACuU,EAAMzM,KAAMrB,EAAQ0T,IAGtB,uCACE,eAAC5C,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,SACG2N,EAAa,UAAY,cAE1BtO,EAAMzM,KAGN,qCACGib,EAAgBlV,GAAG,GAClB,gBAAC0J,GAAA,EAAD,CAAYC,QAAQ,YAApB,UACGuL,EAAgBrmB,WADnB,UAEE,eAAC6a,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAiBwC,QAAQ,SAASf,GAAI,CAAE+M,GAAI,GAA9E,SACGT,OAIL,eAAC1L,GAAA,EAAD,CAAYC,QAAQ,YAApB,iBAXJ,eAACmM,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,a,8BC5CxCwF,GAAqC,SAACtP,GAAkB,IAAD,EACtCsB,mBAAiB,IADqB,oBAC3D9a,EAD2D,KACnD+oB,EADmD,OAElCjO,oBAAkB,GAFgB,oBAE3D8M,EAF2D,KAEjDoB,EAFiD,KAG5DC,EAAclC,KAEdmC,EAAe,SAAClpB,GACpB+oB,EAAU/oB,GACVgpB,EAAYvgB,IAAWyJ,mBAAmBlS,IAAW,IAAI4K,YAAU5K,GAAQqO,IAAI,KAGjF8M,qBAAU,WACJ3B,EAAM2P,MAAM1H,MACdyH,EAAa,MAEd,CAAC1P,EAAM2P,QAEV,IAAMC,EAAc,WAClB5P,EAAM6P,SAAN,2BACK7P,EAAM2P,OADX,IAEE1H,MAAM,MAQJ6H,EAAkB,uCAAG,4BAAAhrB,EAAA,sEAEjBqU,EAAU,IAAI/H,YAAU5K,GAAQ+N,MAAM,IAAInD,YAAU,IAAIoK,IAAIwE,EAAMzM,KAAKM,aAAalG,WAFnE,SAGjB8hB,EAAYvS,aAAa8C,EAAMzM,KAAKvG,GAAIgT,EAAMzM,KAAKM,aAAa7G,GAAImM,EAAQhR,YAH3D,OAIvBynB,IAJuB,gDAMvBpJ,GAAauJ,aAAb,MANuB,yDAAH,qDAUxB,OACE,gBAAC1H,GAAA,EAAD,CAAQL,QAAS4H,EAAa3H,KAAMjI,EAAM2P,MAAM1H,KAAM/G,SAAS,KAAKiN,WAAS,EAA7E,UACE,eAAC7F,GAAA,EAAD,oBACA,gBAACC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,mBACQxI,EAAMzM,KAAKQ,YAAYrG,eAD/B,eAC2DsS,EAAMzM,KAAKM,aAAanG,kBAEnF,gBAACmb,GAAA,EAAD,CAAasF,WAAS,EAAC/L,GAAI,CAAEqG,GAAI,GAAKxF,QAAQ,WAA9C,UACE,eAACiG,GAAA,EAAD,CAAY8G,QAAQ,oBAApB,oBACA,eAACC,GAAA,EAAD,CACEjjB,GAAG,oBACH/D,MAAOzC,EACP6iB,SA1BW,SAACxf,GACpB6lB,EAAa7lB,EAAM0f,OAAOtgB,QA0BlBL,KAAK,SACLsnB,WAAS,EACTC,eAAgB,gBAACC,GAAA,EAAD,CAAgBvM,SAAS,QAAzB,cAAmC7D,EAAMzM,KAAKM,aAAapG,kBAIjF,gBAAC4iB,GAAA,EAAD,WACE,eAACpG,GAAA,EAAD,CAAQC,QAAS0F,EAAjB,oBACA,eAAC,GAAD,CAAiBpM,KAAK,SAAS7C,MAAM,UAAU/G,WAAYkW,EAAoB1B,SAAUA,EAAzF,4BChEFrqB,GAASC,cAiCT4oB,GAAU,IA/BhB,WAIE,aAAe,yBAHEC,aAGH,OAFGnoB,oBAEH,EACZiB,KAAKknB,QAAU1N,KACfxZ,KAAKjB,eAAiBmB,cAN1B,0FASE,WAAsBqS,GAAtB,mCAAApT,EAAA,yDAAgDgoB,EAAhD,+BAA4E,eAA5E,UAEU3mB,EAFV,OAEoB+R,QAFpB,IAEoBA,IAFpB,UAEgCvS,KAAKjB,eAAe2O,0BAFpD,aAEgC,EAAwCxM,WACpDoI,IAAWyJ,mBAAmBvS,GAHlD,yCAIa,IAAIiL,IAAU,IAJ3B,uBAM4BzL,KAAKknB,QAAQE,MAAqD,CACxFA,MAAO1P,GACP2P,UAAW,CACT7mB,WAEF8mB,YAAaH,IAXnB,cAMUI,EANV,OAaU3R,EAAU2R,EAAUrlB,KAAK0V,eAbnC,kBAcWhC,GAdX,yCAgBIxX,GAAOwB,MAAP,KAAAxB,GAhBJ,kBAiBW,IAAIqN,IAAU,IAjBzB,0DATF,+DCCMrN,GAASC,cAQFssB,GAAsC,SAACtQ,GAClD,IAAMuQ,EAAkBxK,uBAAY,WAAO,IAAD,EACxC,iBAAI/F,EAAMzM,KAAKgF,gBAAf,aAAI,EAAqBhC,eAAe+C,GAAG,IAClCkU,GAASgD,gBAAgBxQ,EAAMzM,KAAKgF,SAAShC,eAAgByJ,EAAMzM,KAAKM,aAAalG,SAAU,IAEjG,KACN,CAACqS,EAAMzM,OANyD,EAQvC+N,mBAAiBiP,KARsB,oBAQ5D/pB,EAR4D,KAQpD+oB,EARoD,OASnCjO,oBAAkB,GATiB,oBAS5D8M,EAT4D,KASlDoB,EATkD,KAU7DiB,EDeC7D,GCdD6C,EAAclC,KAEdmC,EAAe,SAAClpB,GACpB+oB,EAAU/oB,GACVgpB,EAAYvgB,IAAWyJ,mBAAmBlS,IAAW,IAAI4K,IAAU5K,GAAQqO,IAAI,KAGjF8M,qBAAU,WACJ3B,EAAM2P,MAAM1H,MACdyH,EAAaa,OAEd,CAACvQ,EAAM2P,MAAOY,IAEjB5O,qBAAU,WAAM,4CACd,4BAAA7c,EAAA,sEACwB2rB,EAAeC,kBADvC,OACQnV,EADR,OAEExX,GAAO0B,KAAK,mBAAoB8V,EAAQpT,WAAxCpE,GAFF,4CADc,sBAKVic,EAAM2P,MAAM1H,MALD,WAAD,wBAMZyI,KAED,CAAC1Q,EAAM2P,MAAOc,IAEjB,IAAMb,EAAc,WAClB5P,EAAM6P,SAAN,2BACK7P,EAAM2P,OADX,IAEE1H,MAAM,MAQJ6H,EAAkB,uCAAG,4BAAAhrB,EAAA,sEAEjBqU,EAAU,IAAI/H,IAAU5K,GAAQ+N,MAAM,IAAInD,IAAU,IAAIoK,IAAIwE,EAAMzM,KAAKM,aAAalG,WAFnE,SAGjB8hB,EAAYrS,cAAc4C,EAAMzM,KAAKvG,GAAImM,EAAQhR,YAHhC,OAIvBynB,IAJuB,gDAMvBpJ,GAAauJ,aAAb,MANuB,yDAAH,qDAUxB,OACE,gBAAC1H,GAAA,EAAD,CAAQL,QAAS4H,EAAa3H,KAAMjI,EAAM2P,MAAM1H,KAAM/G,SAAS,KAAKiN,WAAS,EAA7E,UACE,eAAC7F,GAAA,EAAD,uBACA,gBAACC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,wBACaxI,EAAMzM,KAAKM,aAAanG,eADrC,0BAGA,gBAACmb,GAAA,EAAD,CAAasF,WAAS,EAAC/L,GAAI,CAAEqG,GAAI,GAAKxF,QAAQ,WAA9C,UACE,eAACiG,GAAA,EAAD,CAAY8G,QAAQ,oBAApB,oBACA,eAACC,GAAA,EAAD,CACEjjB,GAAG,oBACH/D,MAAOzC,EACP6iB,SA1BW,SAACxf,GACpB6lB,EAAa7lB,EAAM0f,OAAOtgB,QA0BlBL,KAAK,SACLsnB,WAAS,EACTC,eAAgB,gBAACC,GAAA,EAAD,CAAgBvM,SAAS,QAAzB,cAAmC7D,EAAMzM,KAAKM,aAAapG,kBAIjF,gBAAC4iB,GAAA,EAAD,WACE,eAACpG,GAAA,EAAD,CAAQC,QAAS0F,EAAjB,oBACA,eAAC,GAAD,CAAiBpM,KAAK,SAAS7C,MAAM,UAAU/G,WAAYkW,EAAoB1B,SAAUA,EAAzF,4BCrFKuC,GAA8B,SAAC3Q,GAC1C,OAAQA,EAAM2P,MAAM/mB,MAClB,KAAKyD,KAAeukB,SAClB,OAAO,eAAC,GAAD,CAAoBrd,KAAMyM,EAAMzM,KAAMoc,MAAO3P,EAAM2P,MAAOE,SAAU7P,EAAM6P,WACnF,KAAKxjB,KAAewkB,QAClB,OAAO,eAAC,GAAD,CAAmBtd,KAAMyM,EAAMzM,KAAMoc,MAAO3P,EAAM2P,MAAOE,SAAU7P,EAAM6P,WAClF,QACE,OAAO,iCCJAiB,GAA2B,SAAC9Q,GAAkB,IAAD,EAChCsB,mBAAsBtB,EAAMzM,MADI,oBACjDA,EADiD,KAC3Cwd,EAD2C,OAEhBzP,mBAAoB,IAAIlQ,IAAU,IAFlB,oBAEjD4f,EAFiD,KAEnCC,EAFmC,KAGlDxB,EAAclC,KACd3H,EAAiBhG,KAEvB+B,qBAAU,WACRoP,EAAQ/Q,EAAMzM,QACb,CAACyM,EAAMzM,OAEVoO,qBAAU,WACR,GAAIpO,EAAM,CACR,IAAM2d,EAAkB1D,GAAS2D,sBAAsB5d,GACvD0d,EAAgBC,GACZlR,EAAMoR,aACRpR,EAAMoR,cAAcpR,EAAMzM,QAAUyM,EAAM7Z,SAAW+qB,EAAgB5X,GAAG,SAG1E2X,EAAgB,IAAI7f,IAAU,IAC1B4O,EAAMoR,aACRpR,EAAMoR,aAAY,KAGrB,CAAC7d,EAAMyM,IAEV2B,qBAAU,WACR,GAAIpO,EAAM,CACR,IAAM2d,EAAkB1D,GAAS2D,sBAAsB5d,GACvD0d,EAAgBC,GACZlR,EAAMoR,aACRpR,EAAMoR,cAAcpR,EAAMzM,QAAUyM,EAAM7Z,SAAW+qB,EAAgB5X,GAAG,SAG1E2X,EAAgB,IAAI7f,IAAU,IAC1B4O,EAAMoR,aACRpR,EAAMoR,aAAY,KAGrB,CAAC7d,EAAMyM,IAEV2B,qBAAU,WACR,IAAIlW,EAAW4L,aAAY,WACzB,IAAM3M,EAASkb,EAAeiJ,cAC9B,GAAItb,GACckc,EAAY4B,qBAAqB9d,EAAM7I,GAC1C,CACX,IAAM4mB,EAAa,eACd/d,GAELwd,EAAQO,MAGX,KACH,OAAO,WACLrZ,cAAcxM,MAEf,CAAC8H,EAAMkc,EAAa7J,IAEvB,IAA0BjY,EAO1B,OACE,sCARwBA,EASJqS,EAAMrS,SARrB4F,EAGEia,GAASgD,gBAAgBQ,EAAczd,EAAKQ,YAAYpG,SAAUA,GAFhE,Q,oBChEA4jB,GAA0B,SAACvR,GAAkB,IAAD,YACjDwR,EAAU1R,YAAO2R,KAAP3R,EAAe,cAAGM,MAAH,MAAgB,CAC7C0J,MAAO,GACPpf,OAAQ,GACR6V,gBAAiB,QACjBc,OAAQ,sBAEJqQ,EAAY5R,YAAO2R,KAAP3R,EAAe,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC/C0J,MAAO,GACPpf,OAAQ,GACR6V,gBAAiB,QACjBc,OAAO,aAAD,OAAejB,EAAMI,QAAQmR,KAAK,UAEpCC,EAAWhhB,IAEjB,OACE,gBAAC2R,GAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASC,QAAS,EAA7C,UACE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAACgP,GAAA,EAAD,CACEC,QAAQ,WACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,aACE,eAACR,EAAD,CAAW7H,IAAG,UAAE7J,EAAMzM,YAAR,aAAE,EAAYM,aAAanG,eAAgBkc,IAAKgI,EAASO,WAAT,UAAoBnS,EAAMzM,YAA1B,aAAoB,EAAYM,aAAajG,WAJ/G,SAOE,eAAC4jB,EAAD,CAAS3H,IAAG,UAAE7J,EAAMzM,YAAR,aAAE,EAAYQ,YAAYrG,eAAgBkc,IAAKgI,EAASO,WAAT,UAAoBnS,EAAMzM,YAA1B,aAAoB,EAAYQ,YAAYnG,eAG3G,eAAC2U,GAAA,EAAD,CAAMM,MAAI,EAAV,SACG7C,EAAMkO,QACL,uCACE,eAACkB,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,SAC7C,eAACsF,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,YAG/C,uCACE,gBAAC9G,GAAA,EAAD,CAAYC,QAAQ,YAApB,4BACQjD,EAAMzM,YADd,aACQ,EAAYQ,YAAYrG,kBAEhC,gBAACsV,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,6BACSX,EAAMzM,YADf,aACS,EAAYM,aAAanG,2BCjCxC3J,GAASC,cAETouB,GAAmBtS,YAAOsK,KAAPtK,EACvB,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACdiK,QAASjK,EAAMwC,QAAQ,GACvByP,WAAYjS,EAAMwC,QAAQ,GAC1BrC,gBAAiB,kBAQR+R,GAAgC,SAACtS,GAAkB,IAAD,kBACvBsB,mBAA0B,CAC9D1Y,KAAMyD,KAAewkB,QACrB5I,MAAM,IAHqD,oBACtDsK,EADsD,KACzCC,EADyC,OAK7BlR,oBAAkB,GALW,oBAKtDmR,EALsD,KAK5CC,EAL4C,OAM7BpR,oBAAkB,GANW,oBAMtDqR,EANsD,KAM5CvB,EAN4C,OAOvB9P,oBAAkB,GAPK,oBAOtDsR,EAPsD,KAOzCC,EAPyC,KAQvDnR,EAAU9b,cACV6pB,EAAclC,KACd3H,EAAiBhG,KAEvB+B,qBAAU,WACS,IAAD,MAAZ3B,EAAMzM,MACRxP,GAAO0B,KAAP,iCAA4Bua,EAAMzM,YAAlC,aAA4B,EAAYvG,IAAxCjJ,GACA8uB,IAAiB7S,EAAMzM,QAAUyM,EAAM7Z,SAAxB,oBAAoC6Z,EAAMzM,KAAKgF,gBAA/C,aAAoC,EAAqBhC,eAAe+C,GAAG,UAA3E,WAEfuZ,GAAe,KAEhB,CAAC7S,EAAMzM,KAAMyM,EAAM7Z,UAEtBwb,qBAAU,WACR,IAAIlW,EAAW4L,aAAY,WACzBqb,IAAc1S,EAAMzM,QAAUyM,EAAM7Z,SAAWyf,EAAeiJ,cAAcC,IAAI9O,EAAMzM,KAAKY,eAC1F,KACH,OAAO,WACL8D,cAAcxM,MAEf,CAACuU,EAAMzM,KAAMyM,EAAM7Z,QAASyf,IAE/B,IAyCMkN,EAAqB,uCAAG,sBAAAhuB,EAAA,mEAEtBkb,EAAMzM,KAFgB,gCAGlBkc,EAAYrS,cAAc4C,EAAMzM,KAAKvG,GAAI,KAHvB,sDAM1BwZ,GAAauJ,aAAb,MAN0B,wDAAH,qDAU3B,OACE,uCACE,gBAACgD,GAAA,EAAD,CAAWC,iBAAe,EAA1B,UACE,eAACC,GAAA,EAAD,CAAkB7Q,GAAI,CAAE7B,gBAAiB,4BAA8B2S,WAAY,eAAC,KAAD,IAAnF,SACE,gBAAC3Q,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAAC,GAAD,CAAQqL,SAAUlO,EAAMzM,KAAMA,KAAMyM,EAAMzM,SAE5C,eAACgP,GAAA,EAAD,CAAMM,MAAI,EAACoI,IAAE,EAACzI,WAAS,EAACG,WAAW,SAAnC,SACE,gBAACJ,GAAA,EAAD,CAAMM,MAAI,EAACoI,IAAE,EAACzI,WAAS,EAACE,eAAe,eAAeD,UAAU,MAAMG,QAAS,EAA/E,UACE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAAV,SACI7C,EAAMzM,KAMN,uCACE,gBAACyP,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,oBACGX,EAAMzM,YADT,aACG,EAAYQ,YAAYrG,eAD3B,aAGA,eAACsV,GAAA,EAAD,CAAYC,QAAQ,YAApB,SACE,eAAC,GAAD,CAAS1P,KAAMyM,EAAMzM,KAAM5F,SAAU,SAVzC,uCACE,eAACyhB,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,SAC7C,eAACsF,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,cAanD,gBAACvH,GAAA,EAAD,CAAMM,MAAI,EAAV,UACE,eAACG,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,iBAGEX,EAAMzM,KAGN,eAACyP,GAAA,EAAD,CAAYC,QAAQ,YAApB,SACGjD,EAAMzM,KAAKe,IACV,uCAtFf0L,EAAMzM,MAASyM,EAAMzM,KAAKe,IAGxB0L,EAAMzM,KAAKe,IAAIsZ,SAAS,GAFtB,IAqFW,OAIA,6CARJ,eAACwB,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,YAejD,gBAACvH,GAAA,EAAD,CAAMM,MAAI,EAAV,UACE,eAACG,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,0BAGEX,EAAMzM,KAGN,eAACyP,GAAA,EAAD,CAAYC,QAAQ,YAApB,SAjGXjD,EAAMzM,KAGJia,GAASgD,gBAAgBxQ,EAAMzM,KAAKmB,YAAasL,EAAMzM,KAAKM,aAAalG,SAAU,GAFjF,MA8FO,eAACyhB,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,aAOjD,eAACvH,GAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAAC,GAAD,CAAetP,KAAMyM,EAAMzM,mBAMrC,eAAC4f,GAAA,EAAD,CAAkB/Q,GAAI,CAAE7B,gBAAiB,2BAA4B6S,GAAI,GAAzE,SACE,gBAAC7Q,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,gBAACL,GAAA,EAAD,CAAMM,MAAI,EAACT,GAAI,CAAEgB,GAAI,GAArB,UACE,gBAACiQ,GAAA,EAAD,CAAMC,UAAU,OAAOC,KAAI,oBAAEvT,EAAMzM,YAAR,aAAE,EAAYQ,YAAYlG,WAA1B,QAAiC,IAAK0b,OAAO,SAASnH,GAAI,CAAEoR,OAAQ,UAAWrQ,QAAS,OAAQR,WAAY,UAAvI,4BACQ3C,EAAMzM,YADd,aACQ,EAAYQ,YAAYrG,eADhC,OACqD,eAAC,KAAD,CAAeoT,SAAS,aAE7E,gBAACuS,GAAA,EAAD,CAAMC,UAAU,OAAOC,KAAI,oBAAEvT,EAAMzM,YAAR,aAAE,EAAYM,aAAahG,WAA3B,QAAkC,IAAK0b,OAAO,SAASnH,GAAI,CAAEoR,OAAQ,UAAWrQ,QAAS,OAAQR,WAAY,UAAxI,4BACQ3C,EAAMzM,YADd,aACQ,EAAYM,aAAanG,eADjC,OACsD,eAAC,KAAD,CAAeoT,SAAS,gBAGhF,eAACyB,GAAA,EAAD,CAAMM,MAAI,EAACoI,IAAE,EAACzI,WAAS,EAACG,WAAW,SAAnC,SACE,gBAACJ,GAAA,EAAD,CAAMM,MAAI,EAACL,WAAS,EAACE,eAAe,eAAeD,UAAU,MAAMG,QAAS,EAA5E,UACE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAACoI,GAAI,GAAIC,GAAI,EAAGuI,GAAI,EAAGC,cAAY,EAA7C,SACE,gBAACtB,GAAD,CAAkBnP,QAAQ,WAA1B,UACE,gBAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,oBACGX,EAAMzM,YADT,aACG,EAAYQ,YAAYrG,eAD3B,aAGA,gBAACyU,GAAA,EAAD,CAAKC,GAAI,CAAEe,QAAS,OAAQR,WAAY,UAAxC,UACI3C,EAAMzM,KAGN,eAACyP,GAAA,EAAD,CAAYZ,GAAI,CAAE0H,MAAO,QAAU6J,QAAM,EAAzC,SACE,eAAC,GAAD,CAASpgB,KAAMyM,EAAMzM,KAAM5F,SAAU,GAAIxH,QAAS6Z,EAAM7Z,QAASirB,YAAaA,MAHhF,eAAChC,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,SAM/C,eAAC3H,GAAA,EAAD,CAAKC,GAAI,CAAE+M,GAAI,GAAf,SACE,eAAC,GAAD,CAAiBlM,QAAQ,YAAYO,KAAK,QAAQ5J,WAAYkZ,EAAuB1E,UAAWuE,EAAhG,6BAON3S,EAAM7Z,QAUN,uCACE,eAACoc,GAAA,EAAD,CAAMM,MAAI,EAACoI,GAAI,GAAIC,GAAI,EAAGuI,GAAI,EAAGC,cAAY,EAA7C,SACE,gBAACtB,GAAD,CAAkBnP,QAAQ,WAA1B,UACE,eAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,oBAGA,gBAACwB,GAAA,EAAD,CAAKC,GAAI,CAAEe,QAAS,OAAQR,WAAY,UAAxC,UACI3C,EAAMzM,KAGN,eAACyP,GAAA,EAAD,CAAYZ,GAAI,CAAE0H,MAAO,QAAU6J,QAAM,EAAzC,SA5JP,SAAChmB,GAA8B,IAAD,EAC/C,OAAI,UAACqS,EAAMzM,YAAP,aAAC,EAAYgF,UAGViV,GAASgD,gBAAgBxQ,EAAMzM,KAAKgF,SAAShC,eAAgByJ,EAAMzM,KAAKM,aAAalG,SAAUA,GAF7F,IA2JkBimB,CAAW,MAHd,eAACxE,GAAA,EAAD,CAAUC,UAAU,OAAO3kB,OAAQ,GAAIof,MAAM,SAM/C,eAACG,GAAA,EAAD,CAAQhH,QAAQ,YAAYO,KAAK,QAAQpB,GAAI,CAAE+M,GAAI,GAAKjF,QA7IpD,WAC1BsI,EAAe,2BACVD,GADS,IAEZ3pB,KAAMyD,KAAeukB,SACrB3I,MAAM,MAyIoGmG,UAAWwE,EAAjG,8BAMN,eAACrQ,GAAA,EAAD,CAAMM,MAAI,EAACoI,GAAI,GAAIC,IAAE,EAAC9I,GAAI,CAAEe,QAAS,OAAQR,WAAY,UAAzD,SACE,eAACsH,GAAA,EAAD,CAAQhH,QAAQ,YAAYO,KAAK,QAAQ2K,WAAS,EAACjE,QA5J5C,WACzBsI,EAAe,2BACVD,GADS,IAEZ3pB,KAAMyD,KAAewkB,QACrB5I,MAAM,MAwJ0FmG,UAAWqE,EAA3F,wBA9BJ,eAAClQ,GAAA,EAAD,CAAMM,MAAI,EAACoI,GAAI,GAAIC,GAAI,EAAGuI,GAAI,EAA9B,SACE,gBAACrB,GAAD,CAAkBnP,QAAQ,WAA1B,UACE,eAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQtC,MAAM,iBAAlC,2BAGA,eAACsJ,GAAA,EAAD,CAAQhH,QAAQ,YAAYO,KAAK,QAAQ2K,WAAS,EAACC,UAAWpO,EAAMzM,KAAM2W,QAvIlE,WAC1BxI,EAAQmS,yBAAwB,IAsId,8CAoCf7T,EAAMzM,MACL,eAAC,GAAD,CAAYA,KAAMyM,EAAMzM,KAAMoc,MAAO4C,EAAa1C,SAAU2C,QClP9DzuB,GAASC,cAOF8vB,GAA4B,SAAC9T,GAAkB,IAAD,EACvBsB,oBAAkB,GADK,oBAClDyS,EADkD,KACvCC,EADuC,OAEzB1S,mBAAwBtB,EAAMxI,OAFL,oBAElDyc,EAFkD,KAExCC,EAFwC,OAG/B5S,mBAAwBtB,EAAMxI,OAHC,oBAGlDA,EAHkD,KAG3C2c,EAH2C,OAI7B7S,mBAA2BvT,KAJE,oBAIlD2R,EAJkD,KAI1C0U,EAJ0C,KAKnD1S,EAAU9b,cACV8f,EAAgBhJ,KAwDtB,OAtDAiF,qBAAU,WACJ3B,EAAMxI,MACRwc,GAAa,GAEbA,GAAa,GAEfE,EAAYlU,EAAMxI,SACjB,CAACwI,EAAMxI,QAEVmK,qBAAU,WACRwS,EAASpI,GAAWsI,YAAY3U,EAAQuU,MACvC,CAACA,EAAUvU,IAEdiC,qBAAU,WACR,IAAMC,EAAc,SAAC+I,EAA6BC,GAChDwJ,EAAUxJ,IAGZ,OADAlJ,EAAQrc,GAAGiH,KAAYgoB,wBAAyB1S,GACzC,WACL7d,GAAO0B,KAAK,cAAe6G,KAAYgoB,wBAAvCvwB,GACA2d,EAAQQ,IAAI5V,KAAYgoB,wBAAyB1S,MAElD,CAACF,IAEJC,qBAAU,WACR,IAAM4S,EAAc,SAAChhB,GACnB,GAAI0gB,GAAY1gB,EAAM,CACpB,IAAMkE,EAAQwc,EAASO,WAAU,SAAAxlB,GAAC,OAAIA,EAAEhC,KAAOuG,EAAKvG,MACpD,GAAIyK,GAAS,EAAG,CAEd,IAAMgd,EAAY,aAAOR,GACzBQ,EAAahd,GAAb,eACKlE,GAEL2gB,EAAYO,QAGZP,EAAY,CAAC3gB,GAAF,oBAAW0gB,OAItBS,EAAe,uCAAG,WAAO1nB,EAAYxG,EAAmBL,GAAtC,eAAArB,EAAA,sEACH4gB,EAAczI,WAAWzE,aAAaxL,EAAIgT,EAAM7Z,SAD7C,OAChBoN,EADgB,OAEtBghB,EAAYhhB,GAFU,2CAAH,0DAMrB,OAFAmO,EAAQrc,GAAGiH,KAAYqoB,YAAaD,GACpChT,EAAQrc,GAAGiH,KAAYsoB,aAAcF,GAC9B,WACL3wB,GAAO0B,KAAK,cAAe6G,KAAYqoB,YAAvC5wB,GACA2d,EAAQQ,IAAI5V,KAAYqoB,YAAaD,GACrChT,EAAQQ,IAAI5V,KAAYsoB,aAAcF,MAEvC,CAAChT,EAASuS,EAAUvO,EAAe1F,EAAM7Z,WAEvC4tB,GAAavc,GAASA,EAAM9O,QAAU,EAEvC,eAAC6Z,GAAA,EAAD,CAAMM,MAAI,EAASoI,GAAI,GAAIC,GAAI,EAA/B,SACE,eAAC,GAAD,CAAO/b,QAAQ,kBAAkBvG,KAAK,aADzB,KAOjB,eAAC2Z,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArF,SACGmR,EACC,qCACG,CAAC,EAAG,EAAG,GAAGzkB,KAAI,SAACmI,GAAD,OACb,eAAC8K,GAAA,EAAD,CAAMM,MAAI,EAAaoI,GAAI,GAAIC,GAAI,GAAnC,SACE,eAAC,GAAD,KADczT,QAMpB,4CACGD,QADH,IACGA,OADH,EACGA,EAAOlI,KAAI,SAACoG,GAAD,OACV,eAAC6M,GAAA,EAAD,CAAMM,MAAI,EAAYoI,GAAI,GAAIC,GAAI,GAAlC,SACE,eAAC,GAAD,CAAc/kB,QAAS6Z,EAAM7Z,QAASoN,KAAMmC,KAD9BA,EAAE1I,YC3FjB6nB,GAAkB,WAAO,IAAD,EAC7BxY,EAAU8I,KACV+H,EAAY4H,aAAsC9W,GAAiB,CACvEgP,UAAW,CACT7mB,QAASkW,EAAQlW,SAEnB8mB,YAAa,iBAGT1nB,EAAQ2nB,EAAU3nB,MAExB,OAAIA,EAEA,eAACgd,GAAA,EAAD,CAAMM,MAAI,EAASoI,GAAI,GAAIC,GAAI,EAA/B,SACE,eAAC,GAAD,CAAO/b,QAAS5J,EAAM4J,QAASvG,KAAK,aADvB,KAOjB,eAACwb,GAAA,EAAD,CAAWhC,GAAI,CAAEgR,GAAI,EAAG2B,GAAI,GAAK7T,SAAS,KAA1C,SACE,gBAACqB,GAAA,EAAD,CAAMC,WAAS,EAACI,QAAS,EAAGF,eAAe,SAASC,WAAW,SAA/D,UACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAUxc,QAASkW,EAAQlW,QAASqR,MAAK,UAAE0V,EAAUrlB,YAAZ,aAAE,EAAgB2P,c,UC5B7Dwd,GAAaxQ,IAAMyQ,YAAW,SAClCjV,EACA8H,GAEA,OAAO,eAACoN,GAAA,EAAD,aAAOzS,UAAU,KAAKqF,IAAKA,GAAS9H,OAGhCmV,GAAqC,WAAO,IAAD,EAC9B7T,oBAAS,GADqB,oBAC/C2G,EAD+C,KACzCC,EADyC,KAEhDxG,EAAU9b,cAEhB+b,qBAAU,WACR,IAAMC,EAAc,SAACqG,GACnBC,EAAQD,IAGV,OADAvG,EAAQrc,GAAGiH,KAAY6oB,yBAA0BvT,GAC1C,WACLF,EAAQQ,IAAI5V,KAAY6oB,yBAA0BvT,MAEnD,CAACF,EAASwG,IAEb,IAAM0H,EAAc,WAClB1H,GAAQ,IAGV,OACE,gBAACG,GAAA,EAAD,CACEJ,KAAMA,EACNmN,oBAAqBJ,GACrBK,aAAW,EACXrN,QAAS4H,EACT0F,MAAO,CAAEC,OAAQ,MALnB,UAOE,eAACjN,GAAA,EAAD,0BACA,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,8DAIF,eAAC6H,GAAA,EAAD,UACE,eAACpG,GAAA,EAAD,CAAQC,QAAS0F,EAAajP,MAAM,UAApC,yBCvCK6U,GAAoB,WAC/B,IAAM5P,EAAiBhG,KACjB8B,EAAU9b,cACVmnB,EAAQ+H,aAAgCrX,GAAgC,CAC5EwP,YAAa,iBAiBf,OAdAtL,qBAAU,WACR,IAAIlW,EAAW4L,YAAW,sBAAC,8BAAAvS,EAAA,sEACnBioB,EAAM0I,UADa,QAEzB,UAAI1I,EAAMllB,YAAV,aAAI,EAAYkN,sBACRrK,EAASqiB,EAAMllB,KAAKkN,mBAC1B2M,EAAQgU,8BAA8BhrB,GACtCkb,EAAeiJ,cAAgBnkB,GALR,2CAOxB,KACH,OAAO,WACLuN,cAAcxM,OAKhB,gCClBSkqB,GAAiB,SAAC3V,GAE7B,OADAwG,GAAaC,SAAWmP,cAEtB,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,OAEF,eAAC,GAAD,QCVAC,GAAa/V,YAAO,MAAPA,CAAA,iJAKQgW,EALR,UA4BJC,GAnBO,WACpB,IAAMC,EAAexR,IAAMoK,SAAQ,kBAAMzP,OAAmB,IAG5D,OADA/N,IAAU6kB,OAAO,CAAEC,eAAgB,MAEjC,eAACL,GAAD,UACE,eAAC,IAAD,CAAkBM,SAAU,EAA5B,SACE,eAACC,EAAA,EAAD,CAAgBhyB,OAAQ4xB,EAAxB,SACE,eAAC,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,eChBCK,GAZS,SAACC,GACnBA,GAAeA,aAAuB1mB,UACxC,8BAAqB4K,MAAK,YAAkD,IAA/C+b,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,mBCUClW,GAdDwW,aAAY,CACxBpW,QAAS,CACPqW,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERvxB,MAAO,CACLuxB,KAAME,KAAIC,SCNhBC,IAASC,OACP,gBAACC,EAAA,EAAD,CAAehX,MAAOA,GAAtB,UAEE,eAACiX,EAAA,EAAD,IACA,eAAC,GAAD,OAEFC,SAASC,cAAc,UAMzBlB,M,8GCpBsBpnB,EAAtB,6FACE,SAAgBhG,GACd,MAAwB,kBAAVA,GAAsBA,aAAiBuuB,SAFzD,gCAKE,SAA0BvuB,GACxB,OAAKgG,EAAWC,SAASjG,KAGN,OAAVA,QAA4B0B,IAAV1B,GAAwC,KAAjBA,EAAM0I,UAT5D,6BAaE,SAAuB1I,EAAgBwuB,GACrC,OAAOxoB,EAAWyJ,mBAAmBzP,IAAUA,IAAUwuB,IAd7D,qBAiBE,SAAeC,GACb,OAAO,IAAI3yB,SAAQ,SAACC,GAAD,OAAa8G,WAAW9G,EAAS0yB,QAlBxD,0BAwCE,SAAoB7vB,GAClB,OAAOuC,KAAKC,UAAUxC,EAAM,KAAM,KAzCtC,mEA4CE,WAA4BgG,GAA5B,iFACgB8I,MAAM9I,GADtB,uCAC4B8pB,QAD5B,2CA5CF,2EAgDE,SAAcC,EAAaC,GACzB,OAAOC,KAAKC,MAAMD,KAAKzf,UAAYwf,EAAMD,EAAM,GAAKA,KAjDxD,oBAoDE,SAAcI,EAASC,GAErB,OAAO7tB,KAAKC,UAAU2tB,KAAQ5tB,KAAKC,UAAU4tB,OAtDjD,KAAsBhpB,EAqBbipB,eAAiB,SAACC,EAAoBvmB,GAC3C,OAAIumB,GACEvmB,EAAYumB,EAAIzvB,OACZ,GAAN,OAAUyvB,EAAIpW,OAAO,EAAGnQ,GAAxB,OAGGumB,GA3BWlpB,EA8Bb+a,0BAA4B,SAACmO,EAAoBC,EAA0BC,GAChF,GAAIF,GACyBC,EAAmBC,EACrBF,EAAIzvB,OAC3B,MAAM,GAAN,OAAUyvB,EAAIpW,OAAO,EAAGqW,GAAxB,cAA+CD,EAAIpW,OAAOoW,EAAIzvB,OAAS2vB,EAAgBF,EAAIzvB,SAG/F,OAAOyvB,I,gICGLzW,EAAU,IAxBhB,kLACE,SAA6BuG,GAC3BtiB,KAAK2yB,KAAKhsB,IAAY6oB,yBAA0BlN,KAFpD,qCAIE,SAAwBA,GACtBtiB,KAAK2yB,KAAKhsB,IAAY8b,oBAAqBH,KAL/C,2CAOE,SAA8Bvd,GAC5B/E,KAAK2yB,KAAKhsB,IAAY2V,0BAA2BvX,KARrD,yCAUE,SAA4BigB,EAA6BC,GACvDjlB,KAAK2yB,KAAKhsB,IAAYgoB,wBAAyB3J,EAAWC,KAX9D,6BAaE,SAAgB5d,EAAYxG,EAAmBL,GAC7CR,KAAK2yB,KAAKhsB,IAAYqoB,YAAa3nB,EAAIxG,EAAQL,KAdnD,8BAgBE,SAAiB6G,EAAYxG,EAAmBL,GAC9CR,KAAK2yB,KAAKhsB,IAAYsoB,aAAc5nB,EAAIxG,EAAQL,KAjBpD,4BAmBE,SAAeoN,GACb5N,KAAK2yB,KAAKhsB,IAAYisB,WAAYhlB,OApBtC,GAAmCilB,MA0BtB5yB,EAAa,WACxB,OAAO8b,I,oTC3CG+W,E,4GAAAA,K,UAAAA,E,mBAAAA,M,KAKL,IAqFKC,EArFUC,EAAtB,WAME,WAAY/vB,EAAkB0F,GAA4B,yBALzCsqB,WAKwC,OAHzDzS,YAGyD,OAFzD0S,SAAgB,GAGdlzB,KAAKizB,MAAQhwB,EACbjD,KAAKmzB,aAAaxqB,GARtB,sCAwBE,WACE,OAAO3I,KAAKizB,QAzBhB,0BA8BE,SAAqB/wB,GAAmB,IAAD,OACjCA,IACFlC,KAAKwgB,OAASte,EAAKse,OAASxgB,KAAKozB,cAAclxB,EAAKse,aAAUxb,EAC1D9C,EAAKgxB,UAAYtpB,MAAMC,QAAQ3H,EAAKgxB,WACtChxB,EAAKgxB,SAASG,SAAQ,SAAC7yB,GACrB,EAAK0yB,SAASlwB,KAAK,EAAKowB,cAAc5yB,QAIvCR,KAAKkzB,WACRlzB,KAAKkzB,SAAW,OAxCtB,qBAWE,SAAchxB,GAEZ,QADAA,EAAuB,kBAATA,EAAoBA,EAAO,IAC5B+wB,OACX,KAAKH,EAAWQ,IACd,OAAO,IAAIC,EAAUrxB,GACvB,KAAK4wB,EAAWU,QACd,OAAO,IAAIC,EAAcvxB,QAjBjC,KA6CaqxB,EAAb,kDAGE,WAAY5qB,GAA4B,IAAD,8BACrC,cAAMmqB,EAAWQ,IAAK3qB,IAHxB+qB,cAEuC,EAErC,EAAK/qB,KAAKA,GAF2B,EAHzC,wCAQE,SAAKzG,GACCA,IACFlC,KAAK0zB,SAAWxxB,EAAKwxB,YAV3B,2BAcE,SAAwBxxB,GACtB,OAAO,IAAIf,EAAiBe,OAfhC,GAA+B8wB,GAmBlBS,EAAb,kDAIE,WAAY9qB,GAAgC,IAAD,8BACzC,cAAMmqB,EAAWU,QAAS7qB,IAJ5BgrB,aAG2C,IAF3CjqB,eAE2C,EAEzC,EAAKf,KAAKA,GAF+B,EAJ7C,wCASE,SAAKzG,GACCA,IACFlC,KAAK2zB,QAAUzxB,EAAKyxB,QACpB3zB,KAAK0J,UAAYxH,EAAKwH,aAZ5B,2BAgBE,SAAwBxH,GACtB,OAAO,IAAIP,EAAqBO,OAjBpC,GAAmC8wB,I,SAqBvBD,K,UAAAA,E,mBAAAA,M,KAKL,IAAea,EAAtB,WAME,WAAY3wB,EAAyB0F,GAAgC,yBALpDsqB,WAKmD,OAHpE5rB,QAGoE,OAFpEnG,aAEoE,EAClElB,KAAKizB,MAAQhwB,EACbjD,KAAK6zB,SAASlrB,GARlB,sCAwBE,WACE,OAAO3I,KAAKizB,QAzBhB,sBA4BE,SAAiB/wB,GACXA,IACFlC,KAAKqH,GAAKnF,EAAKmF,GACfrH,KAAKkB,QAAUgB,EAAKhB,YA/B1B,qBAWE,SAAcgB,GAEZ,QADAA,EAAuB,kBAATA,EAAoBA,EAAO,IAC5B+wB,OACX,KAAKH,EAAWQ,IACd,OAAO,IAAInyB,EAAiBe,GAC9B,KAAK4wB,EAAWU,QACd,OAAO,IAAI7xB,EAAqBO,QAjBxC,KAoCaf,EAAb,kDAGE,WAAYwH,GAAmC,IAAD,8BAC5C,cAAMoqB,EAAkBO,IAAK3qB,IAH/BrH,gBAE8C,EAE5C,EAAKqH,KAAKA,GAFkC,EAHhD,wCAQE,SAAKzG,GACCA,IACFlC,KAAKsB,WAAaY,EAAKZ,gBAV7B,GAAsCsyB,GAezBjyB,EAAb,kDACE,WAAYgH,GAAuC,uCAC3CoqB,EAAkBS,QAAS7qB,GAFrC,UAA0CirB,GC7IpCx1B,EAASC,cAWFy1B,EAAb,kDAGE,WAAYC,EAA8BC,EAAWC,GAAa,IAAD,8BAC/D,cAAMD,EAAMC,IAHGl1B,oBAEgD,EAE/D,EAAKA,eAAiBg1B,EACtB,EAAKr0B,GAAG,WAAW,SAACC,EAAUwE,GAC5B/F,EAAO0B,KAAK,0BAA2BH,EAAKwE,EAA5C/F,GAD6C,IAErC80B,EAAa/uB,EAAQxD,OAAO,GAA5BuyB,SACR,EAAKgB,YAAYhB,MAEnB,EAAKxzB,GAAG,cAAc,SAACC,EAAUwE,GAC/B/F,EAAO0B,KAAK,6BAA8BH,EAAKwE,EAA/C/F,GACA,EAAK+1B,mBACL,EAAKp1B,eAAeshB,kBAEtB,EAAK3gB,GAAG,kBAAkB,SAACC,EAAUwE,GACnC/F,EAAO0B,KAAK,iCAAkCH,EAAKwE,EAAnD/F,GACA,IAAMu1B,EAAUxvB,EAAQ,GACpBwvB,GAAWA,EAAQT,UACrB,EAAKgB,YAAYP,EAAQT,aAjBkC,EAHnE,qCAyBE,WACE,OAAO,mDA1BX,gBA6BE,SAAGhvB,EAAwBkwB,GACzB,OAAO,0DAASlwB,EAAOkwB,KA9B3B,iBAiCE,SAAIlwB,EAAwBkwB,GAC1B,OAAO,2DAAUlwB,EAAOkwB,KAlC5B,yBAqCE,SAAYlB,GACV,IAAKA,IAAaA,EAAS,GACzB,MAAM,IAAInxB,MAAM,mBAGlB,IADA,IAAMsyB,EAA0C,GACvCviB,EAAQ,EAAGA,EAAQohB,EAASnwB,OAAQ+O,IAAS,CACpD,IAAM5Q,EAAUgyB,EAASphB,GACzBuiB,EAAgBrxB,KAAK,IAAIrB,EAAqB,CAC5C0F,GAAIyK,EAAMtP,WACVtB,QAASA,KAGb,IAAM+d,EAAS,IAAIwU,EAAc,CAC/BjT,OAAQ6T,EAAgB,GACxBnB,SAAUmB,EACVV,QAAS3zB,KAAK2zB,QACdjqB,WAAW,IAAIR,MAAOoL,YAExBtU,KAAKjB,eAAemgB,UAAUD,KAvDlC,2BA0DE,WACE,IAAMnU,EAAW9K,KAAKjB,eAAeu1B,YACjCxpB,GAAYA,aAAoB2oB,IAClC3oB,EAASpB,WAAY,IAAIR,MAAOoL,UAChCtU,KAAKjB,eAAew1B,kBAAkBzpB,MA9D5C,kEAkEE,sBAAA3L,EAAA,4KAESa,KAAKgjB,KAFd,gDAlEF,+HAuEE,mDAAA7jB,EAAA,qEAA8BmB,EAA9B,yBAA8BA,EAA9B,iCACS,IAAIlB,SAAQ,SAACo1B,EAAKC,GACvB,EAAK/0B,GAAG,cAAc,WACpB+0B,EAAI,yCAGN,EAAKC,kBAAkB,CAAEr0B,OAAQ,qBAAsBM,OAAQL,IAAQuU,MAAK,SAAC8f,GAC3E,EAAKC,gBACLJ,EAAIG,MACHE,OAAM,SAACxrB,GACRorB,EAAIprB,UAVV,2CAvEF,2HAsFE,mDAAAlK,EAAA,qEAA0BmB,EAA1B,yBAA0BA,EAA1B,iCACS,IAAIlB,SAAQ,SAACo1B,EAAKC,GACvB,EAAK/0B,GAAG,cAAc,WACpB+0B,EAAI,yCAGN,EAAKC,kBAAkB,CAAEr0B,OAAQ,mBAAoBM,OAAQL,IAAQuU,MAAK,SAAC8f,GACzE,EAAKC,gBACLJ,EAAIG,MACHE,OAAM,SAACxrB,GACRorB,EAAIprB,UAVV,2CAtFF,2HAqGE,sBAAAlK,EAAA,0LArGF,2DAAqC21B,KCZ/B12B,EAASC,cAEF8B,EAAb,WAGE,WAAY4zB,GAA+B,yBAF1Bh1B,oBAEyB,EACxCiB,KAAKjB,eAAiBg1B,EAJ1B,0CAOE,SAAO70B,GACL,IAAMy0B,EAAU3zB,KAAKjB,eAAeg2B,kBAC9Bv0B,EAAUR,KAAKjB,eAAe2O,mBAC9BsmB,EAAO,CACXgB,OAAQ91B,EAAQqI,aAChBosB,WAEIM,EAAOzzB,EAAU,CAAEy0B,YAAaz0B,EAAQU,cAAY8D,EACpDpD,EAAY,IAAIkyB,EAAgB9zB,KAAKjB,eAAgBi1B,EAAMC,GAMjE,OAJKN,GACH/xB,EAAUszB,gBAAgBrgB,MAAK,kBAAMzW,EAAO0B,KAAK,6BAA8B8B,EAAUohB,IAApD5kB,MAGhCwD,MArBX,K,gBCDMxD,EAASC,cAEF82B,EAAb,iDAEmBC,cAAgBvuB,IAAgBE,yBAFnD,KAGmBsuB,kBAAoBxuB,IAAgBG,6BAHvD,yCAKE,WACEsuB,aAAaC,WAAWv1B,KAAKo1B,eAC7BI,eAAeD,WAAWv1B,KAAKq1B,qBAPnC,qBAUE,WACE,IAAInzB,EAEJ,KACEA,EAAOozB,aAAaG,QAAQz1B,KAAKo1B,kBAE/BlzB,EAAOszB,eAAeC,QAAQz1B,KAAKq1B,oBAErC,MAAO11B,GAEP,YADAvB,EAAOwB,MAAMD,EAAbvB,GAIF,GAAK8D,EAIL,IACE,OAAO8wB,EAAO0C,OAAOjxB,KAAKI,MAAM3C,IAChC,MAAOvC,GAEP,YADAvB,EAAOwB,MAAMD,EAAbvB,MA9BN,qBAmCE,SAAQ8D,GACN,IAAMyzB,EAAWlxB,KAAKC,UAAUxC,GAEhC,IACE,OAAQA,EAAKe,MACX,KAAK6vB,EAAWQ,IACdgC,aAAaM,QAAQ51B,KAAKo1B,cAAeO,GACzC,MACF,KAAK7C,EAAWU,QACdgC,eAAeI,QAAQ51B,KAAKq1B,kBAAmBM,GAC/C,MACF,QACE,MAAM,IAAI5zB,MAAJ,uBAA0BG,EAAKe,KAA/B,yBAEV,MAAOtD,GACPvB,EAAOwB,MAAMD,EAAbvB,QAlDN,KCFMA,EAASC,cAgJTob,EAAU,IA9IhB,WAME,aAAe,yBALEoc,YAKH,OAJNC,aAIM,OAHNC,qBAAuB,EAGjB,KAFNC,wBAEM,EACZh2B,KAAK61B,OAAS,IAAIV,EAPtB,8CAUE,WACE,IAAMlW,EAASjf,KAAK61B,OAAOJ,UACvBxW,IACFjf,KAAK81B,QAAU7W,EACfjf,KAAK+1B,qBAAuB9W,EAAOiU,SAASnwB,OAC5C/C,KAAKi2B,kBAfX,+BAmBE,SAAwBpc,GACtB7Z,KAAKg2B,mBAAqBnc,IApB9B,uBAuBE,WACE,OAAO7Z,KAAK81B,UAxBhB,uBA2BE,SAAU7W,GACRjf,KAAK81B,QAAU7W,EACfjf,KAAKu0B,kBAAkBtV,GACvBjf,KAAKi2B,iBA9BT,0BAiCE,WACMj2B,KAAKg2B,oBACPh2B,KAAKg2B,mBAAmBh2B,KAAK81B,WAnCnC,+BAuCE,SAAkB7W,GACZA,GACFjf,KAAK61B,OAAOD,QAAQ3W,KAzC1B,6BA6CE,SAAgByU,GACd,GAAK1zB,KAAKk2B,iBAAiBxC,GAA3B,CAGA1zB,KAAKm2B,cACL,IAAM31B,EAAUR,KAAKo2B,uBAAuB1C,EAAU,GAChDzU,EAAS,IAAIsU,EAAU,CAC3B/S,OAAQhgB,EACRkzB,WACAR,SAAU,CACR1yB,KAIJ,OADAR,KAAKkf,UAAUD,GACRA,KA3DX,0BA8DE,WACEjf,KAAKm2B,cACLn2B,KAAKi2B,iBAhET,iCAmEE,SAAoB/0B,GAAwC,IAAD,IACzD,iBAAOlB,KAAK81B,eAAZ,iBAAO,EAAc5C,gBAArB,aAAO,EAAwBlgB,MAAK,SAAA3J,GAAC,OAAIA,EAAEnI,UAAYA,OApE3D,wBAuEE,WACE,GAAIlB,KAAK81B,mBAAmBvC,EAAW,CACrC,IAAM/yB,EAAUR,KAAKo2B,uBAAuBp2B,KAAK81B,QAAQpC,UAGzD,OAFA1zB,KAAK81B,QAAQ5C,SAASlwB,KAAKxC,GAC3BR,KAAKq2B,iBAAiB71B,GACfA,KA5Eb,8BAiFE,WAA0C,IAAD,EACvC,iBAAOR,KAAK81B,eAAZ,aAAO,EAActV,SAlFzB,8BAqFE,SAAiBhgB,GACf,QAAIR,KAAK81B,UACP91B,KAAK81B,QAAQtV,OAAShgB,EACtBR,KAAK61B,OAAOD,QAAQ51B,KAAK81B,SACzB91B,KAAKi2B,gBACE,KA1Fb,yBA+FE,WACE,OAAIj2B,KAAK81B,QACA91B,KAAK81B,QAAQ5C,SAEf,KAnGX,6BAsGE,WACE,IAAMjU,EAASjf,KAAK61B,OAAOJ,UAC3B,GAAIxW,GAAUA,aAAkBwU,EAAe,CAC7C,IAAI,IAAIvqB,MAAOoL,UAAY2K,EAAOvV,UAAY,IAC5C,OAAOuV,EAAO0U,QAEdv1B,EAAO0B,KAAK,yBAA0Bmf,EAAtC7gB,MA5GR,yBAkHE,WACE4B,KAAK81B,aAAU9wB,EACfhF,KAAK+1B,qBAAuB,EAC5B/1B,KAAK61B,OAAOroB,UArHhB,oCAwHE,SAA+BkmB,GAAwE,IAAtD5hB,EAAqD,uDAA7C9R,KAAK+1B,qBAAwC,EAC7E9W,SAAOqX,cAAc,CAC1CC,UAAW7C,EACX5hB,UAFMxQ,EAD4F,EAC5FA,WAIJd,EAAU,IAAIW,EAAiB,CACjCkG,GAAIyK,EAAMtP,WACVlB,aACAJ,QAAS+d,SAAOuX,0BAA0Bl1B,GAAYJ,UAGxD,OADAlB,KAAK+1B,qBAAuBjkB,EAAQ,EAC7BtR,IAnIX,8BAsIE,SAAyBkzB,GACvB,QAAIA,GACKzU,SAAOwX,kBAAkB/C,OAxItC,MAgJaxzB,EAAmB,WAC9B,OAAOuZ,K","file":"static/js/main.892af330.chunk.js","sourcesContent":["import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\r\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { Task } from \"../util/task\";\r\nimport { Network, VmLog } from \"../util/types\";\r\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\r\nconst { WS_RPC } = require('@vite/vitejs-ws');\r\n\r\nconst logger = getLogger();\r\n\r\nconst providerTimeout = 60000;\r\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\r\n\r\nexport class ViteClient {\r\n  private _isConnected: boolean;\r\n  private _connector?: IWalletConnector;\r\n  private _provider?: any;\r\n  private _client?: any;\r\n  private readonly _emitter: IGlobalEmitter;\r\n  private readonly _walletManager: WalletManager;\r\n  private readonly _connectorFactory: WalletConnectorFactory;\r\n\r\n  constructor() {\r\n    this._isConnected = false;\r\n    this._emitter = getEmitter();\r\n    this._walletManager = getWalletManager();\r\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\r\n  }\r\n\r\n  get isConnected(): boolean {\r\n    return this._isConnected;\r\n  }\r\n\r\n  get connector(): Maybe<IWalletConnector> {\r\n    return this._connector;\r\n  }\r\n\r\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\r\n    this._connector = this._connectorFactory.create(network)\r\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\r\n    let isResolved = false;\r\n    this._provider.on('error', (err: any) => {\r\n      logger.error(err)();\r\n      if (isResolved) return;\r\n      reject(err);\r\n      this._isConnected = false;\r\n    });\r\n    this._client = new ViteAPI(this._provider, () => {\r\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\r\n      isResolved = true;\r\n      resolve();\r\n      this._isConnected = true;\r\n    });\r\n  });\r\n\r\n  dispose(): void {\r\n    logger.info(\"Disposing ViteClient\")();\r\n    this._provider?.disconnect();\r\n    this._isConnected = false;\r\n  }\r\n\r\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\r\n    if (this._isConnected && this._client) {\r\n      return this._client.request(method, ...args);\r\n    } else {\r\n      return Promise.reject('Vite client is not ready to make requests.');\r\n    }\r\n  }\r\n\r\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\r\n    let block = accountBlock\r\n      .createAccountBlock(\"callContract\", {\r\n        address: account.address,\r\n        abi,\r\n        methodName,\r\n        tokenId,\r\n        amount,\r\n        toAddress,\r\n        params,\r\n      })\r\n\r\n    if (account instanceof WebWalletAccount) {\r\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\r\n      await block.autoSetPreviousAccountBlock();\r\n      const result = await block.sign().send();\r\n      return result;\r\n    } else if (account instanceof SessionWalletAccount) {\r\n      if (this.connector) {\r\n        this._emitter.emitConfirmTransactionDialog(true);\r\n        try {\r\n          const result = await this.connector.sendTransactionAsync({\r\n            block: block.accountBlock\r\n          });\r\n          this._emitter.emitConfirmTransactionDialog(false);\r\n          return result;\r\n        } catch (error) {\r\n          this._emitter.emitConfirmTransactionDialog(false);\r\n          throw error\r\n        }\r\n      } else {\r\n        throw new Error(\"Connector is not defined\");\r\n      }\r\n    } else {\r\n      throw new Error(\"Account not supported\");\r\n    }\r\n  }\r\n\r\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\r\n    let data = abiutils.encodeFunctionCall(abi, params);\r\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\r\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\r\n      selfAddr: contractAddress,\r\n      offChainCode: offchaincode,\r\n      data: dataBase64,\r\n    });\r\n    if (result) {\r\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\r\n      let outputs = [];\r\n      for (let i = 0; i < abi.outputs.length; i++) {\r\n        outputs.push(abi.outputs[i].type);\r\n      }\r\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\r\n      let resultList = [];\r\n      if (offchainDecodeResult) {\r\n        for (let i = 0; i < abi.outputs.length; i++) {\r\n          if (abi.outputs[i].name) {\r\n            resultList.push({\r\n              name: abi.outputs[i].name,\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          } else {\r\n            resultList.push({\r\n              name: \"\",\r\n              value: offchainDecodeResult[i],\r\n            });\r\n          }\r\n        }\r\n      }\r\n      return resultList;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\r\n    let topics = vmLog.topics;\r\n    for (let j = 0; j < abi.length; j++) {\r\n      let abiItem = abi[j];\r\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\r\n        if (vmLog.data) {\r\n          let log: VmLog = {\r\n            topic: topics[0],\r\n            args: abiutils.decodeLog(\r\n              abiItem.inputs,\r\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\r\n              topics.slice(1)\r\n            ),\r\n            event: abiItem.name,\r\n          };\r\n          return log;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async createAddressListenerAsync(address: string): Promise<any> {\r\n    const payload = {\r\n      addressHeightRange: {\r\n        placeholder: {\r\n          fromHeight: \"0\",\r\n          toHeight: \"0\",\r\n        },\r\n      },\r\n    };\r\n    let tempPayload = JSON.stringify(payload);\r\n    tempPayload = tempPayload.replace(\"placeholder\", address);\r\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\r\n    return result;\r\n  }\r\n\r\n  removeListener(event: any): void {\r\n    this._client?.unsubscribe(event);\r\n  }\r\n\r\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let result: any = undefined;\r\n      let error: any = undefined;\r\n      const task = new Task(async () => {\r\n        try {\r\n          let blockByHeight = await this.requestAsync(\r\n            'ledger_getAccountBlockByHeight',\r\n            address,\r\n            height\r\n          );\r\n\r\n          if (!blockByHeight) {\r\n            return true;\r\n          }\r\n\r\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\r\n          if (!receiveBlockHash) {\r\n            return true;\r\n          }\r\n\r\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\r\n          if (!blockByHash) {\r\n            return true;\r\n          }\r\n\r\n          result = {\r\n            ...this.getAccountBlockStatus(blockByHash),\r\n            accountBlock: blockByHash\r\n          }\r\n\r\n          return false;\r\n        } catch (err) {\r\n          error = err\r\n          return false;\r\n        }\r\n      }, 500);\r\n      task.start(() => {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private getAccountBlockStatus(accountBlock: any) {\r\n    let status = this.resolveAccountBlockData(accountBlock);\r\n    let statusTxt = '';\r\n    switch (status) {\r\n      case 0:\r\n        statusTxt = '0, Execution succeed';\r\n        break;\r\n      case 1:\r\n        statusTxt = '1, Execution reverted';\r\n        break;\r\n      case 2:\r\n        statusTxt = '2, Max call depth exceeded';\r\n        break;\r\n    }\r\n    return {\r\n      status,\r\n      statusTxt\r\n    };\r\n  }\r\n\r\n  private resolveAccountBlockData(accountBlock: any) {\r\n    if (\r\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\r\n      !accountBlock.data\r\n    ) {\r\n      return 0;\r\n    }\r\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\r\n\r\n    if (bytes.length !== 33) {\r\n      return 0;\r\n    }\r\n    return bytes[32];\r\n  }\r\n}\r\n\r\nconst client = new ViteClient();\r\n\r\nexport const getViteClient = () => {\r\n  return client;\r\n}","export class Task {\r\n  private _taskTimer: NodeJS.Timeout | undefined\r\n  private _taskInterval: number\r\n  private _task: () => Promise<boolean>\r\n  private _callback?: () => any\r\n\r\n  constructor(task: () => Promise<boolean>, interval: number) {\r\n    this._task = task;\r\n    this._taskInterval = interval;\r\n\r\n    return this;\r\n  }\r\n\r\n  _run(): void {\r\n    this._taskTimer = setTimeout(async () => {\r\n      if (!this._task) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      if (!(await this._task())) {\r\n        this._onStop();\r\n        return;\r\n      }\r\n      this._run();\r\n    }, this._taskInterval);\r\n  }\r\n\r\n  _onStop() {\r\n    this._callback && this._callback();\r\n  }\r\n\r\n  start(callback?: () => any): void {\r\n    this._callback = callback;\r\n    if (this._taskTimer) {\r\n      return;\r\n    }\r\n\r\n    this._run();\r\n  }\r\n\r\n\r\n  stop(): void {\r\n    this._onStop();\r\n    if (!this._taskTimer) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this._taskTimer);\r\n    this._taskTimer = undefined;\r\n  }\r\n}","import BigNumber from \"bignumber.js\"\r\n\r\nexport interface GenericType {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport type Contract = {\r\n  address: string\r\n  contractName: string\r\n  binary: string\r\n  offChain: string\r\n  abi: any[]\r\n}\r\n\r\nexport type Network = {\r\n  id: number\r\n  networkId: number\r\n  name: string\r\n  rpcUrl: string\r\n  connectorUrl: string\r\n}\r\n\r\nexport type Token = {\r\n  __typename: string\r\n  id: string\r\n  name: string\r\n  symbol: string\r\n  originalSymbol: string\r\n  decimals: number\r\n  iconUrl: Maybe<string>\r\n  url: Maybe<string>\r\n}\r\n\r\nexport type Pool = {\r\n  __typename: string\r\n  id: number\r\n  stakingToken: Token\r\n  rewardToken: Token\r\n  apr?: Maybe<BigNumber>\r\n  totalStaked: BigNumber\r\n  totalRewards: BigNumber\r\n  startBlock: BigNumber\r\n  endBlock: BigNumber\r\n  endTimestamp: number\r\n  latestRewardBlock: BigNumber\r\n  rewardPerPeriod: BigNumber\r\n  rewardPerToken: BigNumber\r\n  paidOut: BigNumber\r\n  userInfo?: Maybe<PoolUserInfo>\r\n  fetchTimestamp: number\r\n}\r\n\r\nexport type ContractPool = {\r\n  stakingTokenId: string\r\n  rewardTokenId: string\r\n  totalStakingBalance: string\r\n  totalRewardBalance: string\r\n  startBlock: string\r\n  endBlock: string\r\n  latestRewardBlock: string\r\n  rewardPerPeriod: string\r\n  rewardPerToken: string\r\n  paidOut: string\r\n}\r\n\r\nexport type PoolUserInfo = {\r\n  __typename: string\r\n  id: string\r\n  poolId: number\r\n  account: string\r\n  stakingBalance: BigNumber\r\n  rewardDebt: BigNumber\r\n}\r\n\r\nexport type ContractPoolUserInfo = {\r\n  poolId: number\r\n  address: string\r\n  stakingBalance: string\r\n  rewardDebt: string\r\n}\r\n\r\nexport type PoolFilterValues = {\r\n  stakedOnly: boolean\r\n  showLive: boolean\r\n  sortBy: string\r\n  search: string\r\n}\r\n\r\nexport enum PoolSortType {\r\n  DEFAULT = 0,\r\n  APR = 1,\r\n  TOTAL_STAKED = 2\r\n}\r\n\r\nexport type PoolDialogState = {\r\n  type: PoolDialogType\r\n  open: boolean\r\n}\r\n\r\nexport enum PoolDialogType {\r\n  DEPOSIT = 0,\r\n  WITHDRAW = 1,\r\n  CLAIM = 2\r\n}\r\n\r\nexport enum GlobalEvent {\r\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\r\n  ConnectWalletDialog = 'ConnectWalletDialog',\r\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\r\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\r\n  PoolDeposit = 'PoolDeposit',\r\n  PoolWithdraw = 'PoolWithdraw',\r\n  PoolUpdate = 'PoolUpdate'\r\n}\r\n\r\nexport type VmLog = {\r\n  event: string\r\n  topic: string\r\n  args: any\r\n}\r\n\r\nexport enum VmLogEvent {\r\n  PoolCreated = 'PoolCreated',\r\n  Deposit = 'Deposit',\r\n  Withdraw = 'Withdraw'\r\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\r\n\r\nexport const CommonConstants = {\r\n  APP_NAME: 'VITE Staking Pools',\r\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\r\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\r\n  POOLS_CONTRACT_ADDRESS: 'vite_901762159a2e39b79dc23c8a498fcd8c5a7b359ea616f00993',\r\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\r\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\r\n}\r\n\r\nexport const Networks: Network[] = [\r\n  {\r\n    id: 1,\r\n    networkId: 1,\r\n    name: 'MAINNET',\r\n    rpcUrl: 'wss://node.vite.net/gvite/ws',\r\n    connectorUrl: 'wss://biforst.vite.net'\r\n  },\r\n  {\r\n    id: 2,\r\n    networkId: 2,\r\n    name: 'TESTNET',\r\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\r\n    connectorUrl: 'wss://biforst.vite.net'\r\n  },\r\n  {\r\n    id: 3,\r\n    networkId: 2,\r\n    name: 'TESTNET+MOCK',\r\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws',\r\n    connectorUrl: 'wss://biforst.vite.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    networkId: 5,\r\n    name: 'DEBUG',\r\n    rpcUrl: 'ws://localhost:23457',\r\n    connectorUrl: 'wss://biforst.vite.net'\r\n  }\r\n]\r\n\r\nexport const TypeNames = {\r\n  Pool: \"Pool\",\r\n  PoolUserInfo: \"PoolUserInfo\",\r\n  Token: \"Token\"\r\n}\r\n\r\nexport const UnknownToken: Token = {\r\n  __typename: TypeNames.Token,\r\n  id: \"-1\",\r\n  name: \"UNKNOWN\",\r\n  symbol: \"UNKNOWN\",\r\n  originalSymbol: \"UNKNOWN\",\r\n  decimals: 0,\r\n  iconUrl: undefined,\r\n  url: undefined\r\n}\r\n\r\nexport const PoolSortTypes: GenericType[] = [\r\n  {\r\n    name: \"\",\r\n    type: \"DEFAULT\"\r\n  },\r\n  {\r\n    name: \"APR\",\r\n    type: \"APR\"\r\n  },\r\n  {\r\n    name: \"Total staked\",\r\n    type: \"TOTAL_STAKED\"\r\n  }\r\n]\r\n\r\nexport const DefaultPoolFilterValues: PoolFilterValues = {\r\n  stakedOnly: false,\r\n  showLive: true,\r\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\r\n  search: \"\"\r\n}","import { CommonUtil } from './common.util';\r\n\r\nexport class LogEventModel {\r\n  banner?: string;\r\n  args?: any[];\r\n\r\n  public constructor(init?: Partial<LogEventModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface ILogger {\r\n  // Make sure level is selected e.g. 'Verbose' in Chrome\r\n  readonly debug: any;\r\n  readonly info: any;\r\n  readonly warn: any;\r\n  readonly error: any;\r\n}\r\n\r\nconst noop = (): any => undefined;\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n\r\n  private get isEnabled(): boolean {\r\n    return Boolean(process.env.REACT_APP_IS_DEV);\r\n  }\r\n\r\n  get debug() {\r\n    if (this.isEnabled) {\r\n      return console.debug.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info() {\r\n    if (this.isEnabled) {\r\n      return console.info.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get warn() {\r\n    if (this.isEnabled) {\r\n      return console.warn.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get error() {\r\n    if (this.isEnabled) {\r\n      return console.error.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExtendedConsoleLogger implements ILogger {\r\n\r\n  private get isEnabled(): boolean {\r\n    return Boolean(process.env.REACT_APP_IS_DEV);\r\n  }\r\n\r\n  private timestamp(type: string): string {\r\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\r\n  }\r\n\r\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\r\n    const mapFn = (e: any) => {\r\n      if (CommonUtil.isString(e)) {\r\n        return e;\r\n      } else if (e instanceof Error) {\r\n        return e.message;\r\n      }\r\n      return CommonUtil.toJsonString(e);\r\n    };\r\n    const result = new LogEventModel({\r\n      banner: this.timestamp(type),\r\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\r\n    });\r\n    return result;\r\n  }\r\n\r\n  get debug() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('DEBUG', args);\r\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('INFO', args);\r\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get warn() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('WARN', args);\r\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get error() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        if (args?.length > 0) {\r\n          if (!CommonUtil.isString(args[0])) {\r\n            args.push('(See console output for more information.)');\r\n          }\r\n        }\r\n        const result = this.createLogEventModel('ERROR', args);\r\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n}\r\n\r\nconst logger = new ExtendedConsoleLogger();\r\n\r\nexport const getLogger = (): ILogger => {\r\n  return logger;\r\n}","import fs from 'fs';\r\n\r\nexport abstract class FileUtil {\r\n  abstract readFileAsync(path: string): Promise<any>;\r\n}\r\n\r\nexport class BrowserFileUtil extends FileUtil {\r\n  async readFileAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return response.text();\r\n  }\r\n}\r\n\r\nexport class LocalFileUtil extends FileUtil {\r\n  public async readFileAsync(path: string): Promise<any> {\r\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\r\n  }\r\n}\r\n\r\nexport enum FileUtilType {\r\n  Browser = 0,\r\n  Local = 1\r\n}\r\n\r\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\r\n  switch (type) {\r\n    case FileUtilType.Local:\r\n      return new LocalFileUtil();\r\n    default:\r\n      return new BrowserFileUtil();\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/bg.005a6fa7.svg\";","export class CoinUtil {\r\n  private readonly _iconUrlMap: Map<string, string>;\r\n  private readonly _coinMarketCapMap: Map<string, string>;\r\n  private readonly _coingeckoMap: Map<string, string>;\r\n\r\n  constructor() {\r\n    this._iconUrlMap = new Map<string, string>([\r\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\r\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\r\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"]\r\n    ]);\r\n    this._coinMarketCapMap = new Map<string, string>();\r\n    this._coingeckoMap = new Map<string, string>();\r\n  }\r\n\r\n  mapIconUrl(iconUrl?: Maybe<string>): string {\r\n    if (!iconUrl) {\r\n      return \"\";\r\n    }\r\n    const existing = this._iconUrlMap.get(iconUrl);\r\n    return existing ?? iconUrl;\r\n  }\r\n\r\n  mapCoinMarketCapName(name: string): string {\r\n    const existing = this._coinMarketCapMap.get(name);\r\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\r\n  }\r\n\r\n  mapCoingeckoName(name: string): string {\r\n    const existing = this._coingeckoMap.get(name);\r\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\r\n  }\r\n}\r\n\r\nconst util = new CoinUtil();\r\n\r\nexport const getCoinUtil = (): CoinUtil => {\r\n  return util;\r\n}","import BigNumber from \"bignumber.js\";\r\nimport CoinGecko from \"coingecko-api\";\r\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\r\nimport { getLogger } from \"../util/logger\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class CoingeckoClient {\r\n  private readonly _client: any;\r\n  private readonly _coinUtil: CoinUtil;\r\n\r\n  constructor() {\r\n    this._client = new CoinGecko();\r\n    this._coinUtil = getCoinUtil();\r\n  }\r\n\r\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\r\n    try {\r\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\r\n      const params = { ids: mappedName };\r\n      const result = await this._client.simple.price(params);\r\n      return new BigNumber(result.data[mappedName].usd);\r\n    } catch (error) {\r\n      logger.error(error)();\r\n      return new BigNumber(0);\r\n    }\r\n  }\r\n}\r\n\r\nconst client = new CoingeckoClient();\r\n\r\nexport const getCoingeckoClient = () => {\r\n  return client;\r\n}","import axios from 'axios';\r\n\r\ntype BaseResult<T> = {\r\n  code: number,\r\n  data: T\r\n}\r\n\r\nexport type TokenDetailResult = {\r\n  name: string\r\n  symbol: string\r\n  originalSymbol: string\r\n  tokenDecimals: number\r\n  urlIcon: string\r\n}\r\n\r\nexport class VitexClient {\r\n  private readonly _baseUrl: string;\r\n\r\n  constructor() {\r\n    this._baseUrl = \"https://vitex.vite.net\"\r\n  }\r\n\r\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\r\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl + \"/api/v1/token/detail?tokenId=\" + tokenId);\r\n    return result.data.data;\r\n  }\r\n}\r\n\r\nconst client = new VitexClient();\r\n\r\nexport const getVitexClient = () => {\r\n  return client;\r\n}\r\n","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string, message?: string) {\r\n    if (property === null || property === undefined) {\r\n      if (message) {\r\n        throw new Error(message);\r\n      } else {\r\n        throw new Error('Unexpected null exception. ' + propertyName);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      if (message) {\r\n        throw new Error(message);\r\n      } else {\r\n        throw new Error('Unexpected null exception. ' + propertyName);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\r\n    if (property && property.length > maxLength) {\r\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import moment from 'moment';\r\n\r\nexport class MomentUtil {\r\n  private readonly _locale: string;\r\n\r\n  constructor(locale?: Maybe<string>) {\r\n    if (locale) {\r\n      this._locale = locale;\r\n    } else {\r\n      this._locale = navigator.language;\r\n    }\r\n    moment.locale(this._locale);\r\n  }\r\n\r\n  public getLocale(): string {\r\n    return this._locale;\r\n  }\r\n\r\n  public get(): moment.Moment {\r\n    return moment();\r\n  }\r\n\r\n  public getDuration(seconds: number): moment.Duration {\r\n    return moment.duration(seconds, 'seconds');\r\n  }\r\n\r\n  public getFromUnix(date: number) {\r\n    return moment.unix(date);\r\n  }\r\n\r\n  public getFromMilliseconds(date: number) {\r\n    return moment(date, 'x');\r\n  }\r\n\r\n  public getLocal(date: any): moment.Moment {\r\n    return moment.utc(date).local();\r\n  }\r\n\r\n  public getLocalTime(date: any): string {\r\n    return this.getLocal(date).format('LTS');\r\n  }\r\n\r\n  public getLocalDate(date: any): string {\r\n    return this.getLocal(date).format('L');\r\n  }\r\n\r\n  public getLocalFormatted(date: any): string {\r\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\r\n  }\r\n\r\n  public getLocalReverseFormatted(date: any): string {\r\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\r\n  }\r\n\r\n  public isExpired(timestamp: number): boolean {\r\n    try {\r\n      if (timestamp >= 0) {\r\n        return moment.utc().unix() >= timestamp;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\r\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\r\nimport { TypeNames, UnknownToken } from \"../common/constants\";\r\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\r\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\r\nimport { Ensure } from \"../util/ensure\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { MomentUtil } from \"../util/moment.util\";\r\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, Token } from \"../util/types\";\r\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport interface IDataSource {\r\n  initAsync(): Promise<void>;\r\n  dispose(): void;\r\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\r\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\r\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\r\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\r\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\r\n  getTokenAsync(_id: string): Promise<Token>;\r\n  getTotalPoolsAsync(): Promise<number>;\r\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\r\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\r\n}\r\n\r\nexport abstract class BaseDataSource implements IDataSource {\r\n  protected readonly _emitter: IGlobalEmitter;\r\n  private readonly _walletManager: WalletManager;\r\n  private readonly _coingeckoClient: CoingeckoClient;\r\n  private readonly _vitexClient: VitexClient;\r\n  private readonly _coinUtil: CoinUtil;\r\n  private readonly _tokens: Map<string, Token>;\r\n  private _moment: MomentUtil = new MomentUtil();\r\n\r\n  constructor() {\r\n    this._emitter = getEmitter();\r\n    this._walletManager = getWalletManager();\r\n    this._coingeckoClient = getCoingeckoClient();\r\n    this._vitexClient = getVitexClient();\r\n    this._coinUtil = getCoinUtil();\r\n    this._tokens = new Map<string, Token>();\r\n  }\r\n\r\n  async initAsync(): Promise<void> {\r\n    logger.info(\"Init BaseDataSource\")();\r\n    this._moment = new MomentUtil();\r\n    await this.initAsyncProtected();\r\n  }\r\n\r\n  dispose(): void {\r\n    logger.info(\"Disposing BaseDataSource\")();\r\n    this._tokens.clear();\r\n    this.disposeProtected();\r\n  }\r\n\r\n  getAccount(): WalletAccount {\r\n    const account = this._walletManager.getActiveAccount();\r\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\r\n    return account as WalletAccount;\r\n  }\r\n\r\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\r\n    try {\r\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\r\n        // pool is closed, should not display numeric APR.\r\n        return undefined;\r\n      }\r\n      const stakingTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name);\r\n      const rewardTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name);\r\n      const totalTime = pool.endBlock.minus(pool.startBlock);\r\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\r\n      const toPercent = new BigNumber(100);\r\n      const apr = rewardTokenPrice.times(pool.totalRewards).dividedBy(stakingTokenPrice.times(pool.totalStaked).times(totalTime)).times(secondsInYear).times(toPercent);\r\n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\r\n    } catch (error) {\r\n      logger.error(error)();\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\r\n    try {\r\n      if (!endBlock || endBlock.lte(0)) {\r\n        return -1;\r\n      }\r\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\r\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\r\n      if (remainingSeconds.lte(0)) {\r\n        return 0;\r\n      }\r\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\r\n    } catch (error) {\r\n      logger.error(error)();\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  async getTokenAsync(id: string): Promise<Token> {\r\n    try {\r\n      const existing = this._tokens.get(id);\r\n      if (existing) {\r\n        return existing;\r\n      }\r\n      const result = await this._vitexClient.getTokenDetailAsync(id);\r\n      if (result) {\r\n        const token = {\r\n          __typename: \"Token\",\r\n          id,\r\n          name: result.name,\r\n          symbol: result.symbol,\r\n          originalSymbol: result.originalSymbol,\r\n          decimals: result.tokenDecimals,\r\n          iconUrl: result.urlIcon,\r\n          url: \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\r\n        }\r\n        this._tokens.set(id, token);\r\n        return token;\r\n      }\r\n    } catch (error) {\r\n      logger.error(error)();\r\n    }\r\n    const unknownToken = {\r\n      ...UnknownToken,\r\n      id\r\n    }\r\n    this._tokens.set(id, unknownToken);\r\n    return unknownToken;\r\n  }\r\n\r\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\r\n    const stakingToken = await this.getTokenAsync(p.stakingTokenId);\r\n    const rewardToken = await this.getTokenAsync(p.rewardTokenId);\r\n    const endTimestamp = await this.getEndTimestampAsync(new BigNumber(p.endBlock));\r\n    const pool: Pool = {\r\n      __typename: TypeNames.Pool,\r\n      id,\r\n      stakingToken,\r\n      rewardToken,\r\n      totalStaked: new BigNumber(p.totalStakingBalance),\r\n      totalRewards: new BigNumber(p.totalRewardBalance),\r\n      startBlock: new BigNumber(p.startBlock),\r\n      endBlock: new BigNumber(p.endBlock),\r\n      endTimestamp,\r\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\r\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\r\n      rewardPerToken: new BigNumber(p.rewardPerToken),\r\n      paidOut: new BigNumber(p.paidOut),\r\n      fetchTimestamp: this._moment.get().unix()\r\n    };\r\n    return pool;\r\n  }\r\n\r\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\r\n    return {\r\n      __typename: TypeNames.PoolUserInfo,\r\n      id: `${u.address}_${u.poolId}`,\r\n      poolId: u.poolId,\r\n      account: u.address,\r\n      stakingBalance: new BigNumber(u.stakingBalance),\r\n      rewardDebt: new BigNumber(u.rewardDebt)\r\n    }\r\n  }\r\n\r\n  protected abstract initAsyncProtected(): Promise<void>;\r\n\r\n  protected abstract disposeProtected(): void;\r\n\r\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\r\n\r\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\r\n\r\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\r\n\r\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\r\n\r\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\r\n\r\n  abstract getTotalPoolsAsync(): Promise<number>;\r\n\r\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\r\n\r\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { CommonConstants } from \"../common/constants\";\r\nimport { CommonUtil } from \"../util/common.util\";\r\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\r\nimport { BaseDataSource } from \"./base.datasource\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class MockDataSource extends BaseDataSource {\r\n  private readonly _fileUtil: FileUtil;\r\n  private _pools: Pool[];\r\n  private _users: PoolUserInfo[];\r\n  private _networkBlockHeight: BigNumber;\r\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\r\n\r\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\r\n    super();\r\n    this._fileUtil = fileUtil;\r\n    this._pools = [];\r\n    this._users = [];\r\n    this._networkBlockHeight = new BigNumber(0);\r\n    logger.info(\"MockDataSource loaded\")();\r\n  }\r\n\r\n  private initNetworkBlockHeight() {\r\n    this._networkBlockHeight = new BigNumber(0);\r\n    this._networkBlockHeightInterval = setInterval(() => {\r\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\r\n      // console.log(this._networkBlockHeight.toString())\r\n    }, 1000);\r\n  }\r\n\r\n  private async initPoolsAsync(): Promise<void> {\r\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\r\n    pools = JSON.parse(pools);\r\n    this._pools = [];\r\n    for (let index = 0; index < pools.length; index++) {\r\n      const p: ContractPool = pools[index];\r\n      const pool = await this.toPoolAsync(index, p);\r\n      pool.apr = await this.getAprAsync(pool);\r\n      this._pools.push(pool);\r\n    }\r\n  }\r\n\r\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\r\n    switch (pool.id) {\r\n      case 0:\r\n        return new BigNumber(2.12345678)\r\n      case 1:\r\n        return new BigNumber(3.55555555)\r\n      default:\r\n        return super.getAprAsync(pool)\r\n    };\r\n  }\r\n\r\n  private async initPoolUsersAsync(): Promise<void> {\r\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\r\n    users = JSON.parse(users);\r\n    this._users = [];\r\n    for (let index = 0; index < users.length; index++) {\r\n      const u: ContractPoolUserInfo = users[index];\r\n      const info = await this.toPoolUserInfoAsync(u);\r\n      this._users.push(info);\r\n    }\r\n  }\r\n\r\n  protected async initAsyncProtected(): Promise<void> {\r\n    logger.info(\"MockDataSource initAsyncProtected\")();\r\n    this.initNetworkBlockHeight();\r\n    await this.initPoolsAsync();\r\n    await this.initPoolUsersAsync();\r\n  }\r\n\r\n  protected disposeProtected(): void {\r\n    if (this._networkBlockHeightInterval) {\r\n      clearInterval(this._networkBlockHeightInterval);\r\n    }\r\n  }\r\n\r\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\r\n    return new BigNumber(0);\r\n  }\r\n\r\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\r\n    return this._networkBlockHeight;\r\n  }\r\n\r\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\r\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\r\n    const pool = this._pools[_id];\r\n    if (!_account) {\r\n      return pool;\r\n    }\r\n    return {\r\n      ...pool,\r\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\r\n    }\r\n  }\r\n\r\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\r\n    await CommonUtil.timeout(1000);\r\n    if (!_account) {\r\n      return this._pools;\r\n    }\r\n    const pools = [];\r\n    for (const p of this._pools) {\r\n      pools.push(await this.getPoolAsync(p.id, _account))\r\n    }\r\n    return pools;\r\n  }\r\n\r\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\r\n    if (CommonUtil.isNullOrWhitespace(_account)) {\r\n      return undefined;\r\n    }\r\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\r\n  }\r\n\r\n  async getTotalPoolsAsync(): Promise<number> {\r\n    return this._pools.length;\r\n  }\r\n\r\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\r\n    const blockNumber = await this.getNetworkBlockHeightAsync();\r\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\r\n\r\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\r\n    // latestRewardBlock initially set to startBlock, so no updates before that.\r\n    if (latestBlock <= pool.latestRewardBlock) {\r\n      return;\r\n    }\r\n\r\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\r\n    if (pool.totalStaked.eq(0)) {\r\n      pool.latestRewardBlock = latestBlock;\r\n      return;\r\n    }\r\n\r\n    // increase rewardPerToken by reward amount over period since previous reward block.\r\n    const period = latestBlock.minus(pool.latestRewardBlock);\r\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\r\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\r\n\r\n    pool.latestRewardBlock = latestBlock;\r\n  }\r\n\r\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\r\n    await CommonUtil.timeout(1000);\r\n    const pool = this._pools[_id];\r\n    await this._updatePoolAsync(pool);\r\n\r\n    const amount = new BigNumber(_amount);\r\n    const account = this.getAccount().address;\r\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\r\n    if (userInfo) {\r\n      // dispense rewards\r\n      if (userInfo.stakingBalance.gt(0)) {\r\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\r\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\r\n      }\r\n      // update balances & recompute rewardDebt\r\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\r\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\r\n    } else {\r\n      userInfo = await this.toPoolUserInfoAsync({\r\n        poolId: _id,\r\n        address: account,\r\n        stakingBalance: amount.toString(),\r\n        rewardDebt: \"0\"\r\n      });\r\n      this._users.push(userInfo);\r\n    }\r\n    pool.totalStaked = pool.totalStaked.plus(amount);\r\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\r\n    return true;\r\n  }\r\n\r\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\r\n    await CommonUtil.timeout(1000);\r\n    const pool = this._pools[_id];\r\n    await this._updatePoolAsync(pool);\r\n\r\n    const amount = new BigNumber(_amount);\r\n    const account = this.getAccount().address;\r\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\r\n    if (!userInfo) {\r\n      throw new Error(\"Withdraw not possible\")\r\n    }\r\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\r\n      throw new Error(\"Insufficient balance\")\r\n    }\r\n\r\n    // dispense rewards\r\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\r\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\r\n\r\n    // update balances & recompute rewardDebt\r\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\r\n    pool.totalStaked = pool.totalStaked.minus(amount);\r\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\r\n\r\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\r\n    return true;\r\n  }\r\n}\r\n\r\nconst ds = new MockDataSource();\r\n\r\nexport const getMockDataSource = () => {\r\n  return ds;\r\n}","export class CachedFunctionCall<T> {\r\n  private readonly _duration: number;\r\n  private readonly _callbackFn: () => Promise<T>;\r\n  private _currentValue?: Maybe<T>;\r\n  private _lastExecution: number;\r\n\r\n  constructor(duration: number, callbackFn: () => Promise<T>) {\r\n    this._duration = duration;\r\n    this._callbackFn = callbackFn;\r\n    this._lastExecution = new Date(0).getTime();\r\n  }\r\n\r\n  private isExpired(): boolean {\r\n    return new Date().getTime() >= this._lastExecution + this._duration;\r\n  }\r\n\r\n  async getAsync(): Promise<T> {\r\n    if (!this._currentValue || this.isExpired()) {\r\n      this._currentValue = await this._callbackFn();\r\n      this._lastExecution = new Date().getTime();\r\n    }\r\n    return this._currentValue;\r\n  }\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\r\nimport { CommonConstants } from \"../common/constants\";\r\nimport { CachedFunctionCall } from \"../util/cache\";\r\nimport { CommonUtil } from \"../util/common.util\";\r\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { Contract, ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\r\nimport { BaseDataSource } from \"./base.datasource\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class ViteDataSource extends BaseDataSource {\r\n  private readonly _fileUtil: FileUtil;\r\n  private readonly _client: ViteClient;\r\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\r\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\r\n  private _contract?: Contract;\r\n  private _listener: any;\r\n\r\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\r\n    super();\r\n    this._fileUtil = fileUtil;\r\n    this._client = getViteClient();\r\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\r\n      // prevent function from being called more than once every 500 milliseconds\r\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\r\n    });\r\n    logger.info(\"ViteDataSource loaded\")();\r\n  }\r\n\r\n  protected async initAsyncProtected(): Promise<void> {\r\n    const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools.json');\r\n    this._contract = JSON.parse(contract) as Contract;\r\n    this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS;\r\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\r\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\r\n    this._listener.on((results: any[]) => {\r\n      if (!this._contract?.abi) {\r\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\r\n      } else {\r\n        for (let index = 0; index < results.length; index++) {\r\n          const result = results[index];\r\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\r\n          logger.info(vmLog ?? result)();\r\n          if (vmLog) {\r\n            this.handleVmLogAsync(vmLog);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  protected disposeProtected(): void {\r\n    this.removeAddressListener();\r\n    this._offchainMethods.clear();\r\n  }\r\n\r\n  private removeAddressListener(): void {\r\n    if (this._listener) {\r\n      this._client.removeListener(this._listener);\r\n    }\r\n  }\r\n\r\n  private get contract(): Contract {\r\n    if (this._contract?.address === undefined) {\r\n      throw new Error(\"Contract is not defined.\");\r\n    } else {\r\n      return this._contract;\r\n    }\r\n  }\r\n\r\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\r\n    try {\r\n      if (CommonUtil.isNullOrWhitespace(_account)) {\r\n        return new BigNumber(0);\r\n      }\r\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\r\n      if (!result?.balanceInfoMap) {\r\n        return new BigNumber(0);\r\n      }\r\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\r\n    } catch (error) {\r\n      logger.error(error)();\r\n      return new BigNumber(0);\r\n    }\r\n  }\r\n\r\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\r\n    try {\r\n      const result = await this._cachedNetworkBlockHeight.getAsync();\r\n      return new BigNumber(result);\r\n    } catch (error) {\r\n      logger.error(error)();\r\n      return new BigNumber(0);\r\n    }\r\n  }\r\n\r\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\r\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\r\n    const p = this.objectFromEntries(result) as ContractPool;\r\n    const pool = await this.toPoolAsync(_id, p);\r\n    pool.apr = await this.getAprAsync(pool);\r\n    pool.userInfo = await this.getPoolUserInfoAsync(_id, _account);\r\n    return pool;\r\n  }\r\n\r\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\r\n    const amount = await this.getTotalPoolsAsync();\r\n    const pools = [];\r\n    for (let index = 0; index < amount; index++) {\r\n      try {\r\n        const pool = await this.getPoolAsync(index, _account);\r\n        pools.push(pool)\r\n      } catch (error) {\r\n        logger.error(error)();\r\n      }\r\n    }\r\n    return pools;\r\n  }\r\n\r\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\r\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\r\n      return undefined;\r\n    }\r\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\r\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\r\n    const info = await this.toPoolUserInfoAsync(u);\r\n    return info;\r\n  }\r\n\r\n  async getTotalPoolsAsync(): Promise<number> {\r\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\r\n    return Number(result[0].value);\r\n  }\r\n\r\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\r\n    const account = this.getAccount();\r\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\r\n    await this.handleResponseAsync(account.address, result.height);\r\n    return true;\r\n  }\r\n\r\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\r\n    const account = this.getAccount();\r\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\r\n    await this.handleResponseAsync(account.address, result.height);\r\n    return true;\r\n  }\r\n\r\n  private getOffchainMethodAbi(name: string): any {\r\n    let result: Maybe<any>\r\n    if (this._offchainMethods.has(name)) {\r\n      result = this._offchainMethods.get(name)\r\n    } else {\r\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\r\n      if (result) {\r\n        this._offchainMethods.set(name, result)\r\n      }\r\n    }\r\n    if (result) {\r\n      return result\r\n    } else {\r\n      throw new Error(`The offchain method '${name}' does not exist.'`)\r\n    }\r\n  }\r\n\r\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\r\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\r\n      if (result?.status === 0) {\r\n        resolve()\r\n      } else {\r\n        reject(result?.statusTxt ?? \"Something went wrong.\")\r\n      }\r\n    })\r\n  })\r\n\r\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\r\n    try {\r\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\r\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\r\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\r\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\r\n      } else {\r\n        logger.info('Unknown vmlog event.', vmlog)();\r\n      }\r\n    } catch (error) {\r\n      logger.error(error)();\r\n    }\r\n  }\r\n\r\n  private objectFromEntries = (entries: any) => {\r\n    return Object.fromEntries(\r\n      entries.map((entry: any) => {\r\n        return [entry.name, entry.value];\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nconst ds = new ViteDataSource();\r\n\r\nexport const getViteDataSource = () => {\r\n  return ds;\r\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\r\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { Network } from \"../util/types\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class CommonContext {\r\n  private readonly _vite: ViteClient;\r\n  private _datasource: IDataSource;\r\n\r\n  constructor() {\r\n    this._vite = getViteClient();\r\n    this._datasource = getMockDataSource();\r\n  }\r\n\r\n  async initAsync(network: Network): Promise<void> {\r\n    await this.initViteClientAsync(network);\r\n    switch (network.id) {\r\n      case 3:\r\n        this._datasource = getMockDataSource();\r\n        break;\r\n      default:\r\n        this._datasource = getViteDataSource();\r\n        break;\r\n    }\r\n    await this._datasource.initAsync();\r\n  }\r\n\r\n  dispose(): void {\r\n    logger.info(\"Disposing CommonContext\")();\r\n    this._datasource.dispose();\r\n    this._vite.dispose();\r\n  }\r\n\r\n  get datasource(): IDataSource {\r\n    return this._datasource;\r\n  }\r\n\r\n  private async initViteClientAsync(network: Network): Promise<void> {\r\n    try {\r\n      await this._vite.initAsync(network);\r\n    } catch (error) {\r\n      logger.error(error)();\r\n    }\r\n  }\r\n}\r\n\r\nconst context = new CommonContext();\r\n\r\nexport const getCommonContext = () => {\r\n  return context;\r\n}","import { gql } from \"@apollo/client\";\r\nimport { ApolloContext } from \"../clients/apollo.client\";\r\n\r\nexport const DEPOSIT_MUTATION = gql`\r\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\r\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\r\n}\r\n`;\r\n\r\nexport const WITHDRAW_MUTATION = gql`\r\nmutation Withdraw($id: ID!, $amount: String!) {\r\n  withdraw(id: $id, amount: $amount) @client\r\n}\r\n`;\r\n\r\nexport const PoolMutations = {\r\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\r\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\r\n  },\r\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\r\n    return context.client.datasource.withdrawAsync(Number(id), amount);\r\n  }\r\n}","import { gql } from '@apollo/client';\r\nimport BigNumber from 'bignumber.js';\r\nimport { ApolloContext } from '../clients/apollo.client';\r\n\r\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\r\n  query GetAccountBalance($account: String) {\r\n    accountBalance(account: $account) @client\r\n  }\r\n`;\r\n\r\nexport const AccountQueries = {\r\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\r\n    return await context.client.datasource.getAccountBalanceAsync(account);\r\n  }\r\n}","import { gql } from '@apollo/client';\r\nimport BigNumber from 'bignumber.js';\r\nimport { ApolloContext } from '../clients/apollo.client';\r\n\r\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\r\n  query GetNetworkBlockHeight {\r\n    networkBlockHeight @client\r\n  }\r\n`;\r\n\r\nexport const NetworkQueries = {\r\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\r\n    return await context.client.datasource.getNetworkBlockHeightAsync();\r\n  }\r\n}","import { gql } from '@apollo/client';\r\nimport { ApolloContext } from '../clients/apollo.client';\r\nimport { Token } from '../util/types';\r\n\r\nexport const TOKEN_FIELDS = gql`\r\n  fragment TokenFields on Token {\r\n    id\r\n    name\r\n    symbol\r\n    originalSymbol\r\n    decimals\r\n    iconUrl\r\n    url\r\n  }\r\n`;\r\n\r\nexport const GET_TOKEN_QUERY = gql`\r\n  ${TOKEN_FIELDS}\r\n  query GetToken($id: ID!) {\r\n    token(id: $id) @client {\r\n      ...TokenFields\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TokenQueries = {\r\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\r\n    return context.client.datasource.getTokenAsync(id);\r\n  }\r\n}","import { gql } from '@apollo/client';\r\nimport { ApolloContext } from '../clients/apollo.client';\r\nimport { Pool, PoolUserInfo } from '../util/types';\r\nimport { TOKEN_FIELDS } from './token';\r\n\r\nexport const POOL_FIELDS = gql`\r\n  fragment PoolFields on Pool {\r\n    id\r\n    stakingToken {\r\n      ...TokenFields\r\n    }\r\n    rewardToken {\r\n      ...TokenFields\r\n    }\r\n    apr\r\n    totalStaked\r\n    totalRewards\r\n    startBlock\r\n    endBlock\r\n    endTimestamp\r\n    latestRewardBlock\r\n    rewardPerPeriod\r\n    rewardPerToken\r\n    paidOut\r\n    userInfo {\r\n      ...PoolUserInfoFields\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POOL_USER_INFO_FIELDS = gql`\r\n  fragment PoolUserInfoFields on PoolUserInfo {\r\n    id\r\n    poolId\r\n    account\r\n    stakingBalance\r\n    rewardDebt\r\n  }\r\n`;\r\n\r\nexport const GET_POOL_QUERY = gql`\r\n  ${TOKEN_FIELDS}\r\n  ${POOL_USER_INFO_FIELDS}\r\n  ${POOL_FIELDS}\r\n  query GetPool($id: ID!, $account: String) {\r\n    pool(id: $id, account: $account) @client {\r\n      ...PoolFields\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POOLS_QUERY = gql`\r\n  ${TOKEN_FIELDS}\r\n  ${POOL_USER_INFO_FIELDS}\r\n  ${POOL_FIELDS}\r\n  query GetPools($account: String) {\r\n    pools(account: $account) @client {\r\n      ...PoolFields\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_TOTAL_POOLS_QUERY = gql`\r\n  query GetTotalPools {\r\n    totalPools @client\r\n  }\r\n`;\r\n\r\nexport const GET_POOL_USER_INFO_QUERY = gql`\r\n  ${POOL_USER_INFO_FIELDS}\r\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\r\n    poolUserInfo(poolId: $poolId, account: $account) @client {\r\n      ...PoolUserInfoFields\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PoolQueries = {\r\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\r\n    return context.client.datasource.getPoolAsync(Number(id), account);\r\n  },\r\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\r\n    return context.client.datasource.getPoolsAsync(account);\r\n  },\r\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\r\n    return await context.client.datasource.getTotalPoolsAsync();\r\n  },\r\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\r\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\r\n  }\r\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\r\nimport BigNumber from 'bignumber.js';\r\nimport { GraphQLScalarType } from 'graphql';\r\nimport { getCommonContext } from '../contexts/common';\r\nimport { IDataSource } from '../datasources';\r\nimport { PoolMutations } from '../mutations';\r\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\r\nimport { AccountQueries } from '../queries/account';\r\n\r\nexport type ApolloContext = {\r\n  cache: InMemoryCache,\r\n  client: ApolloClientWrapper,\r\n  clientAwareness: any,\r\n  getCacheKey: (obj: any) => string | undefined\r\n}\r\n\r\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\r\n  get datasource(): IDataSource {\r\n    return getCommonContext().datasource;\r\n  }\r\n}\r\n\r\nconst cache: InMemoryCache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst bigNumberScalar = new GraphQLScalarType({\r\n  name: 'BigNumber',\r\n  description: 'BigNumber custom scalar type',\r\n  serialize(value: BigNumber) {\r\n    return value.toString();\r\n  },\r\n  parseValue(value: string) {\r\n    return new BigNumber(value);\r\n  }\r\n});\r\n\r\nconst resolvers: any = {\r\n  BigNumber: bigNumberScalar,\r\n  Query: {\r\n    ...AccountQueries,\r\n    ...NetworkQueries,\r\n    ...PoolQueries,\r\n    ...TokenQueries\r\n  },\r\n  Mutation: {\r\n    ...PoolMutations\r\n  }\r\n};\r\n\r\n// https://www.apollographql.com/docs/react/networking/authentication/#header\r\nconst client = new ApolloClientWrapper({\r\n  // link: authLink.concat(httpLink),\r\n  cache: cache,\r\n  resolvers,\r\n  headers: {\r\n    'client-name': process.env.REACT_APP_NAME || 'client',\r\n    'client-version': process.env.REACT_APP_VERSION || '0',\r\n  },\r\n})\r\n\r\nexport const getApolloClient = () => {\r\n  return client;\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { Network } from \"../util/types\";\r\nimport { Networks } from \"./constants\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class NetworkManager {\r\n  private _networkHeight: BigNumber;\r\n  private _network?: Maybe<Network>;\r\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\r\n\r\n  constructor() {\r\n    this._networkHeight = new BigNumber(0);\r\n  }\r\n\r\n  set networkHeight(height: BigNumber) {\r\n    this._networkHeight = height;\r\n  }\r\n\r\n  get networkHeight(): BigNumber {\r\n    return this._networkHeight;\r\n  }\r\n\r\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\r\n    this._setNetworkCallback = cb;\r\n  }\r\n\r\n  getNetwork(): Maybe<Network> {\r\n    return this._network;\r\n  }\r\n\r\n  setNetwork(network?: Maybe<Network>): void {\r\n    this._network = network;\r\n    if (this._setNetworkCallback) {\r\n      this._setNetworkCallback(this._network);\r\n    }\r\n  }\r\n\r\n  getNetworks(): Network[] {\r\n    try {\r\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\r\n      return Networks.filter(e => ids?.includes(e.id))\r\n    } catch (error) {\r\n      logger.error(error)\r\n    }\r\n    return Networks;\r\n  }\r\n}\r\n\r\nconst manager = new NetworkManager();\r\n\r\nexport const getNetworkManager = () => {\r\n  return manager;\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\r\n\r\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}));\r\n\r\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} arrow classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.arrow}`]: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n}));\r\n\r\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\r\nimport { Box, Chip, Grid, Typography } from '@mui/material';\r\nimport BigNumber from 'bignumber.js';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmitter } from '../../../../util/emitter.util';\r\nimport { GlobalEvent } from '../../../../util/types';\r\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\r\n\r\nexport const Footer: React.FC = () => {\r\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\r\n  const [rotated, setRotated] = useState(false)\r\n  const emitter = getEmitter();\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (height: BigNumber) => {\r\n      const heightString = height.toString();\r\n      let heightRef = height;\r\n      if (heightString.length > 1) {\r\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\r\n      }\r\n      setRotated(heightRef.mod(2).eq(0));\r\n      setNetworkBlockHeight(height);\r\n    }\r\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\r\n    return () => {\r\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\r\n    };\r\n  }, [emitter]);\r\n\r\n  return (\r\n    <Box sx={{ py: \"10px\", px: \"24px\" }}>\r\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\r\n        <Grid item>\r\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\r\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\r\n              <CropSquareIcon sx={{\r\n                color: \"gray\",\r\n                mr: \"2px\",\r\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\r\n                fontSize: \"17px\"\r\n              }} />\r\n              {networkBlockHeight.toString()}\r\n            </Typography>\r\n          </BootstrapTooltip>\r\n        </Grid>\r\n        <Grid item>\r\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\r\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" />\r\n          </BootstrapTooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\r\nimport { CommonConstants } from '../../../../common/constants';\r\n\r\nconst Root = styled('div')(\r\n  ({ theme }) => `\r\n  flex-grow: 1;\r\n`,\r\n);\r\n\r\nconst TitleTypography = styled(Typography)(\r\n  ({ theme }) => `\r\n  flex-grow: 1;\r\n  margin-left: 10px !important;\r\n`,\r\n);\r\n\r\nexport const HeaderLoading: React.FC = (props: any) => {\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\r\n          <TitleTypography variant=\"h6\">\r\n            {CommonConstants.APP_NAME}\r\n          </TitleTypography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root>\r\n  )\r\n}","import { Container, styled } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nconst MainScrollStyled = styled('div')(\r\n  ({ theme }) => `\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  padding-top: 30px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n`,\r\n);\r\n\r\nconst MainScrollInner = styled('div')(\r\n  ({ theme }) => `\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`,\r\n);\r\n\r\nexport const MainScroll: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return (\r\n    <MainScrollStyled {...restProps}>\r\n      <Container maxWidth=\"lg\">\r\n        <MainScrollInner>{children}</MainScrollInner>\r\n      </Container>\r\n    </MainScrollStyled>\r\n  )\r\n}\r\n","import { styled } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst MainWrapperStyled = styled('div')(\r\n  ({ theme }) => `\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n`,\r\n);\r\n\r\nexport const MainWrapper: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\r\n}\r\n","import React, { useState } from 'react';\r\nimport { getNetworkManager } from '../common/network';\r\nimport { Network } from '../util/types';\r\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\r\n\r\nexport interface IWeb3Context {\r\n  setError: (error: Error) => void,\r\n  error?: Maybe<Error>,\r\n  wallet?: Maybe<WebWallet | SessionWallet>\r\n  network?: Maybe<Network>\r\n}\r\n\r\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\r\n\r\nexport const useWeb3Context = () => {\r\n  const context = React.useContext(Web3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\r\n  const [error, setError] = useState<Maybe<Error>>(null)\r\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\r\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\r\n\r\n  const walletManager = getWalletManager()\r\n  walletManager.onSetWalletCallback = setWallet\r\n\r\n  const networkManager = getNetworkManager()\r\n  networkManager.onSetNetworkCallback = setNetwork\r\n\r\n  const context: IWeb3Context = {\r\n    setError,\r\n    error,\r\n    wallet,\r\n    network\r\n  }\r\n\r\n  return (\r\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\r\n  )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Networks } from '../common/constants';\r\nimport { getNetworkManager } from '../common/network';\r\nimport { MainLoading } from '../features/main/components/loading';\r\nimport { getLogger } from '../util/logger';\r\nimport { Network } from '../util/types';\r\nimport { getWalletManager } from '../wallet';\r\nimport { getCommonContext } from './common';\r\nimport { useWeb3Context } from './web3';\r\n\r\nconst logger = getLogger()\r\n\r\nexport interface IConnectedWeb3Context {\r\n  account?: string\r\n  network?: Maybe<Network>\r\n  logout: () => void\r\n}\r\n\r\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\r\n\r\n/**\r\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\r\n */\r\nexport const useConnectedWeb3Context = () => {\r\n  const context = React.useContext(ConnectedWeb3Context)\r\n\r\n  if (!context) {\r\n    throw new Error('Component rendered outside the provider tree')\r\n  }\r\n\r\n  return context\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\n/**\r\n * Component used to render components that depend on Web3 being available. These components can then\r\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\r\n */\r\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\r\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\r\n  const web3Context = useWeb3Context()\r\n  const commonContext = getCommonContext()\r\n\r\n  const { wallet, network } = web3Context\r\n\r\n  useEffect(() => {\r\n    if (!wallet) {\r\n      const walletManager = getWalletManager()\r\n      walletManager.initWallet()\r\n    }\r\n  }, [wallet])\r\n\r\n  useEffect(() => {\r\n    if (!network) {\r\n      const networkManager = getNetworkManager()\r\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\r\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\r\n      logger.info(\"Network:\", networkManager.getNetwork())()\r\n    }\r\n  }, [network])\r\n\r\n  const logout = useCallback(() => {\r\n    const walletManager = getWalletManager()\r\n    walletManager.removeWallet()\r\n    window.location.reload()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const value = {\r\n      account: wallet?.active?.address,\r\n      network,\r\n      logout\r\n    }\r\n\r\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\r\n\r\n    const initAsync = async () => {\r\n      if (network) {\r\n        logger.info('Init ConnectedWeb3')()\r\n        try {\r\n          setConnection(null)\r\n          await commonContext.initAsync(network)\r\n          setConnection(value)\r\n        } catch (error) {\r\n          logger.error(error)();\r\n        }\r\n      }\r\n    }\r\n    initAsync()\r\n    return () => {\r\n      commonContext.dispose()\r\n    }\r\n  }, [wallet, network, logout, commonContext])\r\n\r\n  if (!connection) {\r\n    return MainLoading()\r\n  }\r\n\r\n  const value = {\r\n    ...connection\r\n  }\r\n\r\n  return (\r\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\r\n  )\r\n}","\r\nimport { Typography } from '@mui/material';\r\nimport { Footer } from '../../../layout/components/footer';\r\nimport { HeaderLoading } from '../../../layout/components/header-loading';\r\nimport { MainScroll } from '../../../layout/components/main-scroll';\r\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\r\n\r\nexport const MainLoading = () => {\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <HeaderLoading />\r\n      <MainScroll>\r\n        <Typography>Loading...</Typography>\r\n      </MainScroll>\r\n      <Footer />\r\n    </MainWrapper>\r\n  )\r\n}\r\n","import { CommonUtil } from './common.util';\r\n\r\nexport abstract class FormatUtil {\r\n  static formatMessage(data: any): string {\r\n    const defaultMessage = \"Something went wrong.\"\r\n    if (data) {\r\n      console.log(data)\r\n      let message: string\r\n      if (!CommonUtil.isString(data)) {\r\n        if (data.message) {\r\n          message = data.message\r\n        }\r\n        else if (data.error?.message) {\r\n          message = data.error.message\r\n        } else if (data.graphQLErrors) {\r\n          if (data.graphQLErrors.length > 0) {\r\n            message = data.graphQLErrors[0].message\r\n          } else {\r\n            message = defaultMessage\r\n          }\r\n        } else {\r\n          message = JSON.stringify(data)\r\n          if (message === \"{}\") {\r\n            message = defaultMessage\r\n          }\r\n        }\r\n      } else {\r\n        message = data\r\n      }\r\n      if (message.length > 128) {\r\n        return message.substr(0, 128) + \"...\"\r\n      }\r\n      return message\r\n    }\r\n    return defaultMessage\r\n  }\r\n}","import { ProviderContext } from \"notistack\";\r\nimport { FormatUtil } from \"./format.util\";\r\n\r\nexport abstract class SnackbarUtil {\r\n  static snackbar: ProviderContext;\r\n  static enqueueError(error: any): void {\r\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\r\n  }\r\n  static enqueueMessage(message: string): void {\r\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\r\n  }\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\r\n\r\ninterface Props {\r\n  text?: string\r\n}\r\n\r\nexport const QrCode: React.FC<Props> = (props: Props) => {\r\n  const elementRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const defaultOpt = {\r\n      size: 240,\r\n      ecLevel: ecLevel.HIGH,\r\n      minVersion: 4,\r\n      background: '#fff',\r\n      mode: modes.DRAW_WITH_IMAGE_BOX,\r\n      radius: 0,\r\n      image: process.env.PUBLIC_URL + '/icon.png',\r\n      mSize: 0.3\r\n    };\r\n\r\n    if (props.text && elementRef.current) {\r\n      elementRef.current.innerHTML = ''\r\n      const q = new qrcode(elementRef.current);\r\n      q.generate(props.text, defaultOpt).then(() => {\r\n        console.log('QR code generated')\r\n      });\r\n    }\r\n  }, [props.text])\r\n\r\n  return (\r\n    <div ref={elementRef}></div>\r\n  );\r\n}\r\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react';\r\nimport { getViteClient } from '../../../../clients/vite.client';\r\nimport { getEmitter } from '../../../../util/emitter.util';\r\nimport { GlobalEvent } from '../../../../util/types';\r\nimport { QrCode } from '../qrcode';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\r\n  const { onClose, open, setOpen } = props;\r\n  const viteClient = getViteClient();\r\n  const emitter = getEmitter();\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (open: boolean) => {\r\n      setOpen(open)\r\n    }\r\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\r\n    return () => {\r\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\r\n    };\r\n  }, [emitter, setOpen]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  if (!viteClient.connector) {\r\n    return (\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\r\n      <DialogTitle>Connect Wallet</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Scan the QR code via Vite Wallet App\r\n        </DialogContentText>\r\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\r\n          <QrCode text={viteClient.connector?.uri}></QrCode>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { getNetworkManager } from '../../../../common/network';\r\nimport { Network } from '../../../../util/types';\r\n\r\nconst NetworksFormControl = styled(FormControl)(\r\n  ({ theme }) => ({\r\n    margin: theme.spacing(1),\r\n    '& .MuiSelect-root': {\r\n      color: theme.palette.common.white\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      color: theme.palette.common.white\r\n    }\r\n  }));\r\n\r\nexport const NetworkList: React.FC = () => {\r\n  const networkManager = getNetworkManager()\r\n  const networks = networkManager.getNetworks()\r\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\r\n\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\r\n    if (selectedNetwork) {\r\n      setNetwork(selectedNetwork)\r\n      networkManager.setNetwork(selectedNetwork)\r\n    }\r\n  }\r\n\r\n  return (\r\n    networks.length > 0 ? (\r\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\r\n        <InputLabel id=\"select-network-label\"></InputLabel>\r\n        <Select\r\n          labelId=\"select-network-label\"\r\n          id=\"select-network-label\"\r\n          value={network?.id.toString()}\r\n          onChange={handleChange}\r\n        >\r\n          {networks.map(e => {\r\n            return (\r\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n      </NetworksFormControl>\r\n    ) : (\r\n      <></>\r\n    )\r\n  );\r\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport { CommonConstants } from '../../../../common/constants';\r\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\r\nimport { LoginDialog } from '../../../main/components/login';\r\nimport { NetworkList } from '../../../main/components/network-list';\r\n\r\nconst Root = styled('div')(\r\n  ({ theme }) => `\r\n  flex-grow: 1;\r\n`);\r\n\r\nconst TitleTypography = styled(Typography)(\r\n  ({ theme }) => `\r\n  flex-grow: 1;\r\n  margin-left: 10px !important;\r\n`);\r\n\r\nexport const Header: React.FC = (props: any) => {\r\n  const context = useConnectedWeb3Context();\r\n  const [loginOpen, setLoginOpen] = React.useState(false);\r\n\r\n  const handleClickLogin = () => {\r\n    setLoginOpen(true);\r\n  };\r\n\r\n  const handleClickLogout = () => {\r\n    context.logout();\r\n  };\r\n\r\n  const handleLoginClose = () => {\r\n    setLoginOpen(false);\r\n  };\r\n\r\n  const truncateAddress = (address?: string) => {\r\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <img src={\"./icon_white.png\"} alt=\"logo\" width=\"30\" />\r\n          <TitleTypography variant=\"h6\">\r\n            {CommonConstants.APP_NAME}\r\n          </TitleTypography>\r\n          <NetworkList></NetworkList>\r\n          {context.account ? (\r\n            <>\r\n              <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\r\n                <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\r\n              </BootstrapTooltip >\r\n              <Button color=\"inherit\" onClick={handleClickLogout}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button color=\"inherit\" onClick={handleClickLogin}>\r\n                Login\r\n              </Button>\r\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root >\r\n  )\r\n}","import React from 'react';\r\nimport { Box, Paper, Typography } from '@mui/material';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\n\r\ninterface Props {\r\n  message: string\r\n  type: 'default' | 'warning'\r\n  error?: any\r\n  color?: string\r\n  backgroundColor?: string\r\n}\r\n\r\nexport const Alert: React.FC<Props> = (props: Props) => {\r\n  let color = '#000000';\r\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\r\n\r\n  switch (props.type) {\r\n    case 'warning':\r\n      color = '#611a15';\r\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (props.error) {\r\n    console.log(CommonUtil.toJsonString(props.error));\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <Box sx={{\r\n        color: props.color ?? color,\r\n        backgroundColor: props.backgroundColor ?? backgroundColor,\r\n        padding: '15px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <Typography>{props.message}</Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\r\nimport { getEmitter } from \"../../../../util/emitter.util\";\r\nimport { PoolFilterValues } from \"../../../../util/types\";\r\n\r\nexport const PoolFilter: React.FC = () => {\r\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\r\n  const emitter = getEmitter();\r\n\r\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\r\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\r\n  }\r\n\r\n  const handleSortByChange = (event: SelectChangeEvent) => {\r\n    const newValues = { ...values, sortBy: event.target.value };\r\n    setValues(newValues);\r\n    emitEvent(values, newValues);\r\n  };\r\n\r\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValues = { ...values, [prop]: event.target.value };\r\n    setValues(newValues);\r\n    emitEvent(values, newValues);\r\n  };\r\n\r\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValues = { ...values, [prop]: event.target.checked };\r\n    setValues(newValues);\r\n    emitEvent(values, newValues);\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\r\n      <Grid item xs={12} md={10}>\r\n        <Grid container>\r\n          <Grid item xs sx={{ mr: 2 }}>\r\n            <FormGroup>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <FormControlLabel control={<Checkbox\r\n                  checked={values.stakedOnly}\r\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\r\n                <Stack direction=\"row\" alignItems=\"center\" >\r\n                  <Typography>Ended</Typography>\r\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\r\n                  <Typography>Live</Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <FormGroup>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\r\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\r\n                  <Select\r\n                    labelId=\"sortby-select-label\"\r\n                    id=\"sortby-select\"\r\n                    value={values.sortBy}\r\n                    label=\"Sort by\"\r\n                    onChange={handleSortByChange}\r\n                  >\r\n                    {PoolSortTypes.map(e => (\r\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  id=\"search\"\r\n                  value={values.search}\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  autoComplete=\"off\"\r\n                  onChange={handleChange('search')}\r\n                />\r\n              </Stack>\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { MomentUtil } from \"../util/moment.util\";\r\n\r\nexport class MomentFactory {\r\n  private readonly _map: Map<string, MomentUtil>\r\n\r\n  constructor() {\r\n    this._map = new Map<string, MomentUtil>();\r\n  }\r\n\r\n  create(locale?: Maybe<string>): MomentUtil {\r\n    const _locale = locale ?? navigator.language;\r\n    let util = this._map.get(_locale);\r\n    if (!util) {\r\n      util = new MomentUtil(_locale);\r\n      this._map.set(_locale, util);\r\n    }\r\n    return util;\r\n  }\r\n}\r\n\r\nconst factory = new MomentFactory();\r\n\r\nexport const getMomentFactory = (): MomentFactory => {\r\n  return factory;\r\n}","import { orderBy, partition } from \"lodash\";\r\nimport { PoolSortTypes } from \"../common/constants\";\r\nimport { getMomentFactory } from \"../factories/moment.factory\";\r\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\r\n\r\nexport abstract class FilterUtil {\r\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\r\n    if (!pools) {\r\n      return pools;\r\n    }\r\n    const moment = getMomentFactory().create();\r\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\r\n    let filtered: Pool[] = openPools;\r\n    if (filter.showLive) {\r\n      if (filter.stakedOnly) {\r\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\r\n      } else {\r\n        filtered = openPools;\r\n      }\r\n    } else {\r\n      if (filter.stakedOnly) {\r\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\r\n      } else {\r\n        filtered = closedPools;\r\n      }\r\n    }\r\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\r\n    return FilterUtil.searchPools(filter.search, sorted);\r\n  }\r\n\r\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\r\n    if (!pools || !sortBy) {\r\n      return pools;\r\n    }\r\n    switch (sortBy) {\r\n      case PoolSortTypes[PoolSortType.APR].type:\r\n        return orderBy(\r\n          pools,\r\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\r\n          'desc',\r\n        )\r\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\r\n        return orderBy(\r\n          pools,\r\n          (pool: Pool) => pool.totalStaked.toNumber(),\r\n          'desc',\r\n        )\r\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\r\n      default:\r\n        return pools;\r\n    }\r\n  }\r\n\r\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\r\n    if (!pools || !term) {\r\n      return pools;\r\n    }\r\n    const lowerCaseTerm = term.toLowerCase();\r\n    return pools.filter((pool: Pool) =>\r\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\r\n    );\r\n  }\r\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { getApolloClient } from \"../clients/apollo.client\";\r\nimport { CommonConstants } from \"../common/constants\";\r\nimport { getMomentFactory } from \"../factories\";\r\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\r\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\r\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\r\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\r\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\r\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { MomentUtil } from \"../util/moment.util\";\r\nimport { Pool } from \"../util/types\";\r\nimport { getWalletManager, WalletManager } from \"../wallet\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class PoolService {\r\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\r\n  private readonly _walletManager: WalletManager;\r\n  private readonly _moment: MomentUtil;\r\n\r\n  constructor() {\r\n    this._apollo = getApolloClient();\r\n    this._walletManager = getWalletManager();\r\n    this._moment = getMomentFactory().create();\r\n  }\r\n\r\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\r\n    try {\r\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\r\n        query: GET_POOL_QUERY,\r\n        variables: {\r\n          id: _id.toString()\r\n        },\r\n        fetchPolicy: _fetchPolicy\r\n      });\r\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\r\n        query: GET_POOL_USER_INFO_QUERY,\r\n        variables: {\r\n          poolId: _id,\r\n          account: this._walletManager.getActiveAccount()?.address\r\n        },\r\n        fetchPolicy: _fetchPolicy\r\n      });\r\n      const pool = poolQuery.data.pool as unknown as Pool;\r\n      return {\r\n        ...pool,\r\n        userInfo: userInfoQuery.data.poolUserInfo,\r\n        fetchTimestamp: this._moment.get().unix()\r\n      }\r\n    } catch (error) {\r\n      logger.error(error)();\r\n    }\r\n  }\r\n\r\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\r\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\r\n      mutation: DEPOSIT_MUTATION,\r\n      variables: {\r\n        id: _id.toString(),\r\n        tokenId: _tokenId,\r\n        amount: _amount\r\n      }\r\n    });\r\n    return Boolean(result.data?.deposit ?? false);\r\n  }\r\n\r\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\r\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\r\n      mutation: WITHDRAW_MUTATION,\r\n      variables: {\r\n        id: _id.toString(),\r\n        amount: _amount\r\n      }\r\n    });\r\n    return Boolean(result.data?.withdraw ?? false);\r\n  }\r\n\r\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\r\n    if (!pool?.userInfo) {\r\n      return false;\r\n    }\r\n\r\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\r\n\r\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\r\n    // latestRewardBlock initially set to startBlock, so no updates before that.\r\n    if (latestBlock.lte(pool.latestRewardBlock)) {\r\n      return false;\r\n    }\r\n\r\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\r\n    if (pool.totalStaked.eq(new BigNumber(0))) {\r\n      pool.latestRewardBlock = latestBlock;\r\n      return true;\r\n    }\r\n\r\n    // increase rewardPerToken by reward amount over period since previous reward block.\r\n    const period = latestBlock.minus(pool.latestRewardBlock);\r\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\r\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\r\n\r\n    pool.latestRewardBlock = latestBlock;\r\n    return true;\r\n  }\r\n}\r\n\r\nconst service = new PoolService();\r\n\r\nexport const getPoolService = () => {\r\n  return service;\r\n}","import BigNumber from \"bignumber.js\";\r\nimport { CommonConstants } from \"../common/constants\";\r\nimport { Pool } from \"./types\";\r\n\r\nexport abstract class ViteUtil {\r\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\r\n    if (!pool?.userInfo) {\r\n      return new BigNumber(0);\r\n    }\r\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\r\n  }\r\n\r\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\r\n    return bn.div(new BigNumber(10).pow(tokenDecimals)).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\r\n  }\r\n}","import { LoadingButton } from '@mui/lab';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  size?: 'small' | 'medium' | 'large'\r\n  variant?: 'text' | 'outlined' | 'contained'\r\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\r\n  fullWidth?: boolean\r\n  autoFocus?: boolean\r\n  disabled?: boolean\r\n  callbackFn: () => Promise<void>\r\n}\r\n\r\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\r\n  const [isDisabled, setIsDisabled] = React.useState(false)\r\n\r\n  const handleClick = async () => {\r\n    setIsDisabled(true)\r\n    try {\r\n      await props.callbackFn()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setIsDisabled(false)\r\n  }\r\n\r\n  return (\r\n    <LoadingButton\r\n      loading={isDisabled}\r\n      size={props.size ?? \"small\"}\r\n      variant={props.variant ?? \"contained\"}\r\n      color={props.color ?? \"primary\"}\r\n      fullWidth={props.fullWidth}\r\n      onClick={handleClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </LoadingButton>\r\n  );\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { getNetworkManager } from \"../../../../common/network\";\r\nimport { getMomentFactory } from \"../../../../factories\";\r\nimport { Pool } from \"../../../../util/types\";\r\n\r\ninterface Props {\r\n  pool: Maybe<Pool>\r\n}\r\n\r\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\r\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\r\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\r\n  const [countdown, setCountdown] = useState<string>(\"\");\r\n  const moment = useMemo(() => getMomentFactory().create(), []);\r\n  const networkManager = getNetworkManager();\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      const height = networkManager.networkHeight;\r\n      if (props.pool?.endBlock) {\r\n        let remainingBlocks = new BigNumber(0);\r\n        if (height.lte(props.pool.startBlock)) {\r\n          setHasStarted(false);\r\n          remainingBlocks = props.pool.startBlock.minus(height);\r\n        } else {\r\n          setHasStarted(true);\r\n          remainingBlocks = props.pool.endBlock.minus(height);\r\n        }\r\n        if (remainingBlocks.gte(0)) {\r\n          setRemainingBlocks(remainingBlocks);\r\n          const duration = moment.getDuration(remainingBlocks.toNumber());\r\n          if (duration.days() > 0) {\r\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\r\n          } else if (duration.hours() > 0) {\r\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\r\n          } else if (duration.minutes() > 0) {\r\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\r\n          } else {\r\n            setCountdown(duration.seconds() + \" seconds\")\r\n          }\r\n        } else {\r\n          setRemainingBlocks(new BigNumber(0));\r\n          setCountdown(\"\");\r\n        }\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [props.pool, moment, networkManager]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\" color=\"text.secondary\">\r\n        {hasStarted ? 'Ends in' : 'Starts in'}\r\n      </Typography>\r\n      {!props.pool ? (\r\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\r\n      ) : (\r\n        <>\r\n          {remainingBlocks.gt(0) ? (\r\n            <Typography variant=\"subtitle1\">\r\n              {remainingBlocks.toString()} Blocks\r\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\r\n                {countdown}\r\n              </Typography>\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"subtitle1\">-</Typography>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getPoolService } from '../../../../services/pool.service';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\r\nimport { Pool, PoolDialogState } from '../../../../util/types';\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\n\r\ninterface Props {\r\n  pool: Pool\r\n  state: PoolDialogState\r\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\r\n}\r\n\r\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\r\n  const [amount, setAmount] = useState<string>(\"\");\r\n  const [disabled, setDisabled] = useState<boolean>(false);\r\n  const poolService = getPoolService();\r\n\r\n  const changeAmount = (amount: string) => {\r\n    setAmount(amount);\r\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.state.open) {\r\n      changeAmount(\"\")\r\n    }\r\n  }, [props.state])\r\n\r\n  const handleClose = () => {\r\n    props.setState({\r\n      ...props.state,\r\n      open: false\r\n    })\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeAmount(event.target.value);\r\n  };\r\n\r\n  const handleConfirmAsync = async () => {\r\n    try {\r\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\r\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\r\n      handleClose();\r\n    } catch (error) {\r\n      SnackbarUtil.enqueueError(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\r\n      <DialogTitle>Stake</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}\r\n        </DialogContentText>\r\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\r\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\r\n          <Input\r\n            id=\"contribute-amount\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            autoFocus\r\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\r\n          Confirm\r\n        </ClickOnceButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { getApolloClient } from \"../clients/apollo.client\";\r\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\r\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\r\nimport { CommonUtil } from \"../util/common.util\";\r\nimport { getLogger } from \"../util/logger\";\r\nimport { getWalletManager, WalletManager } from \"../wallet\";\r\n\r\nconst logger = getLogger();\r\n\r\nexport class AccountService {\r\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\r\n  private readonly _walletManager: WalletManager;\r\n\r\n  constructor() {\r\n    this._apollo = getApolloClient();\r\n    this._walletManager = getWalletManager();\r\n  }\r\n\r\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\r\n    try {\r\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\r\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\r\n        return new BigNumber(0);\r\n      }\r\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\r\n        query: GET_ACCOUNT_BALANCE_QUERY,\r\n        variables: {\r\n          account\r\n        },\r\n        fetchPolicy: _fetchPolicy\r\n      });\r\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\r\n      return balance;\r\n    } catch (error) {\r\n      logger.error(error)();\r\n      return new BigNumber(0);\r\n    }\r\n  }\r\n}\r\n\r\nconst service = new AccountService();\r\n\r\nexport const getAccountService = () => {\r\n  return service;\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\r\nimport BigNumber from 'bignumber.js';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { getAccountService } from '../../../../services/account.service';\r\nimport { getPoolService } from '../../../../services/pool.service';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\nimport { getLogger } from '../../../../util/logger';\r\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\r\nimport { Pool, PoolDialogState } from '../../../../util/types';\r\nimport { ViteUtil } from '../../../../util/vite.util';\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\n\r\nconst logger = getLogger();\r\n\r\ninterface Props {\r\n  pool: Pool\r\n  state: PoolDialogState\r\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\r\n}\r\n\r\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\r\n  const getStakedAmount = useCallback(() => {\r\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\r\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18)\r\n    }\r\n    return \"\"\r\n  }, [props.pool])\r\n\r\n  const [amount, setAmount] = useState<string>(getStakedAmount());\r\n  const [disabled, setDisabled] = useState<boolean>(false);\r\n  const accountService = getAccountService();\r\n  const poolService = getPoolService();\r\n\r\n  const changeAmount = (amount: string) => {\r\n    setAmount(amount);\r\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.state.open) {\r\n      changeAmount(getStakedAmount())\r\n    }\r\n  }, [props.state, getStakedAmount])\r\n\r\n  useEffect(() => {\r\n    async function getBalanceAsync() {\r\n      const balance = await accountService.getBalanceAsync();\r\n      logger.info(\"Account balance:\", balance.toString())();\r\n    }\r\n    if (props.state.open) {\r\n      getBalanceAsync();\r\n    }\r\n  }, [props.state, accountService])\r\n\r\n  const handleClose = () => {\r\n    props.setState({\r\n      ...props.state,\r\n      open: false\r\n    })\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeAmount(event.target.value);\r\n  };\r\n\r\n  const handleConfirmAsync = async () => {\r\n    try {\r\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\r\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\r\n      handleClose();\r\n    } catch (error) {\r\n      SnackbarUtil.enqueueError(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\r\n      <DialogTitle>Withdraw</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\r\n        </DialogContentText>\r\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\r\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\r\n          <Input\r\n            id=\"contribute-amount\"\r\n            value={amount}\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            autoFocus\r\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\r\n          />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\r\n          Confirm\r\n        </ClickOnceButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import * as React from 'react';\r\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\r\nimport { PoolDepositDialog } from '../dialog-deposit';\r\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\r\n\r\ninterface Props {\r\n  pool: Pool\r\n  state: PoolDialogState\r\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\r\n}\r\n\r\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\r\n  switch (props.state.type) {\r\n    case PoolDialogType.WITHDRAW:\r\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\r\n    case PoolDialogType.DEPOSIT:\r\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\r\n    default:\r\n      return <></>\r\n  }\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getNetworkManager } from \"../../../../common/network\";\r\nimport { getPoolService } from \"../../../../services/pool.service\";\r\nimport { Pool } from \"../../../../util/types\";\r\nimport { ViteUtil } from \"../../../../util/vite.util\";\r\n\r\ninterface Props {\r\n  pool: Maybe<Pool>\r\n  account?: Maybe<string>\r\n  decimals: number\r\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const Rewards: React.FC<Props> = (props: Props) => {\r\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\r\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\r\n  const poolService = getPoolService();\r\n  const networkManager = getNetworkManager();\r\n\r\n  useEffect(() => {\r\n    setPool(props.pool);\r\n  }, [props.pool]);\r\n\r\n  useEffect(() => {\r\n    if (pool) {\r\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\r\n      setRewardTokens(newRewardTokens);\r\n      if (props.setCanClaim) {\r\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\r\n      }\r\n    } else {\r\n      setRewardTokens(new BigNumber(0));\r\n      if (props.setCanClaim) {\r\n        props.setCanClaim(false);\r\n      }\r\n    }\r\n  }, [pool, props]);\r\n\r\n  useEffect(() => {\r\n    if (pool) {\r\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\r\n      setRewardTokens(newRewardTokens);\r\n      if (props.setCanClaim) {\r\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\r\n      }\r\n    } else {\r\n      setRewardTokens(new BigNumber(0));\r\n      if (props.setCanClaim) {\r\n        props.setCanClaim(false);\r\n      }\r\n    }\r\n  }, [pool, props]);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      const height = networkManager.networkHeight;\r\n      if (pool) {\r\n        const updated = poolService.updateRewardPerToken(pool, height);\r\n        if (updated) {\r\n          const newPool: Pool = {\r\n            ...pool\r\n          }\r\n          setPool(newPool);\r\n        }\r\n      }\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [pool, poolService, networkManager]);\r\n\r\n  const showRewardTokens = (decimals: number): string => {\r\n    if (!pool) {\r\n      return \"0\";\r\n    }\r\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showRewardTokens(props.decimals)}\r\n    </>\r\n  );\r\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { getCoinUtil } from \"../../../../util/coin.util\";\r\nimport { Pool } from \"../../../../util/types\";\r\n\r\ninterface Props {\r\n  loading: boolean\r\n  pool: Maybe<Pool>\r\n}\r\n\r\nexport const Tokens: React.FC<Props> = (props: Props) => {\r\n  const BigCoin = styled(Avatar)(({ theme }) => ({\r\n    width: 50,\r\n    height: 50,\r\n    backgroundColor: \"white\",\r\n    border: \"1px solid black\"\r\n  }));\r\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\r\n    width: 30,\r\n    height: 30,\r\n    backgroundColor: \"white\",\r\n    border: `1px solid ${theme.palette.grey[600]}`\r\n  }));\r\n  const coinUtil = getCoinUtil();\r\n\r\n  return (\r\n    <Grid container alignItems=\"center\" spacing={2}>\r\n      <Grid item>\r\n        <Badge\r\n          overlap=\"circular\"\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n          badgeContent={\r\n            <SmallCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\r\n          }\r\n        >\r\n          <BigCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\r\n        </Badge>\r\n      </Grid>\r\n      <Grid item>\r\n        {props.loading ? (\r\n          <>\r\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\r\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Typography variant=\"subtitle1\">\r\n              Earn {props.pool?.rewardToken.originalSymbol}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Stake {props.pool?.stakingToken.originalSymbol}\r\n            </Typography>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Grid >\r\n  );\r\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getNetworkManager } from '../../../../common/network';\r\nimport { getPoolService } from '../../../../services/pool.service';\r\nimport { getEmitter } from '../../../../util/emitter.util';\r\nimport { getLogger } from \"../../../../util/logger\";\r\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\r\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\r\nimport { ViteUtil } from \"../../../../util/vite.util\";\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\nimport { PoolCountdown } from \"../countdown\";\r\nimport { PoolDialog } from \"../dialog\";\r\nimport { Rewards } from '../rewards';\r\nimport { Tokens } from \"../tokens\";\r\n\r\nconst logger = getLogger()\r\n\r\nconst TransparentPaper = styled(Paper)(\r\n  ({ theme }) => ({\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(1),\r\n    backgroundColor: \"transparent\"\r\n  }));\r\n\r\ninterface Props {\r\n  account?: Maybe<string>\r\n  pool?: Maybe<Pool>\r\n}\r\n\r\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\r\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\r\n    type: PoolDialogType.DEPOSIT,\r\n    open: false\r\n  });\r\n  const [canStake, setCanStake] = useState<boolean>(false);\r\n  const [canClaim, setCanClaim] = useState<boolean>(false);\r\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\r\n  const emitter = getEmitter();\r\n  const poolService = getPoolService();\r\n  const networkManager = getNetworkManager();\r\n\r\n  useEffect(() => {\r\n    if (props.pool) {\r\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\r\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\r\n    } else {\r\n      setCanWithdraw(false);\r\n    }\r\n  }, [props.pool, props.account]);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      setCanStake(!!props.pool && !!props.account && networkManager.networkHeight.gte(props.pool.startBlock));\r\n    }, 500);\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [props.pool, props.account, networkManager]);\r\n\r\n  const showApr = (): Maybe<string> => {\r\n    if (!props.pool || !props.pool.apr) {\r\n      return \"0\";\r\n    }\r\n    return props.pool.apr.toFormat(2);\r\n  }\r\n\r\n  const showTotalStaked = (): string => {\r\n    if (!props.pool) {\r\n      return \"0\";\r\n    }\r\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\r\n  }\r\n\r\n  const showStaked = (decimals: number): string => {\r\n    if (!props.pool?.userInfo) {\r\n      return \"0\";\r\n    }\r\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\r\n  }\r\n\r\n  const handleConnectWallet = () => {\r\n    emitter.emitConnectWalletDialog(true);\r\n  }\r\n\r\n  const handleClickDeposit = () => {\r\n    setDialogState({\r\n      ...dialogState,\r\n      type: PoolDialogType.DEPOSIT,\r\n      open: true\r\n    })\r\n  }\r\n\r\n  const handleClickWithdraw = () => {\r\n    setDialogState({\r\n      ...dialogState,\r\n      type: PoolDialogType.WITHDRAW,\r\n      open: true\r\n    })\r\n  }\r\n\r\n  const handleClickClaimAsync = async () => {\r\n    try {\r\n      if (props.pool) {\r\n        await poolService.withdrawAsync(props.pool.id, \"0\");\r\n      }\r\n    } catch (error) {\r\n      SnackbarUtil.enqueueError(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultExpanded>\r\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\r\n            </Grid>\r\n            <Grid item xs container alignItems=\"center\">\r\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\r\n                <Grid item>\r\n                  {!props.pool ? (\r\n                    <>\r\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\r\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {props.pool?.rewardToken.originalSymbol} earned\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\">\r\n                        <Rewards pool={props.pool} decimals={4}></Rewards>\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    APR\r\n                  </Typography>\r\n                  {!props.pool ? (\r\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\r\n                  ) : (\r\n                    <Typography variant=\"subtitle1\">\r\n                      {props.pool.apr ? (\r\n                        <>\r\n                          {showApr()}%\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          -\r\n                        </>\r\n                      )}\r\n                    </Typography>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total staked\r\n                  </Typography>\r\n                  {!props.pool ? (\r\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\r\n                  ) : (\r\n                    <Typography variant=\"subtitle1\">\r\n                      {showTotalStaked()}\r\n                    </Typography>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <PoolCountdown pool={props.pool} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item sx={{ mr: 4 }}>\r\n              <Link underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\r\n                View {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\r\n              </Link>\r\n              <Link underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\r\n                View {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs container alignItems=\"center\">\r\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\r\n                <Grid item xs={12} md={6} lg={5} zeroMinWidth>\r\n                  <TransparentPaper variant=\"outlined\">\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {props.pool?.rewardToken.originalSymbol} earned\r\n                    </Typography>\r\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      {!props.pool ? (\r\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\r\n                      ) : (\r\n                        <Typography sx={{ width: \"100%\" }} noWrap>\r\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\r\n                        </Typography>\r\n                      )}\r\n                      <Box sx={{ ml: 2 }} >\r\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\r\n                          Claim\r\n                        </ClickOnceButton>\r\n                      </Box>\r\n                    </Box>\r\n                  </TransparentPaper>\r\n                </Grid>\r\n                {!props.account ? (\r\n                  <Grid item xs={12} md={6} lg={5}>\r\n                    <TransparentPaper variant=\"outlined\">\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Start staking\r\n                      </Typography>\r\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\r\n                    </TransparentPaper>\r\n                  </Grid>\r\n                ) : (\r\n                  <>\r\n                    <Grid item xs={12} md={6} lg={5} zeroMinWidth>\r\n                      <TransparentPaper variant=\"outlined\">\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          Staked\r\n                        </Typography>\r\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          {!props.pool ? (\r\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\r\n                          ) : (\r\n                            <Typography sx={{ width: \"100%\" }} noWrap>\r\n                              {showStaked(18)}\r\n                            </Typography>\r\n                          )}\r\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\r\n                            Withdraw\r\n                          </Button>\r\n                        </Box>\r\n                      </TransparentPaper>\r\n                    </Grid>\r\n                    <Grid item xs={12} md sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\r\n                        Stake\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {props.pool && (\r\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\r\n      )}\r\n    </>\r\n  );\r\n}","import { Grid } from \"@mui/material\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\r\nimport { getCommonContext } from \"../../../../contexts/common\";\r\nimport { getEmitter } from \"../../../../util/emitter.util\";\r\nimport { FilterUtil } from \"../../../../util/filter.util\";\r\nimport { getLogger } from \"../../../../util/logger\";\r\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\r\nimport { Alert } from \"../../../common/components/alert\";\r\nimport { PoolListItem } from \"../list-item\";\r\n\r\nconst logger = getLogger()\r\n\r\ninterface Props {\r\n  account?: Maybe<string>\r\n  pools?: Maybe<Pool[]>\r\n}\r\n\r\nexport const PoolList: React.FC<Props> = (props: Props) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true)\r\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\r\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\r\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\r\n  const emitter = getEmitter()\r\n  const commonContext = getCommonContext()\r\n\r\n  useEffect(() => {\r\n    if (props.pools) {\r\n      setIsLoading(false)\r\n    } else {\r\n      setIsLoading(true)\r\n    }\r\n    setAllPools(props.pools)\r\n  }, [props.pools])\r\n\r\n  useEffect(() => {\r\n    setPools(FilterUtil.filterPools(filter, allPools))\r\n  }, [allPools, filter])\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\r\n      setFilter(newValues)\r\n    }\r\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\r\n    return () => {\r\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\r\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\r\n    };\r\n  }, [emitter])\r\n\r\n  useEffect(() => {\r\n    const replacePool = (pool: Pool) => {\r\n      if (allPools && pool) {\r\n        const index = allPools.findIndex(e => e.id === pool.id)\r\n        if (index >= 0) {\r\n          // Replace existing\r\n          const updatedPools = [...allPools]\r\n          updatedPools[index] = {\r\n            ...pool\r\n          }\r\n          setAllPools(updatedPools)\r\n        } else {\r\n          // Prepend to existing pools\r\n          setAllPools([pool, ...allPools])\r\n        }\r\n      }\r\n    }\r\n    const handlePoolEvent = async (id: number, amount: BigNumber, account: string) => {\r\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\r\n      replacePool(pool)\r\n    }\r\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\r\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\r\n    return () => {\r\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\r\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\r\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\r\n    };\r\n  }, [emitter, allPools, commonContext, props.account])\r\n\r\n  if (!isLoading && pools && pools.length <= 0) {\r\n    return (\r\n      <Grid item key=\"1\" xs={12} md={6}>\r\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\r\n      {isLoading ? (\r\n        <>\r\n          {[0, 1, 2].map((index: number) => (\r\n            <Grid item key={index} xs={12} md={10}>\r\n              <PoolListItem></PoolListItem>\r\n            </Grid>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {pools?.map((p: Pool) => (\r\n            <Grid item key={p.id} xs={12} md={10}>\r\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\r\n            </Grid>\r\n          ))}\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useQuery } from '@apollo/client';\r\nimport { Container, Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\r\nimport { GET_POOLS_QUERY } from '../../../../queries';\r\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\r\nimport { Pool } from '../../../../util/types';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { PoolFilter } from '../filter';\r\nimport { PoolList } from '../list';\r\n\r\nexport const Pools: React.FC = () => {\r\n  const context = useConnectedWeb3Context();\r\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\r\n    variables: {\r\n      account: context.account\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  const error = poolQuery.error\r\n\r\n  if (error) {\r\n    return (\r\n      <Grid item key=\"1\" xs={12} md={6}>\r\n        <Alert message={error.message} type=\"warning\"></Alert>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <PoolFilter></PoolFilter>\r\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getEmitter } from '../../../../util/emitter.util';\r\nimport { GlobalEvent } from '../../../../util/types';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const ConfirmTransactionDialog: React.FC = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const emitter = getEmitter();\r\n\r\n  useEffect(() => {\r\n    const handleEvent = (open: boolean) => {\r\n      setOpen(open)\r\n    }\r\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\r\n    return () => {\r\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\r\n    };\r\n  }, [emitter, setOpen])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      style={{ zIndex: 9999 }}\r\n    >\r\n      <DialogTitle>ViteConnect</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please confirm transaction on VITE Wallet App\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import { useQuery } from '@apollo/client';\r\nimport { useEffect } from 'react';\r\nimport { getNetworkManager } from '../../../../common/network';\r\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\r\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\r\nimport { getEmitter } from '../../../../util/emitter.util';\r\n\r\nexport const Network: React.FC = () => {\r\n  const networkManager = getNetworkManager();\r\n  const emitter = getEmitter();\r\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(async () => {\r\n      await query.refetch();\r\n      if (query.data?.networkBlockHeight) {\r\n        const height = query.data.networkBlockHeight;\r\n        emitter.emitNetworkBlockHeightChanged(height);\r\n        networkManager.networkHeight = height;\r\n      }\r\n    }, 1000)\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}\r\n","import { useSnackbar } from 'notistack';\r\nimport React from 'react';\r\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\r\nimport { Footer } from '../../../layout/components/footer';\r\nimport { Header } from '../../../layout/components/header';\r\nimport { MainScroll } from '../../../layout/components/main-scroll';\r\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\r\nimport { Pools } from '../../../pool/components/main';\r\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\r\nimport { Network } from '../network';\r\n\r\nexport const Main: React.FC = (props: any) => {\r\n  SnackbarUtil.snackbar = useSnackbar();\r\n  return (\r\n    <MainWrapper>\r\n      <Header />\r\n      <Network />\r\n      <MainScroll>\r\n        <Pools></Pools>\r\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>\r\n      </MainScroll>\r\n      <Footer />\r\n    </MainWrapper>\r\n  )\r\n}\r\n","import { ApolloProvider } from '@apollo/client';\nimport { styled } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport BackgroundSVG from './bg.svg';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n    <Background>\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main />\n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider>\n      </SnackbarProvider>\n    </Background>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\n\r\n// A custom theme for this app\r\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#007aff',\r\n    },\r\n    secondary: {\r\n      main: '#c5d5ff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\r\n  static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\r\n    if (!CommonUtil.isString(value)) {\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\r\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\r\n  }\r\n\r\n  static timeout(ms: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\r\n    if (str) {\r\n      if (maxLength < str.length) {\r\n        return `${str.substr(0, maxLength)}...`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\r\n    if (str) {\r\n      const minTruncatedLength = strPositionStart + strPositionEnd\r\n      if (minTruncatedLength < str.length) {\r\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static toJsonString(data: any): string {\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n\r\n  static async imageUrlToBlob(url: string): Promise<Blob> {\r\n    return (await fetch(url)).blob();\r\n  }\r\n\r\n  static random(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  static equals(lh: any, rh: any): boolean {\r\n    // The ORDER of the properties IS IMPORTANT\r\n    return JSON.stringify(lh) === JSON.stringify(rh);\r\n  }\r\n}","import BigNumber from 'bignumber.js';\r\nimport EventEmitter from 'events';\r\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\r\n\r\nexport interface IGlobalEmitter {\r\n  emitConfirmTransactionDialog(open: boolean): void\r\n  emitConnectWalletDialog(open: boolean): void\r\n  emitNetworkBlockHeightChanged(height: BigNumber): void\r\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\r\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\r\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\r\n  emitPoolUpdate(pool: Pool): void\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this\r\n}\r\n\r\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\r\n  emitConfirmTransactionDialog(open: boolean): void {\r\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\r\n  }\r\n  emitConnectWalletDialog(open: boolean): void {\r\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\r\n  }\r\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\r\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\r\n  }\r\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\r\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\r\n  }\r\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\r\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\r\n  }\r\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\r\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\r\n  }\r\n  emitPoolUpdate(pool: Pool): void {\r\n    this.emit(GlobalEvent.PoolUpdate, pool)\r\n  }\r\n}\r\n\r\nconst emitter = new GlobalEmitter();\r\n\r\nexport const getEmitter = (): IGlobalEmitter => {\r\n  return emitter;\r\n}\r\n","export enum WalletType {\r\n  Web = 'Web',\r\n  Session = 'Session'\r\n}\r\n\r\nexport abstract class Wallet<T> {\r\n  private readonly _type: WalletType\r\n\r\n  active?: T\r\n  accounts: T[] = []\r\n\r\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\r\n    this._type = type\r\n    this.baseInitinit(init)\r\n  }\r\n\r\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\r\n    data = typeof data === 'object' ? data : {}\r\n    switch (data._type) {\r\n      case WalletType.Web:\r\n        return new WebWallet(data)\r\n      case WalletType.Session:\r\n        return new SessionWallet(data)\r\n      default:\r\n        break\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  get type(): WalletType {\r\n    return this._type\r\n  }\r\n\r\n  protected abstract createAccount(data: any): T\r\n\r\n  private baseInitinit(data?: any): void {\r\n    if (data) {\r\n      this.active = data.active ? this.createAccount(data.active) : undefined\r\n      if (data.accounts && Array.isArray(data.accounts)) {\r\n        data.accounts.forEach((account: any) => {\r\n          this.accounts.push(this.createAccount(account))\r\n        })\r\n      }\r\n    }\r\n    if (!this.accounts) {\r\n      this.accounts = []\r\n    }\r\n  }\r\n}\r\n\r\nexport class WebWallet extends Wallet<WebWalletAccount> {\r\n  mnemonic!: string\r\n\r\n  constructor(init?: Partial<WebWallet>) {\r\n    super(WalletType.Web, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.mnemonic = data.mnemonic\r\n    }\r\n  }\r\n\r\n  protected createAccount(data: any): WebWalletAccount {\r\n    return new WebWalletAccount(data)\r\n  }\r\n}\r\n\r\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\r\n  session!: string\r\n  timestamp!: number\r\n\r\n  constructor(init?: Partial<SessionWallet>) {\r\n    super(WalletType.Session, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.session = data.session\r\n      this.timestamp = data.timestamp\r\n    }\r\n  }\r\n\r\n  protected createAccount(data: any): SessionWalletAccount {\r\n    return new SessionWalletAccount(data)\r\n  }\r\n}\r\n\r\nexport enum WalletAccountType {\r\n  Web = 'Web',\r\n  Session = 'Session'\r\n}\r\n\r\nexport abstract class WalletAccount {\r\n  private readonly _type: WalletAccountType\r\n\r\n  id!: string\r\n  address!: string\r\n\r\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\r\n    this._type = type\r\n    this.baseInit(init)\r\n  }\r\n\r\n  static fromJS(data: any): Maybe<WalletAccount> {\r\n    data = typeof data === 'object' ? data : {}\r\n    switch (data._type) {\r\n      case WalletType.Web:\r\n        return new WebWalletAccount(data)\r\n      case WalletType.Session:\r\n        return new SessionWalletAccount(data)\r\n      default:\r\n        break\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  get type(): WalletAccountType {\r\n    return this._type\r\n  }\r\n\r\n  private baseInit(data?: any): void {\r\n    if (data) {\r\n      this.id = data.id\r\n      this.address = data.address\r\n    }\r\n  }\r\n}\r\n\r\nexport class WebWalletAccount extends WalletAccount {\r\n  privateKey!: string\r\n\r\n  constructor(init?: Partial<WebWalletAccount>) {\r\n    super(WalletAccountType.Web, init)\r\n    this.init(init)\r\n  }\r\n\r\n  init(data?: any): void {\r\n    if (data) {\r\n      this.privateKey = data.privateKey\r\n    }\r\n  }\r\n}\r\n\r\nexport class SessionWalletAccount extends WalletAccount {\r\n  constructor(init?: Partial<SessionWalletAccount>) {\r\n    super(WalletAccountType.Session, init)\r\n  }\r\n}","import Connector from '@vite/connector';\r\nimport { WalletManager } from '.';\r\nimport { getLogger } from '../util/logger';\r\nimport { SessionWallet, SessionWalletAccount } from './types';\r\n\r\nconst logger = getLogger()\r\n\r\nexport interface IWalletConnector {\r\n  readonly uri: string\r\n  sendTransactionAsync(...args: any): Promise<any>\r\n  signMessageAsync(...args: any): Promise<any>\r\n  killSessionAsync(): Promise<void>\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this\r\n}\r\n\r\nexport class WalletConnector extends Connector implements IWalletConnector {\r\n  private readonly _walletManager: WalletManager;\r\n\r\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\r\n    super(opts, meta);\r\n    this._walletManager = walletManager;\r\n    this.on('connect', (err: any, payload: any) => {\r\n      logger.info('WalletConnector.connect', err, payload)()\r\n      const { accounts } = payload.params[0];\r\n      this.saveSession(accounts);\r\n    });\r\n    this.on('disconnect', (err: any, payload: any) => {\r\n      logger.info('WalletConnector.disconnect', err, payload)()\r\n      this.stopBizHeartBeat()\r\n      this._walletManager.removeWallet()\r\n    });\r\n    this.on('session_update', (err: any, payload: any) => {\r\n      logger.info('WalletConnector.session_update', err, payload)()\r\n      const session = payload[0];\r\n      if (session && session.accounts) {\r\n        this.saveSession(session.accounts);\r\n      }\r\n    });\r\n  }\r\n\r\n  get uri(): string {\r\n    return super.uri\r\n  }\r\n\r\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\r\n    return super.on(event, listener)\r\n  }\r\n\r\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\r\n    return super.off(event, listener)\r\n  }\r\n\r\n  saveSession(accounts: string[]): void {\r\n    if (!accounts || !accounts[0]) {\r\n      throw new Error('address is null');\r\n    }\r\n    const sessionAccounts: SessionWalletAccount[] = []\r\n    for (let index = 0; index < accounts.length; index++) {\r\n      const address = accounts[index];\r\n      sessionAccounts.push(new SessionWalletAccount({\r\n        id: index.toString(),\r\n        address: address\r\n      }))\r\n    }\r\n    const wallet = new SessionWallet({\r\n      active: sessionAccounts[0],\r\n      accounts: sessionAccounts,\r\n      session: this.session,\r\n      timestamp: new Date().getTime()\r\n    })\r\n    this._walletManager.setWallet(wallet)\r\n  }\r\n\r\n  updateSession(): void {\r\n    const existing = this._walletManager.getWallet()\r\n    if (existing && existing instanceof SessionWallet) {\r\n      existing.timestamp = new Date().getTime()\r\n      this._walletManager.updateWalletStore(existing)\r\n    }\r\n  }\r\n\r\n  async createSession(): Promise<string> {\r\n    await super.createSession();\r\n    return this.uri;\r\n  }\r\n\r\n  async sendTransactionAsync(...args: any): Promise<any> {\r\n    return new Promise((res, rej) => {\r\n      this.on('disconnect', () => {\r\n        rej(\"Request aborted due to disconnect.\");\r\n      });\r\n\r\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\r\n        this.updateSession();\r\n        res(r);\r\n      }).catch((e: any) => {\r\n        rej(e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async signMessageAsync(...args: any): Promise<any> {\r\n    return new Promise((res, rej) => {\r\n      this.on('disconnect', () => {\r\n        rej(\"Request aborted due to disconnect.\");\r\n      });\r\n\r\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\r\n        this.updateSession();\r\n        res(r);\r\n      }).catch((e: any) => {\r\n        rej(e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async killSessionAsync(): Promise<any> {\r\n    await super.killSession();\r\n  }\r\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\r\nimport { getLogger } from '../util/logger';\r\nimport { Network } from '../util/types';\r\n\r\nconst logger = getLogger()\r\n\r\nexport class WalletConnectorFactory {\r\n  private readonly _walletManager: WalletManager\r\n\r\n  constructor(walletManager: WalletManager) {\r\n    this._walletManager = walletManager\r\n  }\r\n\r\n  create(network: Network): IWalletConnector {\r\n    const session = this._walletManager.getValidSession()\r\n    const account = this._walletManager.getActiveAccount()\r\n    const opts = {\r\n      bridge: network.connectorUrl,\r\n      session\r\n    }\r\n    const meta = account ? { lastAccount: account.address } : undefined\r\n    const connector = new WalletConnector(this._walletManager, opts, meta)\r\n\r\n    if (!session) {\r\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\r\n    }\r\n\r\n    return connector\r\n  }\r\n}","import { SessionWallet, Wallet, WebWallet } from '.';\r\nimport { CommonConstants } from '../common/constants';\r\nimport { getLogger } from '../util/logger';\r\nimport { WalletType } from './types';\r\n\r\nconst logger = getLogger()\r\n\r\nexport class WalletStore {\r\n\r\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\r\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\r\n\r\n  clear(): void {\r\n    localStorage.removeItem(this._webWalletKey);\r\n    sessionStorage.removeItem(this._sessionWalletKey);\r\n  }\r\n\r\n  getItem(): Maybe<WebWallet | SessionWallet> {\r\n    let data;\r\n\r\n    try {\r\n      data = localStorage.getItem(this._webWalletKey);\r\n      if (!data) {\r\n        data = sessionStorage.getItem(this._sessionWalletKey);\r\n      }\r\n    } catch (err) {\r\n      logger.error(err)();\r\n      return undefined;\r\n    }\r\n\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n\r\n    try {\r\n      return Wallet.fromJS(JSON.parse(data));\r\n    } catch (err) {\r\n      logger.error(err)();\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  setItem(data: WebWallet | SessionWallet): void {\r\n    const saveData = JSON.stringify(data);\r\n\r\n    try {\r\n      switch (data.type) {\r\n        case WalletType.Web:\r\n          localStorage.setItem(this._webWalletKey, saveData);\r\n          break;\r\n        case WalletType.Session:\r\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\r\n          break;\r\n        default:\r\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\r\n      }\r\n    } catch (err) {\r\n      logger.error(err)();\r\n    }\r\n  }\r\n}","import { wallet } from '@vite/vitejs';\r\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\r\nimport { getLogger } from '../util/logger';\r\nimport { WalletStore } from './store';\r\n\r\nconst logger = getLogger()\r\n\r\nexport class WalletManager {\r\n  private readonly _store: WalletStore;\r\n  private _wallet?: WebWallet | SessionWallet;\r\n  private _mnemonicDeriveIndex = 0;\r\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\r\n\r\n  constructor() {\r\n    this._store = new WalletStore();\r\n  }\r\n\r\n  initWallet(): void {\r\n    const wallet = this._store.getItem();\r\n    if (wallet) {\r\n      this._wallet = wallet;\r\n      this._mnemonicDeriveIndex = wallet.accounts.length;\r\n      this.updateWallet();\r\n    }\r\n  }\r\n\r\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\r\n    this._setWalletCallback = cb;\r\n  }\r\n\r\n  getWallet(): Maybe<WebWallet | SessionWallet> {\r\n    return this._wallet;\r\n  }\r\n\r\n  setWallet(wallet?: WebWallet | SessionWallet): void {\r\n    this._wallet = wallet;\r\n    this.updateWalletStore(wallet)\r\n    this.updateWallet()\r\n  }\r\n\r\n  updateWallet(): void {\r\n    if (this._setWalletCallback) {\r\n      this._setWalletCallback(this._wallet);\r\n    }\r\n  }\r\n\r\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\r\n    if (wallet) {\r\n      this._store.setItem(wallet);\r\n    }\r\n  }\r\n\r\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\r\n    if (!this.validateMnemonic(mnemonic)) {\r\n      return undefined;\r\n    }\r\n    this.resetWallet();\r\n    const account = this.createWebWalletAccount(mnemonic, 0);\r\n    const wallet = new WebWallet({\r\n      active: account,\r\n      mnemonic,\r\n      accounts: [\r\n        account\r\n      ]\r\n    });\r\n    this.setWallet(wallet);\r\n    return wallet;\r\n  }\r\n\r\n  removeWallet(): void {\r\n    this.resetWallet();\r\n    this.updateWallet();\r\n  }\r\n\r\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\r\n    return this._wallet?.accounts?.find(e => e.address === address)\r\n  }\r\n\r\n  addAccount(): Maybe<WalletAccount> {\r\n    if (this._wallet instanceof WebWallet) {\r\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\r\n      this._wallet.accounts.push(account);\r\n      this.setActiveAccount(account);\r\n      return account;\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getActiveAccount(): Maybe<WalletAccount> {\r\n    return this._wallet?.active\r\n  }\r\n\r\n  setActiveAccount(account: WalletAccount): boolean {\r\n    if (this._wallet) {\r\n      this._wallet.active = account;\r\n      this._store.setItem(this._wallet);\r\n      this.updateWallet();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getAccounts(): WalletAccount[] {\r\n    if (this._wallet) {\r\n      return this._wallet.accounts;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getValidSession(): Maybe<string> {\r\n    const wallet = this._store.getItem();\r\n    if (wallet && wallet instanceof SessionWallet) {\r\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\r\n        return wallet.session;\r\n      } else {\r\n        logger.info('Found expired session.', wallet)();\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private resetWallet(): void {\r\n    this._wallet = undefined;\r\n    this._mnemonicDeriveIndex = 0;\r\n    this._store.clear();\r\n  }\r\n\r\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\r\n    const { privateKey } = wallet.deriveAddress({\r\n      mnemonics: mnemonic,\r\n      index\r\n    });\r\n    let account = new WebWalletAccount({\r\n      id: index.toString(),\r\n      privateKey,\r\n      address: wallet.createAddressByPrivateKey(privateKey).address\r\n    });\r\n    this._mnemonicDeriveIndex = index + 1;\r\n    return account;\r\n  }\r\n\r\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\r\n    if (mnemonic) {\r\n      return wallet.validateMnemonics(mnemonic);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nconst manager = new WalletManager();\r\n\r\nexport const getWalletManager = () => {\r\n  return manager;\r\n}"],"sourceRoot":""}