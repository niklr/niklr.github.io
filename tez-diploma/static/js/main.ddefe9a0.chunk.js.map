{"version":3,"sources":["storage/item.storage.ts","storage/profile.storage.ts","util/common.util.ts","util/ensure.ts","util/file.util.ts","clients/api.client.ts","common/constants.ts","queries/entity.ts","queries/item.ts","queries/profile.ts","clients/apollo.client.ts","clients/ipfs.client.ts","common/config.ts","util/tezos.util.ts","clients/tezos.client.ts","features/common/components/click-once-button/component.tsx","mutations/entity.ts","services/entity.service.ts","util/format.util.ts","features/entity/components/save-dialog/component.tsx","features/common/components/hero/component.tsx","features/common/components/logo/component.tsx","features/common/components/test/component.tsx","features/common/components/editor/component.tsx","features/common/components/editor/theme.js","features/item/components/editor/component.tsx","features/common/components/alert/component.tsx","queries/template.ts","queries/document.ts","features/document/components/card/component.tsx","features/entity/components/overview/component.tsx","features/entity/components/card/component.tsx","features/entity/components/selected-list/component.tsx","mutations/template.ts","services/template.service.ts","features/template/components/save-dialog/component.tsx","features/template/components/editor/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","mutations/document.ts","services/document.service.ts","features/document/components/save-dialog/component.tsx","features/document/components/editor/component.tsx","features/account/components/overview/component.tsx","util/moment.util.ts","features/document/components/overview/component.tsx","features/main/components/main/component.tsx","util/logger.ts","App.tsx","reportWebVitals.ts","common/theme.ts","index.tsx"],"names":["storage","selectedItems","now","Date","index","this","push","id","toString","createdDate","modifiedDate","name","description","imageUrl","_profileVar","makeVar","useDarkMode","profileVar","update","profile","getProfileStorage","CommonUtil","value","String","isString","undefined","trim","defaultValue","isNullOrWhitespace","ms","Promise","resolve","setTimeout","data","JSON","stringify","url","fetch","blob","truncateString","str","maxLength","length","substr","truncateStringInTheMiddle","strPositionStart","strPositionEnd","FileUtilType","Ensure","property","propertyName","Error","message","client","_baseUrl","_itemStorage","notNullOrWhiteSpace","process","endsWith","response","transformFn","Array","isArray","map","e","reject","timeout","result","signature","publicKey","axios","post","filename","FormData","append","headers","then","console","log","handleResponse","catch","error","getApiClient","CommonConstants","GET_ENTITIES_QUERY","gql","GET_ENTITY","getEntityByIdAsync","apollo","a","query","variables","fetchPolicy","entity","apiClient","ItemQueries","items","_","first","skip","getItemsAsync","GET_PROFILE_QUERY","profileStorage","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","isLoggedInVar","resolvers","httpLink","createHttpLink","uri","link","setContext","token","localStorage","getItem","authorization","concat","getApolloClient","_client","uploadAsync","file","add","path","size","cid","create","getIpfsClient","FileUtil","BrowserFileUtil","text","LocalFileUtil","fs","readFileSync","getFileUtil","type","Browser","Local","BaseConfig","fileUtil","_config","_fileUtil","readFileAsync","contractsPath","contracts","fa2Path","fa2","tezdiplomaPath","tezdiploma","parse","LocalConfig","instance","Config","TezosUtil","config","operationHash","entrypoint","operationIndex","findIndex","o","hash","operation","contents","transactionIndex","t","parameters","confirmation","entryPoint","bigMapId","operations","block","transaction","extractTransaction","metadata","operation_result","big_map_diff","mapIndex","m","big_map","key","int","values","entities","extractId","templates","documents","_util","_contract","setWalletProvider","wallet","setProvider","toTokenMetadata","tokenId","metadataUrl","bytes2Char","token_info","get","initContract","tez_diploma_address","at","createEntityAsync","contract","methods","create_entity","UnitValue","send","op","opHash","extractEntityId","createTemplateAsync","entityChainId","create_template","extractTemplateId","createDocument","holder","templateChainId","create_document","char2Bytes","extractDocumentId","TezosToolkit","getInstance","getTezosClient","useStyles","makeStyles","theme","root","display","alignItems","wrapper","position","buttonProgress","top","left","marginTop","marginLeft","ClickOnceButton","props","classes","React","useState","isDisabled","setIsDisabled","handleClick","callbackFn","className","Button","variant","color","onClick","disabled","autoFocus","children","CircularProgress","CREATE_ENTITY","UPDATE_ENTITY","service","_apollo","_tezos","request","notNull","createAsync","chainId","updateAsync","tezosId","mutate","mutation","input","createEntity","_id","updateEntity","FormatUtil","marginBottom","spacing","SaveEntityDialog","enqueueSnackbar","useSnackbar","open","setOpen","history","useHistory","createEntityState","useCallback","setEntity","isEdit","handleClose","onClose","useEffect","handleSaveAsync","saveAsync","formatSnackbarMessage","Dialog","keepMounted","DialogTitle","DialogContent","TextField","label","fullWidth","autoComplete","onChange","target","multiline","rows","DialogActions","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","Hero","activeAccount","useWallet","openSaveEntityDialog","setOpenSaveEntityDialog","Container","maxWidth","Typography","align","paragraph","Grid","container","justifyContent","item","component","RouterLink","to","address","width","textAlign","table","marginRight","logo","title","fontSize","fontWeight","margin","subtitleCell","subtitle","Logo","rowSpan","src","alt","Link","href","float","Test","useQuery","toJsonString","dAppClient","DAppClient","handleTestButton1","requestSignPayload","signingType","SigningType","RAW","payload","handleTestButton2","loginAsync","handleTestButton3","style","paddingTop","imageEditorOptions","includeUI","loadImage","menu","initMenu","uiSize","height","menuBarPosition","selectionStyle","cornerColor","usageStatistics","Editor","document","querySelector","remove","editorMenu","classList","ref","editorRef","ItemEditor","useParams","createRef","ipfsClient","handleClickButton","dataUrl","current","toDataURL","imageUrlToBlob","warning","Alert","Paper","GET_TEMPLATE","GET_TEMPLATE_BY_ENTITY_ID","getTemplateByIdAsync","template","GET_DOCUMENTS_QUERY","GET_DOCUMENT","card","flexDirection","cardMedia","cardContent","flexGrow","DocumentCard","Card","CardMedia","image","CardContent","gutterBottom","CardActions","minHeight","EntityOverview","entityQuery","templateQuery","loading","documentsQuery","templateId","templateByEntityId","isOwner","owner","refetchAll","refetch","graphQLErrors","xs","totalCount","IconButton","hasDocuments","doc","sm","md","role","EntityCard","refreshButton","cardGrid","paddingBottom","SelectedEntitiesList","entitiesQuery","selected","SAVE_TEMPLATE","_ipfs","entityId","startsWith","ipfsResult","refetchQueries","saveTemplate","SaveTemplateDialog","setTemplate","getImageDataUrl","saveButton","right","minWidth","TemplateEditor","openSaveDialog","setOpenSaveDialog","Root","styled","div","paddingBottomSmall","Footer","TitleTypography","Header","connected","disconnect","connect","apolloClient","subscribeToEvent","BeaconEvent","ACTIVE_ACCOUNT_SET","walletAccount","setItem","handleLoginAsync","handleLogoutAsync","removeItem","clearStore","window","location","reload","AppBar","Toolbar","Icon","MainScrollStyled","MainScrollInner","MainScroll","restProps","MainWrapperStyled","MainWrapper","SAVE_DOCUMENT","saveDocument","SaveDocumentDialog","setDocument","documentId","placeholder","DocumentEditor","AccountOverview","hasEntities","MomentUtil","moment","locale","navigator","language","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","DocumentOverview","timestamp","momentUtil","documentQuery","whiteSpace","Box","my","textOverflow","overflow","getLocalReverseFormatted","getFromMilliseconds","Main","LogEventModel","init","banner","args","Object","assign","noop","logger","Boolean","toLocaleTimeString","mapFn","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","debug","info","warn","App","beaconWallet","useBeaconWallet","useMemo","tezosClient","initAsync","preferredNetwork","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","NETWORK","REACT_APP_NETWORK","toUpperCase","ReactDOM","render","ThemeProvider","clientType","network","getElementById"],"mappings":"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","file":"static/js/main.ddefe9a0.chunk.js","sourcesContent":["import { Item } from '../common/types';\r\n\r\nexport interface IItemStorage {\r\n  selectedItems: Item[];\r\n}\r\n\r\nclass ItemStorage implements IItemStorage {\r\n  public selectedItems: Item[] = [];\r\n\r\n  constructor() {\r\n    const now = new Date();\r\n    for (let index = 0; index < 9; index++) {\r\n      this.selectedItems.push({\r\n        id: index.toString(),\r\n        createdDate: now,\r\n        modifiedDate: now,\r\n        name: 'A' + index,\r\n        description: 'This is a media card. You can use this section to describe the content.',\r\n        imageUrl: 'https://source.unsplash.com/random'\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst storage = new ItemStorage();\r\n\r\nexport const getItemStorage = () => {\r\n  return storage;\r\n}","import { makeVar } from '@apollo/client';\r\nimport { Profile } from '../common/types';\r\n\r\nclass ProfileStorage {\r\n  private _profileVar = makeVar<Profile>({\r\n    id: '1',\r\n    createdDate: new Date(),\r\n    modifiedDate: new Date(),\r\n    name: 'test',\r\n    useDarkMode: true\r\n  });\r\n\r\n  profileVar = () => {\r\n    return this._profileVar();\r\n  }\r\n\r\n  update = (profile: Profile) => {\r\n    this._profileVar(profile);\r\n  }\r\n}\r\n\r\nconst storage = new ProfileStorage();\r\n\r\nexport const getProfileStorage = () => {\r\n  return storage;\r\n}","\r\nexport abstract class CommonUtil {\r\n  static isString(value: any): boolean {\r\n    return typeof value === 'string' || value instanceof String;\r\n  }\r\n\r\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\r\n    if (!CommonUtil.isString(value)) {\r\n      // console.log('Expected a string but got: ', value);\r\n      return true;\r\n    } else {\r\n      return value === null || value === undefined || value.trim() === '';\r\n    }\r\n  }\r\n\r\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\r\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\r\n  }\r\n\r\n  static timeout(ms: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\r\n    if (str) {\r\n      if (maxLength < str.length) {\r\n        return `${str.substr(0, maxLength)}...`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\r\n    if (str) {\r\n      const minTruncatedLength = strPositionStart + strPositionEnd\r\n      if (minTruncatedLength < str.length) {\r\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\r\n      }\r\n    }\r\n    return str\r\n  }\r\n\r\n  static toJsonString(data: any): string {\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n\r\n  static async imageUrlToBlob(url: string): Promise<Blob> {\r\n    return (await fetch(url)).blob();\r\n  }\r\n}","export class Ensure {\r\n\r\n  public static notNull(property: any, propertyName: string) {\r\n    if (property === null || property === undefined) {\r\n      throw new Error('Unexpected null exception. ' + propertyName);\r\n    }\r\n  }\r\n\r\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\r\n    if (property === null || property === undefined || property?.trim() === '') {\r\n      if (message) {\r\n        throw new Error(message);\r\n      } else {\r\n        throw new Error('Unexpected null exception. ' + propertyName);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\r\n    if (property && property.length > maxLength) {\r\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\r\n    }\r\n  }\r\n\r\n}\r\n","import fs from 'fs';\r\n\r\nexport abstract class FileUtil {\r\n  abstract readFileAsync(path: string): Promise<any>;\r\n}\r\n\r\nexport class BrowserFileUtil extends FileUtil {\r\n  async readFileAsync(path: string): Promise<any> {\r\n    const response = await fetch(path);\r\n    return response.text();\r\n  }\r\n}\r\n\r\nexport class LocalFileUtil extends FileUtil {\r\n  public async readFileAsync(path: string): Promise<any> {\r\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\r\n  }\r\n}\r\n\r\nexport enum FileUtilType {\r\n  Browser = 0,\r\n  Local = 1\r\n}\r\n\r\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\r\n  switch (type) {\r\n    case FileUtilType.Local:\r\n      return new LocalFileUtil();\r\n    default:\r\n      return new BrowserFileUtil();\r\n  }\r\n}","import axios from 'axios';\r\nimport { Item } from '../common/types';\r\nimport { getItemStorage, IItemStorage } from '../storage';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { Ensure } from '../util/ensure';\r\n\r\nexport class ApiClient {\r\n\r\n  private readonly _baseUrl: string;\r\n  private readonly _itemStorage: IItemStorage;\r\n\r\n  constructor() {\r\n    Ensure.notNullOrWhiteSpace(process.env.REACT_APP_API_URL, 'process.env.REACT_APP_API_URL');\r\n    this._baseUrl = process.env.REACT_APP_API_URL as string;\r\n    this._baseUrl = this._baseUrl.endsWith('/') ? this._baseUrl.substr(0, this._baseUrl.length - 1) : this._baseUrl;\r\n    this._itemStorage = getItemStorage();\r\n  }\r\n\r\n  private handleResponse(response: any, transformFn: (e: any) => any): Promise<any> {\r\n    if (response?.data) {\r\n      if (response.data) {\r\n        if (Array.isArray(response.data)) {\r\n          return Promise.resolve(response.data.map((e: any) => transformFn(e)));\r\n        } else {\r\n          return Promise.resolve(transformFn(response.data));\r\n        }\r\n      }\r\n    }\r\n    return Promise.reject(response);\r\n  }\r\n\r\n  public async getItemsAsync(): Promise<Item[]> {\r\n    await CommonUtil.timeout(2000);\r\n    const result: Item[] = this._itemStorage.selectedItems;\r\n    return result;\r\n  }\r\n\r\n  public async loginAsync(signature: string, publicKey: string): Promise<string> {\r\n    const result = await axios.post(this._baseUrl + '/account/login', {\r\n      signature: signature,\r\n      publicKey: publicKey\r\n    })\r\n    return result.data;\r\n  }\r\n\r\n  public mintDocument(filename: string, blob: any): Promise<any> {\r\n    const data = new FormData();\r\n    data.append('image', blob, filename);\r\n    return axios.post(this._baseUrl + '/documents/mint', data, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n    }).then(result => {\r\n      console.log(result);\r\n      return this.handleResponse(result, (e: any) => {\r\n        return e\r\n      });\r\n    }).catch(error => {\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n}\r\n\r\nconst client = new ApiClient();\r\n\r\nexport const getApiClient = () => {\r\n  return client;\r\n}\r\n","export const CommonConstants = {\r\n  APP_NAME: 'TEZDIPLOMA',\r\n  WALLET_ACCOUNT_STORAGE_KEY: 'tez-diploma-storage:wallet-account',\r\n  AUTH_TOKEN_STORAGE_KEY: 'tez-diploma-storage:auth-token',\r\n  SIGN_MESSAGE_PAYLOAD: 'Sign this message to authenticate with TEZDIPLOMA.',\r\n  NAME_MAX_LENGTH: 48,\r\n  DESCRIPTION_MAX_LENGTH: 192\r\n}","import { gql } from '@apollo/client';\r\nimport { ApolloClientWrapper } from '../clients';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { GetEntity, GetEntityVariables } from './__generated__/GetEntity';\r\n\r\nexport const GET_ENTITIES_QUERY = gql`\r\n  query GetEntities($input: EntitiesFilterRequest!) {\r\n    entities(input: $input) {\r\n      totalCount\r\n      cursor\r\n      hasMore\r\n      entities {\r\n        _id\r\n        chainId\r\n        createdDate\r\n        modifiedDate\r\n        owner\r\n        name\r\n        description\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ENTITY = gql`\r\n  query GetEntity($id: ID!) {\r\n    entity(id: $id) {\r\n      _id\r\n      chainId\r\n      createdDate\r\n      modifiedDate\r\n      owner\r\n      name\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`\r\n\r\nexport const getEntityByIdAsync = async (apollo: ApolloClientWrapper, id: string) => {\r\n  if (CommonUtil.isNullOrWhitespace(id)) {\r\n    return undefined;\r\n  }\r\n  const entity = await apollo.query<GetEntity, GetEntityVariables>({\r\n    query: GET_ENTITY,\r\n    variables: {\r\n      id: id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  return entity.data.entity;\r\n}","import { gql } from '@apollo/client';\r\nimport { getApiClient } from '../clients';\r\nimport { Item } from '../common/types';\r\n\r\nexport const GET_ITEMS_QUERY = gql`\r\n  query GetItems($first: Int!, $skip: Int!) {\r\n    items(first: $first, skip: $skip) @client {\r\n      id\r\n      createdDate\r\n      modifiedDate\r\n      name\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`;\r\n\r\nconst apiClient = getApiClient();\r\n\r\nexport const ItemQueries = {\r\n  async items(_: any, { first, skip }: any) {\r\n    try {\r\n      console.log('first', first, 'skip', skip);\r\n      const items = await apiClient.getItemsAsync();\r\n      return items;\r\n\r\n      // return {\r\n      //   ...items,\r\n      //   id: assetType,\r\n      //   __typename: 'CameraRoll',\r\n      // };\r\n    } catch (e) {\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport type GetItemsQueryResponse = {\r\n  items: Item[]\r\n}","import { gql } from '@apollo/client';\r\n\r\nexport const GET_PROFILE_QUERY = gql`\r\n  query GetProfile {\r\n    profile @client {\r\n      id\r\n      createdDate\r\n      modifiedDate\r\n      name\r\n      useDarkMode\r\n    }\r\n  }\r\n`;","import { ApolloClient, createHttpLink, InMemoryCache, makeVar, NormalizedCacheObject } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { CommonConstants } from '../common/constants';\r\nimport { ItemQueries } from '../queries';\r\nimport { getProfileStorage } from '../storage';\r\n\r\nconst profileStorage = getProfileStorage();\r\n\r\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\r\n\r\n}\r\n\r\nconst cache: InMemoryCache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        isLoggedIn: {\r\n          read() {\r\n            return isLoggedInVar();\r\n          }\r\n        },\r\n        profile: {\r\n          read() {\r\n            return profileStorage.profileVar();\r\n          }\r\n        },\r\n        // https://github.com/apollographql/apollo-client/issues/6852\r\n        // asyncName: {\r\n        //   read(_, { storage }) {\r\n        //     if (!storage.var) {\r\n        //       storage.var = makeVar(\"unknown\");\r\n        //       delay(100).then(() => storage.var(\"Foo\"));\r\n        //     }\r\n        //     return storage.var();\r\n        //   }\r\n        // }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    ...ItemQueries\r\n  }\r\n};\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.REACT_APP_GRAPHQL_URL,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(CommonConstants.AUTH_TOKEN_STORAGE_KEY);\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\n// https://www.apollographql.com/docs/react/networking/authentication/#header\r\nconst client = new ApolloClientWrapper({\r\n  link: authLink.concat(httpLink),\r\n  cache: cache,\r\n  resolvers,\r\n  headers: {\r\n    'client-name': process.env.REACT_APP_NAME || 'client',\r\n    'client-version': process.env.REACT_APP_VERSION || '0',\r\n  },\r\n})\r\n\r\nexport const getApolloClient = () => {\r\n  return client;\r\n}\r\n\r\nexport const isLoggedInVar = makeVar<boolean>(true);","import { create, IPFSHTTPClient } from 'ipfs-http-client';\r\nimport { IpfsResult } from '../common/types';\r\n\r\nexport class IpfsClient {\r\n\r\n  private readonly _client: IPFSHTTPClient;\r\n\r\n  constructor() {\r\n    this._client = create({\r\n      url: 'https://ipfs.infura.io:5001/api/v0'\r\n    });\r\n  }\r\n\r\n  uploadAsync = async (file: Blob): Promise<IpfsResult> => {\r\n    // https://ipfs.infura.io/ipfs/QmdF1fEPJHgvxGxRehrJbSzvGK2U4NujAgMDhpiMSytPL6\r\n    // Upload directly to IPFS -> Mint on Tezos -> Send CID (path) + minted token id to GraphQL -> Pin with Pinata\r\n    const result = await this._client.add(file);\r\n    return {\r\n      url: `https://ipfs.infura.io/ipfs/${result.path}`,\r\n      path: result.path,\r\n      size: result.size,\r\n      cid: result.cid\r\n    }\r\n  }\r\n}\r\n\r\nconst client = new IpfsClient();\r\n\r\nexport const getIpfsClient = () => {\r\n  return client;\r\n}\r\n\r\n/*\r\nexport interface AddResult {\r\n  cid: CID\r\n  size: number\r\n  path: string\r\n  mode?: number\r\n  mtime?: Mtime\r\n}\r\n\r\n\"QmdF1fEPJHgvxGxRehrJbSzvGK2U4NujAgMDhpiMSytPL6\"\r\n*/","import { FileUtil, FileUtilType, getFileUtil } from '../util/file.util';\r\nimport { ConfigType } from './types';\r\n\r\nexport abstract class BaseConfig {\r\n\r\n  protected _config?: ConfigType;\r\n  protected _fileUtil: FileUtil;\r\n\r\n  protected constructor(fileUtil: FileUtil) {\r\n    this._fileUtil = fileUtil;\r\n  }\r\n\r\n  protected abstract get contractsPath(): string;\r\n  protected abstract get fa2Path(): string;\r\n  protected abstract get tezdiplomaPath(): string;\r\n\r\n  public get values(): Maybe<ConfigType> {\r\n    return this._config;\r\n  }\r\n\r\n  public async initAsync(): Promise<void> {\r\n    const contracts = await this._fileUtil.readFileAsync(this.contractsPath);\r\n    const fa2 = await this._fileUtil.readFileAsync(this.fa2Path);\r\n    const tezdiploma = await this._fileUtil.readFileAsync(this.tezdiplomaPath);\r\n    this._config = {\r\n      contracts: JSON.parse(contracts),\r\n      fa2: JSON.parse(fa2),\r\n      tezdiploma: JSON.parse(tezdiploma)\r\n    };\r\n  }\r\n}\r\n\r\nexport class LocalConfig extends BaseConfig {\r\n  private static instance: LocalConfig;\r\n\r\n  private constructor() {\r\n    super(getFileUtil(FileUtilType.Local));\r\n  }\r\n\r\n  public static getInstance(): BaseConfig {\r\n    if (!LocalConfig.instance) {\r\n      LocalConfig.instance = new LocalConfig();\r\n    }\r\n\r\n    return LocalConfig.instance;\r\n  }\r\n\r\n  protected get contractsPath(): string {\r\n    return './public/data/tezos/contracts.json';\r\n  }\r\n  protected get fa2Path(): string {\r\n    return './public/data/tezos/fa2.json';\r\n  }\r\n  protected get tezdiplomaPath(): string {\r\n    return './public/data/tezos/tezdiploma.json';\r\n  }\r\n}\r\n\r\nexport class Config extends BaseConfig {\r\n  private static instance: Config;\r\n\r\n  private constructor() {\r\n    super(getFileUtil(FileUtilType.Browser));\r\n  }\r\n\r\n  public static getInstance(): BaseConfig {\r\n    if (!Config.instance) {\r\n      Config.instance = new Config();\r\n    }\r\n\r\n    return Config.instance;\r\n  }\r\n\r\n  protected get contractsPath(): string {\r\n    return './data/tezos/contracts.json';\r\n  }\r\n  protected get fa2Path(): string {\r\n    return './data/tezos/fa2.json';\r\n  }\r\n  protected get tezdiplomaPath(): string {\r\n    return './data/tezos/tezdiploma.json';\r\n  }\r\n}\r\n","import { BaseConfig } from '../common/config';\r\nimport { Ensure } from './ensure';\r\n\r\nexport class TezosUtil {\r\n  private readonly _config: BaseConfig;\r\n\r\n  constructor(config: BaseConfig) {\r\n    this._config = config;\r\n  }\r\n\r\n  extractTransaction(e: string, operationHash: string, entrypoint: string): any | undefined {\r\n    if (!Array.isArray(e)) {\r\n      return undefined;\r\n    }\r\n    const operationIndex = e.findIndex((o: any) => o.hash === operationHash)\r\n    if (operationIndex === -1) {\r\n      return undefined;\r\n    }\r\n    const operation = e[operationIndex];\r\n    if (!Array.isArray(operation.contents)) {\r\n      return undefined;\r\n    }\r\n    const transactionIndex = operation.contents.findIndex((t: any) => t.parameters?.entrypoint === entrypoint)\r\n    if (transactionIndex === -1) {\r\n      return undefined;\r\n    }\r\n    return operation.contents[transactionIndex];\r\n  }\r\n\r\n  extractId(operationHash: string, confirmation: any, entryPoint: string, bigMapId: any): string | undefined {\r\n    const operations = confirmation?.block?.operations;\r\n    if (!Array.isArray(operations)) {\r\n      return undefined;\r\n    }\r\n    for (const e of operations) {\r\n      const transaction = this.extractTransaction(e, operationHash, entryPoint)\r\n      if (!Array.isArray(transaction?.metadata?.operation_result?.big_map_diff)) {\r\n        continue;\r\n      }\r\n      const big_map_diff = transaction.metadata?.operation_result?.big_map_diff\r\n      const mapIndex = big_map_diff.findIndex((m: any) => m.big_map === bigMapId)\r\n      if (mapIndex === -1) {\r\n        continue;\r\n      }\r\n      const big_map = big_map_diff[mapIndex];\r\n      return big_map.key.int;\r\n    }\r\n  }\r\n\r\n  extractEntityId(operationHash: string, confirmation: any): string | undefined {\r\n    const bigMapId = this._config.values?.tezdiploma.entities;\r\n    Ensure.notNullOrWhiteSpace(bigMapId, 'bigMapId');\r\n    return this.extractId(operationHash, confirmation, 'create_entity', bigMapId);\r\n  }\r\n\r\n  extractTemplateId(operationHash: string, confirmation: any): string | undefined {\r\n    const bigMapId = this._config.values?.tezdiploma.templates;\r\n    Ensure.notNullOrWhiteSpace(bigMapId, 'bigMapId');\r\n    return this.extractId(operationHash, confirmation, 'create_template', bigMapId);\r\n  }\r\n\r\n  extractDocumentId(operationHash: string, confirmation: any): string | undefined {\r\n    const bigMapId = this._config.values?.tezdiploma.documents;\r\n    Ensure.notNullOrWhiteSpace(bigMapId, 'bigMapId');\r\n    return this.extractId(operationHash, confirmation, 'create_document', bigMapId);\r\n  }\r\n}","import { BeaconWallet } from '@taquito/beacon-wallet';\r\nimport { TezosToolkit, UnitValue, WalletContract } from '@taquito/taquito';\r\nimport { bytes2Char, char2Bytes } from '@taquito/utils';\r\nimport { BaseConfig, Config } from '../common/config';\r\nimport { TokenMetadata } from '../common/types';\r\nimport { Ensure } from '../util/ensure';\r\nimport { TezosUtil } from '../util/tezos.util';\r\n\r\nexport class TezosClient {\r\n\r\n  private readonly _client: TezosToolkit;\r\n  private readonly _config: BaseConfig;\r\n  private readonly _util: TezosUtil;\r\n  private _contract?: WalletContract;\r\n\r\n  constructor() {\r\n    Ensure.notNullOrWhiteSpace(process.env.REACT_APP_TEZOS_RPC_URL, 'REACT_APP_TEZOS_RPC_URL');\r\n    this._client = new TezosToolkit(process.env.REACT_APP_TEZOS_RPC_URL!);\r\n    this._config = Config.getInstance();\r\n    this._util = new TezosUtil(this._config);\r\n  }\r\n\r\n  setWalletProvider = (wallet: BeaconWallet): void => {\r\n    this._client.setProvider({ wallet });\r\n  };\r\n\r\n  toTokenMetadata = (data: any): Maybe<TokenMetadata> => {\r\n    try {\r\n      return {\r\n        tokenId: data.id.toString(),\r\n        metadataUrl: bytes2Char(data.token_info.get(''))\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  initContract = async (): Promise<WalletContract> => {\r\n    Ensure.notNullOrWhiteSpace(this._config.values?.contracts.tez_diploma_address, 'tez_diploma_address', 'Tezdiploma contract address is undefined.');\r\n    if (!this._contract) {\r\n      this._contract = await this._client.wallet.at(this._config.values?.contracts.tez_diploma_address!);\r\n    }\r\n    return this._contract;\r\n  };\r\n\r\n  createEntityAsync = async () => {\r\n    const contract = await this.initContract();\r\n    const op = await contract.methods.create_entity(UnitValue).send();\r\n    console.log('op.opHash', op.opHash);\r\n    const result = await op.confirmation();\r\n    return this._util.extractEntityId(op.opHash, result);\r\n  }\r\n\r\n  createTemplateAsync = async (entityChainId: string) => {\r\n    const contract = await this.initContract();\r\n    const op = await contract.methods.create_template(entityChainId).send();\r\n    console.log('op.opHash', op.opHash);\r\n    const result = await op.confirmation();\r\n    return this._util.extractTemplateId(op.opHash, result);\r\n  }\r\n\r\n  createDocument = async (holder: string, entityChainId: string, metadata: string, templateChainId: string = '0') => {\r\n    const contract = await this.initContract();\r\n    const op = await contract.methods.create_document(holder, entityChainId, char2Bytes(metadata), templateChainId).send();\r\n    console.log('op.opHash', op.opHash);\r\n    const result = await op.confirmation();\r\n    return this._util.extractDocumentId(op.opHash, result);\r\n  }\r\n}\r\n\r\nconst client = new TezosClient();\r\n\r\nexport const getTezosClient = () => {\r\n  return client;\r\n}","import React from 'react';\r\nimport { Button, CircularProgress, makeStyles, PropTypes } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -10,\r\n    marginLeft: -12,\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  children: React.ReactNode\r\n  size?: 'small' | 'medium' | 'large'\r\n  variant?: 'text' | 'outlined' | 'contained'\r\n  color?: PropTypes.Color\r\n  autoFocus?: boolean\r\n  callbackFn: () => Promise<void>\r\n}\r\n\r\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [isDisabled, setIsDisabled] = React.useState(false)\r\n\r\n  const handleClick = async () => {\r\n    setIsDisabled(true)\r\n    try {\r\n      await props.callbackFn()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    setIsDisabled(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          size={props.size ?? \"small\"}\r\n          variant={props.variant ?? \"contained\"}\r\n          color={props.color}\r\n          onClick={handleClick}\r\n          disabled={isDisabled}\r\n          autoFocus={props.autoFocus}>\r\n          {props.children}\r\n        </Button>\r\n        {isDisabled && <CircularProgress size={20} className={classes.buttonProgress} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const CREATE_ENTITY = gql`\r\n  mutation CreateEntity($input: CreateEntityRequest!) {\r\n    createEntity(input: $input) {\r\n      success\r\n      message\r\n      entity {\r\n        _id\r\n        chainId\r\n        name\r\n        description\r\n        createdDate\r\n        modifiedDate\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ENTITY = gql`\r\n  mutation UpdateEntity($input: UpdateEntityRequest!) {\r\n    updateEntity(input: $input) {\r\n      success\r\n      message\r\n      entity {\r\n        _id\r\n        chainId\r\n        createdDate\r\n        modifiedDate\r\n        owner\r\n        name\r\n        description\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport type SaveEntityRequest = {\r\n  id?: string;\r\n  chainId: string;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nexport type CreateEntityRequest = {\r\n  chainId: string;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nexport type UpdateEntityRequest = {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n}","import { ApolloClient, NormalizedCacheObject } from '@apollo/client';\r\nimport { getApolloClient, getTezosClient, TezosClient } from '../clients';\r\nimport { CreateEntityRequest, CREATE_ENTITY, SaveEntityRequest, UpdateEntityRequest, UPDATE_ENTITY } from '../mutations/entity';\r\nimport { CreateEntity, CreateEntityVariables } from '../mutations/__generated__/CreateEntity';\r\nimport { UpdateEntity, UpdateEntityVariables } from '../mutations/__generated__/UpdateEntity';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { Ensure } from '../util/ensure';\r\n\r\nclass EntityService {\r\n\r\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\r\n  private readonly _tezos: TezosClient;\r\n\r\n  constructor() {\r\n    this._apollo = getApolloClient();\r\n    this._tezos = getTezosClient();\r\n  }\r\n\r\n  async saveAsync(request: SaveEntityRequest, callbackFn: (request: SaveEntityRequest) => void): Promise<string> {\r\n    Ensure.notNull(request, 'entity');\r\n    Ensure.notNullOrWhiteSpace(request.name, 'name', 'Please provide a name.');\r\n    Ensure.notNullOrWhiteSpace(request.description, 'description', 'Please provide a description.');\r\n    if (CommonUtil.isNullOrWhitespace(request.id)) {\r\n      return this.createAsync({\r\n        chainId: request.chainId,\r\n        name: request.name,\r\n        description: request.description\r\n      }, callbackFn);\r\n    } else {\r\n      return this.updateAsync({\r\n        id: String(request.id),\r\n        name: request.name,\r\n        description: request.description\r\n      });\r\n    }\r\n  }\r\n\r\n  private async createAsync(request: CreateEntityRequest, callbackFn: (request: SaveEntityRequest) => void): Promise<string> {\r\n    if (CommonUtil.isNullOrWhitespace(request.chainId)) {\r\n      const tezosId = await this._tezos.createEntityAsync();\r\n      Ensure.notNullOrWhiteSpace(tezosId, 'tezosId', 'Entity could not be created on chain.');\r\n      request.chainId = String(tezosId);\r\n      callbackFn(request);\r\n    }\r\n    const result = await this._apollo.mutate<CreateEntity, CreateEntityVariables>({\r\n      mutation: CREATE_ENTITY,\r\n      variables: {\r\n        input: request\r\n      }\r\n    });\r\n    console.log(result.data?.createEntity);\r\n    return result.data?.createEntity?.entity?._id as string;\r\n  }\r\n\r\n  private async updateAsync(request: UpdateEntityRequest): Promise<string> {\r\n    const result = await this._apollo.mutate<UpdateEntity, UpdateEntityVariables>({\r\n      mutation: UPDATE_ENTITY,\r\n      variables: {\r\n        input: request\r\n      }\r\n    });\r\n    console.log(result.data?.updateEntity);\r\n    return result.data?.updateEntity?.entity?._id as string;\r\n  }\r\n}\r\n\r\nconst service = new EntityService();\r\n\r\nexport const getEntityService = () => {\r\n  return service;\r\n}","import { CommonUtil } from './common.util';\r\n\r\nexport abstract class FormatUtil {\r\n  static formatSnackbarMessage(data: any): string {\r\n    if (data) {\r\n      console.log(data)\r\n      let message: string\r\n      if (!CommonUtil.isString(data)) {\r\n        if (data.message) {\r\n          message = data.message\r\n        }\r\n        else if (data.error?.message) {\r\n          message = data.error.message\r\n        } else {\r\n          message = JSON.stringify(data)\r\n        }\r\n      } else {\r\n        message = data\r\n      }\r\n      if (message.length > 128) {\r\n        return message.substr(0, 128) + \"...\"\r\n      }\r\n      return message\r\n    }\r\n    return \"Something went wrong.\"\r\n  }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\nimport { Entity } from '../../../../common/types';\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\nimport { getEntityService } from '../../../../services/entity.service';\r\nimport { FormatUtil } from '../../../../util/format.util';\r\nimport { SaveEntityRequest } from '../../../../mutations/entity';\r\nimport { Ensure } from '../../../../util/ensure';\r\nimport { CommonConstants } from '../../../../common/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  entity?: Entity\r\n}\r\n\r\nexport const SaveEntityDialog: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const service = getEntityService();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const createEntityState = useCallback((): SaveEntityRequest => {\r\n    return {\r\n      id: props.entity?._id ?? '',\r\n      chainId: props.entity?.chainId ?? '',\r\n      name: props.entity?.name ?? '',\r\n      description: props.entity?.description ?? ''\r\n    };\r\n  }, [props.entity])\r\n\r\n  const [entity, setEntity] = useState<SaveEntityRequest>(createEntityState());\r\n  const isEdit = !!props.entity?._id;\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n    setEntity(createEntityState());\r\n  }, [props.open, createEntityState]);\r\n\r\n  const handleSaveAsync = async () => {\r\n    try {\r\n      Ensure.maxLength(entity.name, 'name', CommonConstants.NAME_MAX_LENGTH);\r\n      Ensure.maxLength(entity.description, 'description', CommonConstants.DESCRIPTION_MAX_LENGTH);\r\n      const id = await service.saveAsync(entity, (request: SaveEntityRequest) => {\r\n        setEntity(request);\r\n        console.log(request);\r\n      });\r\n      handleClose();\r\n      if (id !== entity.id) {\r\n        setTimeout(() => {\r\n          history.push(`/entities/${id}`);\r\n        }, 100);\r\n      }\r\n    } catch (error) {\r\n      enqueueSnackbar(FormatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>{isEdit ? 'Edit' : 'Create'} institute</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          value={entity.name}\r\n          onChange={e => setEntity({\r\n            ...entity,\r\n            name: e.target.value\r\n          })}\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          multiline\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          rows={4}\r\n          value={entity.description}\r\n          variant=\"outlined\"\r\n          onChange={e => setEntity({\r\n            ...entity,\r\n            description: e.target.value\r\n          })}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n        <ClickOnceButton color=\"primary\" callbackFn={handleSaveAsync} autoFocus={true}>\r\n          {isEdit ? 'Save' : 'Create'}\r\n        </ClickOnceButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Button, Container, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { SaveEntityDialog } from '../../../entity/components/save-dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1, 0, 1),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  }\r\n}));\r\n\r\nexport const Hero = () => {\r\n  const classes = useStyles();\r\n  const { activeAccount } = useWallet();\r\n  const [openSaveEntityDialog, setOpenSaveEntityDialog] = React.useState(false);\r\n\r\n  const handleCreateInstituteButton = () => {\r\n    setOpenSaveEntityDialog(true)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.heroContent}>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          Tamper-proof diplomas on <i>Tezos</i>.<br></br>\r\n          TEZDIPLOMA is an NFT based solution for countering the ongoing forgery of documents.\r\n        </Typography>\r\n        {activeAccount && (\r\n          <div className={classes.heroButtons}>\r\n            <Grid container spacing={2} justifyContent=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCreateInstituteButton}>\r\n                  Create institute\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" color=\"primary\" component={RouterLink} to={'/account/' + activeAccount.address}>\r\n                  Browse existing\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </Container>\r\n      <SaveEntityDialog open={openSaveEntityDialog} onClose={() => { setOpenSaveEntityDialog(false) }}></SaveEntityDialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CommonConstants } from '../../../../common/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    marginBottom: '20px'\r\n  },\r\n  table: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  },\r\n  logo: {\r\n    marginTop: '8px',\r\n    marginRight: '5px',\r\n    width: '50px'\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: 500,\r\n    margin: '0px !important'\r\n  },\r\n  subtitleCell: {\r\n    textAlign: 'right'\r\n  },\r\n  subtitle: {\r\n    fontSize: 12,\r\n    color: '#535353'\r\n  }\r\n}));\r\n\r\nexport const Logo = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <table className={classes.table}>\r\n        <tbody>\r\n          <tr>\r\n            <td rowSpan={2}>\r\n              <img className={classes.logo} src={\"./logo.png\"} alt=\"logo\" />\r\n            </td>\r\n            <td>\r\n              <Typography className={classes.title}>{CommonConstants.APP_NAME}</Typography>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className={classes.subtitleCell}>\r\n              <Typography className={classes.subtitle}>\r\n                by&nbsp;\r\n                <Link href=\"https://github.com/niklr\" color=\"inherit\" target=\"_blank\">\r\n                  github.com/niklr\r\n                </Link>\r\n              </Typography>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PROFILE_QUERY } from '../../../../queries';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\nimport { Profile } from '../../../../common/types';\r\nimport { getProfileStorage } from '../../../../storage';\r\nimport { GetProfile } from '../../../../queries/__generated__/GetProfile';\r\nimport { DAppClient, SigningType } from '@airgap/beacon-sdk';\r\nimport { CommonConstants } from '../../../../common/constants';\r\nimport { getApiClient } from '../../../../clients';\r\nimport { ClickOnceButton } from '../click-once-button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1, 0, 1),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  item: {\r\n    float: 'left',\r\n    marginRight: '10px'\r\n  }\r\n}));\r\n\r\nexport const Test = () => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery<GetProfile>(GET_PROFILE_QUERY);\r\n  console.log(CommonUtil.toJsonString(data?.profile));\r\n  const profileStorage = getProfileStorage();\r\n  const apiClient = getApiClient();\r\n  const dAppClient = new DAppClient({ name: CommonConstants.APP_NAME });\r\n\r\n  //const profile = useReactiveVar(profileVar);\r\n\r\n  const handleTestButton1 = async () => {\r\n    if (data && data.profile) {\r\n      const profile: Profile = {\r\n        ...data.profile,\r\n        modifiedDate: new Date(),\r\n        useDarkMode: !data.profile.useDarkMode\r\n      }\r\n      profileStorage.update(profile);\r\n    }\r\n\r\n    const response = await dAppClient.requestSignPayload({\r\n      signingType: SigningType.RAW,\r\n      payload: CommonConstants.SIGN_MESSAGE_PAYLOAD,\r\n    });\r\n\r\n    console.log(`Signature: ${response.signature}`);\r\n  };\r\n\r\n  const handleTestButton2 = async () => {\r\n    try {\r\n      const signature = '1234';\r\n      const publicKey = 'edpktgWnT9AikgpespLXFuw1VzD9xXfiJcARGu5SkmYM2QWPMFHg3D';\r\n      const result = await apiClient.loginAsync(signature, publicKey);\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const handleTestButton3 = async () => {\r\n    await CommonUtil.timeout(3000);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.heroContent}>\r\n      <Container maxWidth=\"sm\">\r\n        <div style={{ textAlign: 'center', paddingTop: '20px' }}>\r\n          <p>\r\n            {data?.profile?.modifiedDate.toString()}\r\n          </p>\r\n          <div className={classes.item}>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleTestButton1}>\r\n              Test1\r\n            </Button>\r\n          </div>\r\n          <div className={classes.item}>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleTestButton2}>\r\n              Test2\r\n            </Button>\r\n          </div>\r\n          <div className={classes.item}>\r\n            <ClickOnceButton color=\"primary\" callbackFn={handleTestButton3} autoFocus={true}>\r\n              Test3\r\n            </ClickOnceButton>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import 'tui-image-editor/dist/tui-image-editor.css';\r\nimport ImageEditor from '@toast-ui/react-image-editor';\r\nimport React, { useEffect } from 'react';\r\nimport { EditorWhiteTheme } from './theme';\r\n\r\n// TODO: add font families https://github.com/nhn/tui.image-editor/issues/62\r\n\r\nlet imageEditorOptions = {\r\n  includeUI: {\r\n    loadImage: {\r\n      path: '',\r\n      name: ''\r\n    },\r\n    menu: ['crop', 'flip', 'rotate', 'draw', 'shape', 'icon', 'text', 'filter'],\r\n    initMenu: 'text',\r\n    uiSize: {\r\n      width: '100%',\r\n      height: '600px',\r\n    },\r\n    menuBarPosition: 'left',\r\n    theme: {\r\n      ...EditorWhiteTheme\r\n    }\r\n  },\r\n  // cssMaxHeight: 500,\r\n  // cssMaxWidth: 700,\r\n  selectionStyle: {\r\n    // cornerSize: 20,\r\n    // rotatingPointOffset: 70,\r\n    cornerColor: '#A9A9A9'\r\n  },\r\n  usageStatistics: false\r\n}\r\n\r\ninterface Props {\r\n  imageUrl?: string\r\n  editorRef: React.RefObject<any>\r\n}\r\n\r\nexport const Editor = (props: Props) => {\r\n  imageEditorOptions.includeUI.loadImage = {\r\n    path: props.imageUrl ?? '',\r\n    name: 'temp'\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.querySelector('.tui-image-editor-header-logo')?.remove();\r\n    const editorMenu = document.querySelector('.tui-image-editor-help-menu');\r\n    editorMenu?.classList.remove('right');\r\n    editorMenu?.classList.add('bottom');\r\n  }, [])\r\n\r\n  return (\r\n    <ImageEditor ref={props.editorRef} {...imageEditorOptions} />\r\n  );\r\n}\r\n","// Source: https://github.com/nhn/tui.image-editor/blob/master/apps/image-editor/examples/js/theme/white-theme.js\r\nexport const EditorWhiteTheme = {\r\n  'common.bi.image': 'https://uicdn.toast.com/toastui/img/tui-image-editor-bi.png',\r\n  'common.bisize.width': '251px',\r\n  'common.bisize.height': '21px',\r\n  'common.backgroundImage': '',\r\n  'common.backgroundColor': '#fff',\r\n  'common.border': '1px solid #c1c1c1',\r\n\r\n  // header\r\n  'header.backgroundImage': 'none',\r\n  'header.backgroundColor': 'transparent',\r\n  'header.border': '0px',\r\n\r\n  // load button\r\n  'loadButton.backgroundColor': '#fff',\r\n  'loadButton.border': '1px solid #ddd',\r\n  'loadButton.color': '#222',\r\n  'loadButton.fontFamily': \"'Noto Sans', sans-serif\",\r\n  'loadButton.fontSize': '12px',\r\n\r\n  // download button\r\n  'downloadButton.backgroundColor': '#3f51b5',\r\n  'downloadButton.border': '1px solid #3f51b5',\r\n  'downloadButton.color': '#fff',\r\n  'downloadButton.fontFamily': \"'Noto Sans', sans-serif\",\r\n  'downloadButton.fontSize': '12px',\r\n\r\n  // main icons\r\n  'menu.normalIcon.color': '#8a8a8a',\r\n  'menu.activeIcon.color': '#555555',\r\n  'menu.disabledIcon.color': '#434343',\r\n  'menu.hoverIcon.color': '#e9e9e9',\r\n  'menu.iconSize.width': '24px',\r\n  'menu.iconSize.height': '24px',\r\n\r\n  // submenu icons\r\n  'submenu.normalIcon.color': '#8a8a8a',\r\n  'submenu.activeIcon.color': '#555555',\r\n  'submenu.iconSize.width': '32px',\r\n  'submenu.iconSize.height': '32px',\r\n\r\n  // submenu primary color\r\n  'submenu.backgroundColor': 'transparent',\r\n  'submenu.partition.color': '#e5e5e5',\r\n\r\n  // submenu labels\r\n  'submenu.normalLabel.color': '#858585',\r\n  'submenu.normalLabel.fontWeight': 'normal',\r\n  'submenu.activeLabel.color': '#000',\r\n  'submenu.activeLabel.fontWeight': 'normal',\r\n\r\n  // checkbox style\r\n  'checkbox.border': '1px solid #ccc',\r\n  'checkbox.backgroundColor': '#fff',\r\n\r\n  // rango style\r\n  'range.pointer.color': '#333',\r\n  'range.bar.color': '#ccc',\r\n  'range.subbar.color': '#606060',\r\n\r\n  'range.disabledPointer.color': '#d3d3d3',\r\n  'range.disabledBar.color': 'rgba(85,85,85,0.06)',\r\n  'range.disabledSubbar.color': 'rgba(51,51,51,0.2)',\r\n\r\n  'range.value.color': '#000',\r\n  'range.value.fontWeight': 'normal',\r\n  'range.value.fontSize': '11px',\r\n  'range.value.border': '0',\r\n  'range.value.backgroundColor': '#f5f5f5',\r\n  'range.title.color': '#000',\r\n  'range.title.fontWeight': 'lighter',\r\n\r\n  // colorpicker style\r\n  'colorpicker.button.border': '0px',\r\n  'colorpicker.button.backgroundColor': '#3f51b5',\r\n  'colorpicker.title.color': '#000',\r\n};","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getApiClient, getIpfsClient } from '../../../../clients';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\nimport { Editor } from '../../../common/components/editor';\r\n\r\nexport const ItemEditor = () => {\r\n  const { id } = useParams<{ id: any }>();\r\n  const editorRef = React.createRef<any>();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const apiClient = getApiClient();\r\n  const ipfsClient = getIpfsClient();\r\n\r\n  const handleClickButton = async () => {\r\n    const dataUrl = editorRef.current.getInstance().toDataURL('image/png');\r\n    try {\r\n      const blob = await CommonUtil.imageUrlToBlob(dataUrl);\r\n      // const result = await apiClient.mintDocument('temp.png', blob);\r\n      const result = await ipfsClient.uploadAsync(blob);\r\n      console.log(result);\r\n      // window.open(result.url, '_blank')?.focus();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Hello {id}\r\n      </p>\r\n      <Editor editorRef={editorRef}></Editor>\r\n      <button onClick={handleClickButton}>Click!</button>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { CommonUtil } from '../../../../util/common.util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  warning: {\r\n    color: (props: any) => props.color,\r\n    backgroundColor: (props: any) => props.backgroundColor,\r\n    padding: '15px',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  message: string\r\n  type: 'default' | 'warning'\r\n  error?: any\r\n  color?: string\r\n  backgroundColor?: string\r\n}\r\n\r\nexport const Alert: React.FC<Props> = (props: Props) => {\r\n  let color = '#000000';\r\n  let backgroundColor = '#f2f2f2';\r\n\r\n  switch (props.type) {\r\n    case 'warning':\r\n      color = '#611a15';\r\n      backgroundColor = '#fdecea';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const classes = useStyles({\r\n    color: props.color ?? color,\r\n    backgroundColor: props.backgroundColor ?? backgroundColor\r\n  });\r\n\r\n  if (props.error) {\r\n    console.log(CommonUtil.toJsonString(props.error));\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <div className={classes.warning}>\r\n        <Typography>{props.message}</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\nimport { ApolloClientWrapper } from '../clients';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { GetTemplate, GetTemplateVariables } from './__generated__/GetTemplate';\r\n\r\nexport const GET_TEMPLATE = gql`\r\n  query GetTemplate($id: ID!) {\r\n    template(id: $id) {\r\n      _id\r\n      chainId\r\n      entityId\r\n      createdDate\r\n      modifiedDate\r\n      owner\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_TEMPLATE_BY_ENTITY_ID = gql`\r\n  query GetTemplateByEntityId($id: ID!) {\r\n    templateByEntityId(id: $id) {\r\n      _id\r\n      chainId\r\n      entityId\r\n      createdDate\r\n      modifiedDate\r\n      owner\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`\r\n\r\nexport const getTemplateByIdAsync = async (apollo: ApolloClientWrapper, id: string) => {\r\n  if (CommonUtil.isNullOrWhitespace(id)) {\r\n    return undefined;\r\n  }\r\n  const entity = await apollo.query<GetTemplate, GetTemplateVariables>({\r\n    query: GET_TEMPLATE,\r\n    variables: {\r\n      id: id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  return entity.data.template;\r\n}","import { gql } from '@apollo/client';\r\n\r\nexport const GET_DOCUMENTS_QUERY = gql`\r\n  query GetDocuments($input: DocumentsFilterRequest!) {\r\n    documents(input: $input) {\r\n      totalCount\r\n      cursor\r\n      hasMore\r\n      documents {\r\n        _id\r\n        chainId\r\n        tokenChainId\r\n        templateId\r\n        createdDate\r\n        modifiedDate\r\n        owner\r\n        holder\r\n        name\r\n        description\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DOCUMENT = gql`\r\n  query GetDocument($id: ID!) {\r\n    document(id: $id) {\r\n      _id\r\n      chainId\r\n      tokenChainId\r\n      templateId\r\n      createdDate\r\n      modifiedDate\r\n      owner\r\n      holder\r\n      name\r\n      description\r\n      imageUrl\r\n    }\r\n  }\r\n`\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Document as Doc } from '../../../../common/types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  document: Doc;\r\n}\r\n\r\nexport const DocumentCard: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.cardMedia}\r\n        image={props.document.imageUrl}\r\n        title={props.document.name}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.document.name}\r\n        </Typography>\r\n        <Typography>\r\n          {props.document.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" component={RouterLink} to={'/documents/' + props.document._id}>\r\n          View\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Button, Grid, IconButton, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_ENTITY } from '../../../../queries';\r\nimport { GetEntity, GetEntityVariables } from '../../../../queries/__generated__/GetEntity';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { SaveEntityDialog } from '../save-dialog';\r\nimport { GET_TEMPLATE_BY_ENTITY_ID } from '../../../../queries/template';\r\nimport { GetDocuments, GetDocumentsVariables } from '../../../../queries/__generated__/GetDocuments';\r\nimport { GET_DOCUMENTS_QUERY } from '../../../../queries/document';\r\nimport { GetTemplateByEntityId, GetTemplateByEntityIdVariables } from '../../../../queries/__generated__/GetTemplateByEntityId';\r\nimport { DocumentCard } from '../../../document/components/card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '400px',\r\n    marginTop: '50px'\r\n  },\r\n}));\r\n\r\nexport const EntityOverview = () => {\r\n  const classes = useStyles();\r\n  const { activeAccount } = useWallet();\r\n  const { id } = useParams<{ id: any }>();\r\n  const [openSaveEntityDialog, setOpenSaveEntityDialog] = React.useState(false);\r\n  const entityQuery = useQuery<GetEntity, GetEntityVariables>(GET_ENTITY, {\r\n    variables: {\r\n      id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  const templateQuery = useQuery<GetTemplateByEntityId, GetTemplateByEntityIdVariables>(GET_TEMPLATE_BY_ENTITY_ID, {\r\n    variables: {\r\n      id: String(entityQuery.data?.entity?._id)\r\n    },\r\n    fetchPolicy: 'network-only',\r\n    skip: entityQuery.loading || !entityQuery.data?.entity?._id\r\n  });\r\n  const documentsQuery = useQuery<GetDocuments, GetDocumentsVariables>(GET_DOCUMENTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        templateId: templateQuery.data?.templateByEntityId?._id\r\n      }\r\n    },\r\n    fetchPolicy: 'network-only',\r\n    skip: templateQuery.loading || !templateQuery.data?.templateByEntityId?._id\r\n  });\r\n\r\n  const error = entityQuery.error || templateQuery.error || documentsQuery.error;\r\n  const loading = entityQuery.loading || templateQuery.loading || documentsQuery.loading;\r\n\r\n  const isOwner = () => {\r\n    return activeAccount?.address === entityQuery.data?.entity?.owner;\r\n  }\r\n\r\n  const hasDocuments = () => {\r\n    return documentsQuery.data?.documents?.documents?.length && documentsQuery.data?.documents?.documents?.length > 0;\r\n  }\r\n\r\n  const refetchAll = async () => {\r\n    await entityQuery.refetch();\r\n    await templateQuery.refetch();\r\n    await documentsQuery.refetch();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Alert message=\"Loading...\" type=\"default\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert message={error.graphQLErrors[0].message} error={error} type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (!entityQuery.data?.entity) {\r\n    return (\r\n      <Alert message=\"Could not find the specified entity.\" type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className=\"px-4\">\r\n        <Grid container spacing={0} className=\"mt-3\">\r\n          <Grid item xs={6}>\r\n            <div className=\"d-flex\">\r\n              <div className=\"text-center\">\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {documentsQuery.data?.documents.totalCount ?? 0}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Diplomas\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div className=\"text-end\">\r\n              <div className=\"text-end\">\r\n                {isOwner() && (\r\n                  <Button size=\"small\" color=\"primary\" onClick={() => setOpenSaveEntityDialog(true)}>\r\n                    Edit\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"text-center border-bottom pb-4\">\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {entityQuery.data.entity.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {entityQuery.data.entity.description}\r\n          </Typography>\r\n        </div>\r\n        <Grid container spacing={0} className=\"mt-3\">\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" className=\"mt-1\">\r\n              Diplomas\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div className=\"text-end\">\r\n              <IconButton aria-label=\"refresh\" onClick={() => refetchAll()}>\r\n                <RefreshIcon fontSize=\"small\" />\r\n              </IconButton>\r\n              {isOwner() && (\r\n                <>\r\n                  <Button size=\"small\" color=\"primary\" className=\"me-3\" component={RouterLink} to={'/entities/' + entityQuery.data.entity._id + '/template'}>\r\n                    Edit template\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\" variant=\"contained\" component={RouterLink} to={'/entities/' + entityQuery.data.entity._id + '/mint'}>\r\n                    Mint diploma\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        {!hasDocuments() ? (\r\n          <div className=\"alert alert-primary mt-5\" role=\"alert\">\r\n            No diplomas found.\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-3 mb-4\">\r\n            <Grid container spacing={4}>\r\n              {documentsQuery?.data?.documents?.documents?.map(doc => (\r\n                <Grid item key={doc._id} xs={12} sm={6} md={4}>\r\n                  <DocumentCard document={doc}></DocumentCard>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <SaveEntityDialog open={openSaveEntityDialog} onClose={() => { setOpenSaveEntityDialog(false) }} entity={entityQuery.data.entity}></SaveEntityDialog>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Entity } from '../../../../common/types';\r\nimport { SaveEntityDialog } from '../save-dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  entity: Entity;\r\n  activeAccount?: string;\r\n}\r\n\r\nexport const EntityCard: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const [openSaveEntityDialog, setOpenSaveEntityDialog] = React.useState(false);\r\n\r\n  const isOwner = () => {\r\n    return props.activeAccount === props.entity.owner;\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      {!!props.entity.imageUrl &&\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={props.entity.imageUrl}\r\n          title={props.entity.name}\r\n        />\r\n      }\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.entity.name}\r\n        </Typography>\r\n        <Typography>\r\n          {props.entity.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" component={RouterLink} to={'/entities/' + props.entity._id}>\r\n          View\r\n        </Button>\r\n        {isOwner() && (\r\n          <Button size=\"small\" color=\"primary\" onClick={() => setOpenSaveEntityDialog(true)}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n      <SaveEntityDialog open={openSaveEntityDialog} onClose={() => { setOpenSaveEntityDialog(false) }} entity={props.entity}></SaveEntityDialog>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Container, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { GET_ENTITIES_QUERY } from '../../../../queries';\r\nimport { GetEntities, GetEntitiesVariables } from '../../../../queries/__generated__/GetEntities';\r\nimport { EntityCard } from '../card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    fontWeight: 500,\r\n    marginBottom: 20,\r\n    textAlign: 'center'\r\n  },\r\n  refreshButton: {\r\n    float: 'right'\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nexport const SelectedEntitiesList = () => {\r\n  const classes = useStyles();\r\n  const { activeAccount } = useWallet();\r\n  const getEntitiesVariables: GetEntitiesVariables = {\r\n    input: {\r\n      selected: true\r\n    }\r\n  };\r\n  const entitiesQuery = useQuery<GetEntities, GetEntitiesVariables>(GET_ENTITIES_QUERY, {\r\n    variables: getEntitiesVariables,\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  const loading = entitiesQuery.loading && !entitiesQuery.data;\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n      <Typography className={classes.title}>\r\n        Featured institutes\r\n        <IconButton className={classes.refreshButton} aria-label=\"refresh\" onClick={() => entitiesQuery.refetch()}>\r\n          <RefreshIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Typography>\r\n      <Typography>\r\n        {loading &&\r\n          <>\r\n            Loading...\r\n          </>\r\n        }\r\n      </Typography>\r\n      <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n        {entitiesQuery.data?.entities?.entities?.map(entity => (\r\n          <Grid item key={entity._id} xs={12} sm={6} md={4}>\r\n            <EntityCard entity={entity} activeAccount={activeAccount?.address}></EntityCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const SAVE_TEMPLATE = gql`\r\n  mutation SaveTemplate($input: SaveTemplateRequest!) {\r\n    saveTemplate(input: $input) {\r\n      success\r\n      message\r\n      template {\r\n        _id\r\n        chainId\r\n        entityId\r\n        createdDate\r\n        modifiedDate\r\n        owner\r\n        description\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;","import { ApolloClient, NormalizedCacheObject } from '@apollo/client';\r\nimport { SaveTemplateRequest } from '../../__generated__/globalTypes';\r\nimport { getApolloClient, getIpfsClient, getTezosClient, IpfsClient, TezosClient } from '../clients';\r\nimport { SAVE_TEMPLATE } from '../mutations/template';\r\nimport { SaveTemplate, SaveTemplateVariables } from '../mutations/__generated__/SaveTemplate';\r\nimport { getEntityByIdAsync } from '../queries';\r\nimport { GET_TEMPLATE_BY_ENTITY_ID } from '../queries/template';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { Ensure } from '../util/ensure';\r\n\r\nclass TemplateService {\r\n\r\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\r\n  private readonly _ipfs: IpfsClient;\r\n  private readonly _tezos: TezosClient;\r\n\r\n  constructor() {\r\n    this._apollo = getApolloClient();\r\n    this._ipfs = getIpfsClient();\r\n    this._tezos = getTezosClient();\r\n  }\r\n\r\n  async saveAsync(request: SaveTemplateRequest, callbackFn: (request: SaveTemplateRequest) => void): Promise<string> {\r\n    Ensure.notNull(request, 'request');\r\n    Ensure.notNullOrWhiteSpace(request.entityId, 'entityId', 'Please provide an entity identifier.');\r\n    Ensure.notNullOrWhiteSpace(request.description, 'description', 'Please provide a description.');\r\n    Ensure.notNullOrWhiteSpace(request.imageUrl, 'imageUrl', 'Please provide an image.');\r\n    console.log(request);\r\n    if (CommonUtil.isNullOrWhitespace(request.chainId)) {\r\n      const entity = await getEntityByIdAsync(this._apollo, request.entityId);\r\n      if (!entity) {\r\n        throw new Error('Entity not found.');\r\n      }\r\n      const tezosId = await this._tezos.createTemplateAsync(entity.chainId);\r\n      Ensure.notNullOrWhiteSpace(tezosId, 'tezosId', 'Template could not be created on chain.');\r\n      request.chainId = String(tezosId);\r\n      callbackFn(request);\r\n    }\r\n    if (request.imageUrl.startsWith('data:')) {\r\n      const blob = await CommonUtil.imageUrlToBlob(request.imageUrl);\r\n      const ipfsResult = await this._ipfs.uploadAsync(blob);\r\n      request = {\r\n        ...request,\r\n        imageUrl: ipfsResult.url\r\n      }\r\n      callbackFn(request);\r\n    }\r\n    const result = await this._apollo.mutate<SaveTemplate, SaveTemplateVariables>({\r\n      mutation: SAVE_TEMPLATE,\r\n      variables: {\r\n        input: request\r\n      },\r\n      refetchQueries: [\r\n        GET_TEMPLATE_BY_ENTITY_ID\r\n      ]\r\n    });\r\n    console.log(result.data?.saveTemplate);\r\n    return result.data?.saveTemplate?.template?._id as string;\r\n  }\r\n}\r\n\r\nconst service = new TemplateService();\r\n\r\nexport const getTemplateService = () => {\r\n  return service;\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\nimport { useEffect } from 'react';\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\nimport { FormatUtil } from '../../../../util/format.util';\r\nimport { SaveTemplateRequest } from '../../../../../__generated__/globalTypes';\r\nimport { getTemplateService } from '../../../../services/template.service';\r\nimport { Ensure } from '../../../../util/ensure';\r\nimport { CommonConstants } from '../../../../common/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  template: SaveTemplateRequest\r\n  getImageDataUrl: () => string\r\n}\r\n\r\nexport const SaveTemplateDialog: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const service = getTemplateService();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const [template, setTemplate] = useState<SaveTemplateRequest>(props.template);\r\n  const isEdit = !!props.template.id;\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n    setTemplate(props.template);\r\n  }, [props.open, props.template]);\r\n\r\n  const handleSaveAsync = async () => {\r\n    try {\r\n      Ensure.maxLength(template.description, 'description', CommonConstants.DESCRIPTION_MAX_LENGTH);\r\n      await service.saveAsync({\r\n        ...template,\r\n        imageUrl: props.getImageDataUrl()\r\n      }, (request: SaveTemplateRequest) => {\r\n        setTemplate(request);\r\n        console.log(request);\r\n      });\r\n      handleClose();\r\n      setTimeout(() => {\r\n        history.push(`/entities/${template.entityId}`);\r\n      }, 100);\r\n    } catch (error) {\r\n      enqueueSnackbar(FormatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth='sm'\r\n      open={open}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>{isEdit ? 'Edit' : 'Create'} template</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Description\"\r\n          multiline\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          rows={4}\r\n          value={template.description}\r\n          variant=\"outlined\"\r\n          onChange={e => setTemplate({\r\n            ...template,\r\n            description: e.target.value\r\n          })}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n        <ClickOnceButton color=\"primary\" callbackFn={handleSaveAsync} autoFocus={true}>\r\n          {isEdit ? 'Save' : 'Create'}\r\n        </ClickOnceButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { Editor } from '../../../common/components/editor';\r\nimport { GetTemplateByEntityId } from '../../../../queries/__generated__/GetTemplateByEntityId';\r\nimport { GET_TEMPLATE_BY_ENTITY_ID } from '../../../../queries/template';\r\nimport { SaveTemplateDialog } from '../save-dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative'\r\n  },\r\n  saveButton: {\r\n    position: 'absolute',\r\n    top: '0',\r\n    right: '0',\r\n    marginTop: '5px',\r\n    minWidth: '130px'\r\n  }\r\n}));\r\n\r\nexport const TemplateEditor = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<{ id: any }>();\r\n  const editorRef = React.createRef<any>();\r\n  const [openSaveDialog, setOpenSaveDialog] = React.useState(false);\r\n  const { data, loading, error } = useQuery<GetTemplateByEntityId>(GET_TEMPLATE_BY_ENTITY_ID, {\r\n    variables: {\r\n      id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  const getImageDataUrl = () => {\r\n    return editorRef.current.getInstance().toDataURL('image/png');\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Alert message=\"Loading...\" type=\"default\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert message={error.graphQLErrors[0].message} error={error} type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"text-center\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Edit template\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.saveButton}>\r\n        <Button variant=\"contained\" size=\"medium\" color=\"primary\" fullWidth={true} onClick={() => setOpenSaveDialog(true)}>Save</Button>\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <Editor editorRef={editorRef} imageUrl={data?.templateByEntityId?.imageUrl}></Editor>\r\n      </div>\r\n      <SaveTemplateDialog\r\n        open={openSaveDialog}\r\n        onClose={() => { setOpenSaveDialog(false) }}\r\n        template={{\r\n          id: data?.templateByEntityId?._id ?? '',\r\n          chainId: data?.templateByEntityId?.chainId ?? '',\r\n          entityId: id,\r\n          description: data?.templateByEntityId?.description ?? '',\r\n          imageUrl: ''\r\n        }}\r\n        getImageDataUrl={getImageDataUrl}>\r\n      </SaveTemplateDialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div<{ paddingBottomSmall?: boolean }>`\r\n  padding-bottom: ${props => (props.paddingBottomSmall ? '10px' : '30px')};\r\n  padding-top: 10px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  text-align: right;\r\n`\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <>\r\n      <Root paddingBottomSmall={true}>\r\n        <Typography>v{process.env.REACT_APP_VERSION}</Typography>\r\n      </Root>\r\n    </>\r\n  )\r\n}\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Button, Icon, Link, Toolbar, Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { BeaconEvent, DAppClient, SigningType } from '@airgap/beacon-sdk';\r\nimport { WalletAccount } from '../../../../common/types';\r\nimport { getApiClient, getApolloClient } from '../../../../clients';\r\nimport { CommonConstants } from '../../../../common/constants';\r\nimport { FormatUtil } from '../../../../util/format.util';\r\n\r\nconst Root = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TitleTypography = styled(Typography)`\r\n  flex-grow: 1;\r\n  margin-left: 10px !important;\r\n`\r\n\r\nexport const Header: React.FC = (props: any) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { client, connected, disconnect, activeAccount, connect } = useWallet();\r\n  const apolloClient = getApolloClient();\r\n  const apiClient = getApiClient();\r\n\r\n  // https://github.com/airgap-it/beacon-sdk/blob/master/src/events.ts\r\n  client?.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (data) => {\r\n    console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, data);\r\n    if (data) {\r\n      const walletAccount: WalletAccount = {\r\n        address: data.address,\r\n        publicKey: data.publicKey\r\n      };\r\n      localStorage.setItem(CommonConstants.WALLET_ACCOUNT_STORAGE_KEY, JSON.stringify(walletAccount));\r\n    }\r\n  });\r\n\r\n  const handleLoginAsync = async () => {\r\n    const result = await connect();\r\n    if (result) {\r\n      console.log(result);\r\n      try {\r\n        const dAppClient = new DAppClient({ name: CommonConstants.APP_NAME });\r\n        const response = await dAppClient.requestSignPayload({\r\n          signingType: SigningType.RAW,\r\n          payload: CommonConstants.SIGN_MESSAGE_PAYLOAD,\r\n        });\r\n        const token = await apiClient.loginAsync(response.signature, result.publicKey);\r\n        localStorage.setItem(CommonConstants.AUTH_TOKEN_STORAGE_KEY, token);\r\n      } catch (error) {\r\n        enqueueSnackbar(FormatUtil.formatSnackbarMessage(error))\r\n        await handleLogoutAsync();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleLogoutAsync = async () => {\r\n    await disconnect();\r\n    localStorage.removeItem(CommonConstants.WALLET_ACCOUNT_STORAGE_KEY);\r\n    localStorage.removeItem(CommonConstants.AUTH_TOKEN_STORAGE_KEY);\r\n    apolloClient.clearStore();\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" />\r\n          <TitleTypography variant=\"h6\">\r\n            <Link color=\"inherit\" component={RouterLink} to=\"/\">\r\n              {CommonConstants.APP_NAME}\r\n            </Link>\r\n          </TitleTypography>\r\n          {activeAccount && (\r\n            <>\r\n              <Icon style={{ color: 'white' }}>person_outline</Icon>\r\n              <Typography variant=\"caption\">\r\n                <Link color=\"inherit\" component={RouterLink} to={'/account/' + activeAccount.address}>\r\n                  {activeAccount.address}\r\n                </Link>\r\n              </Typography>\r\n            </>\r\n          )}\r\n          {connected ? (\r\n            <Button color=\"inherit\" onClick={handleLogoutAsync}>\r\n              Logout\r\n            </Button>\r\n          ) : (\r\n            <Button color=\"inherit\" onClick={handleLoginAsync}>\r\n              Login\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Root>\r\n  )\r\n}","import { Container } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainScrollStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  align-items: center;\r\n  padding-bottom: 15px;\r\n  padding-top: 30px;\r\n  overflow: auto;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst MainScrollInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport const MainScroll: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return (\r\n    <MainScrollStyled {...restProps}>\r\n      <Container maxWidth=\"lg\">\r\n        <MainScrollInner>{children}</MainScrollInner>\r\n      </Container>\r\n    </MainScrollStyled>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainWrapperStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n`\r\n// width: 100vw;\r\n\r\nexport const MainWrapper: React.FC = props => {\r\n  const { children, ...restProps } = props\r\n\r\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const SAVE_DOCUMENT = gql`\r\n  mutation SaveDocument($input: SaveDocumentRequest!) {\r\n    saveDocument(input: $input) {\r\n      success\r\n      message\r\n      document {\r\n        _id\r\n        chainId\r\n        templateId\r\n        createdDate\r\n        modifiedDate\r\n        owner\r\n        holder\r\n        name\r\n        description\r\n        imageUrl\r\n      }\r\n    }\r\n  }\r\n`;","import { ApolloClient, NormalizedCacheObject } from '@apollo/client';\r\nimport { SaveDocumentRequest } from '../../__generated__/globalTypes';\r\nimport { getApolloClient, getIpfsClient, getTezosClient, IpfsClient, TezosClient } from '../clients';\r\nimport { SAVE_DOCUMENT } from '../mutations/document';\r\nimport { SaveDocument, SaveDocumentVariables } from '../mutations/__generated__/SaveDocument';\r\nimport { getEntityByIdAsync } from '../queries';\r\nimport { getTemplateByIdAsync, GET_TEMPLATE_BY_ENTITY_ID } from '../queries/template';\r\nimport { CommonUtil } from '../util/common.util';\r\nimport { Ensure } from '../util/ensure';\r\n\r\nclass DocumentService {\r\n\r\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\r\n  private readonly _ipfs: IpfsClient;\r\n  private readonly _tezos: TezosClient;\r\n\r\n  constructor() {\r\n    this._apollo = getApolloClient();\r\n    this._ipfs = getIpfsClient();\r\n    this._tezos = getTezosClient();\r\n  }\r\n\r\n  async saveAsync(entityId: string, request: SaveDocumentRequest, callbackFn: (request: SaveDocumentRequest) => void): Promise<string> {\r\n    Ensure.notNull(request, 'request');\r\n    Ensure.notNullOrWhiteSpace(request.holder, 'holder', 'Please provide a holder address.');\r\n    Ensure.notNullOrWhiteSpace(request.description, 'description', 'Please provide a description.');\r\n    Ensure.notNullOrWhiteSpace(request.imageUrl, 'imageUrl', 'Please provide an image.');\r\n    console.log(request);\r\n    if (request.imageUrl.startsWith('data:')) {\r\n      const blob = await CommonUtil.imageUrlToBlob(request.imageUrl);\r\n      const ipfsResult = await this._ipfs.uploadAsync(blob);\r\n      request = {\r\n        ...request,\r\n        imageUrl: ipfsResult.url\r\n      }\r\n      callbackFn(request);\r\n    }\r\n    if (CommonUtil.isNullOrWhitespace(request.chainId)) {\r\n      const entity = await getEntityByIdAsync(this._apollo, entityId);\r\n      if (!entity) {\r\n        throw new Error('Entity not found.');\r\n      }\r\n      const template = await getTemplateByIdAsync(this._apollo, request.templateId);\r\n      const tezosId = await this._tezos.createDocument(request.holder, entity.chainId, request.imageUrl, template?.chainId);\r\n      Ensure.notNullOrWhiteSpace(tezosId, 'tezosId', 'Document could not be created on chain.');\r\n      request.chainId = String(tezosId);\r\n      callbackFn(request);\r\n    }\r\n    // TODO: check if template exists for specified entity -> create\r\n    const result = await this._apollo.mutate<SaveDocument, SaveDocumentVariables>({\r\n      mutation: SAVE_DOCUMENT,\r\n      variables: {\r\n        input: request\r\n      },\r\n      refetchQueries: [\r\n        GET_TEMPLATE_BY_ENTITY_ID\r\n      ]\r\n    });\r\n    console.log(result.data?.saveDocument);\r\n    return result.data?.saveDocument?.document?._id as string;\r\n  }\r\n}\r\n\r\nconst service = new DocumentService();\r\n\r\nexport const getDocumentService = () => {\r\n  return service;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\r\nimport { FormatUtil } from '../../../../util/format.util';\r\nimport { SaveDocumentRequest } from '../../../../../__generated__/globalTypes';\r\nimport { getDocumentService } from '../../../../services/document.service';\r\nimport { Ensure } from '../../../../util/ensure';\r\nimport { CommonConstants } from '../../../../common/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  entityId: string\r\n  document: SaveDocumentRequest\r\n  getImageDataUrl: () => string\r\n}\r\n\r\nexport const SaveDocumentDialog: React.FC<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const service = getDocumentService();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { activeAccount } = useWallet();\r\n\r\n  const [document, setDocument] = useState<SaveDocumentRequest>(props.document);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n    setDocument(props.document);\r\n  }, [props.open, props.document]);\r\n\r\n  const handleSaveAsync = async () => {\r\n    try {\r\n      if (!activeAccount?.address) {\r\n        throw new Error('Please connect your wallet.');\r\n      }\r\n      Ensure.maxLength(document.name, 'name', CommonConstants.NAME_MAX_LENGTH);\r\n      Ensure.maxLength(document.description, 'description', CommonConstants.DESCRIPTION_MAX_LENGTH);\r\n      const documentId = await service.saveAsync(props.entityId, {\r\n        ...document,\r\n        imageUrl: props.getImageDataUrl()\r\n      }, (request: SaveDocumentRequest) => {\r\n        setDocument(request);\r\n        console.log(request);\r\n      });\r\n      handleClose();\r\n      setTimeout(() => {\r\n        history.push(`/documents/${documentId}`);\r\n      }, 100);\r\n    } catch (error) {\r\n      enqueueSnackbar(FormatUtil.formatSnackbarMessage(error))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth='sm'\r\n      open={open}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle>Mint diploma</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          value={document.name}\r\n          onChange={e => setDocument({\r\n            ...document,\r\n            name: e.target.value\r\n          })}\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          multiline\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          rows={4}\r\n          value={document.description}\r\n          variant=\"outlined\"\r\n          onChange={e => setDocument({\r\n            ...document,\r\n            description: e.target.value\r\n          })}\r\n        />\r\n        <TextField\r\n          label=\"Holder address\"\r\n          placeholder=\"tz1aFCW65xKy...\"\r\n          fullWidth\r\n          autoComplete='new-password'\r\n          value={document.holder}\r\n          onChange={e => setDocument({\r\n            ...document,\r\n            holder: e.target.value\r\n          })}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n        <ClickOnceButton color=\"primary\" callbackFn={handleSaveAsync} autoFocus={true}>\r\n          Confirm\r\n        </ClickOnceButton>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { Editor } from '../../../common/components/editor';\r\nimport { GetTemplateByEntityId } from '../../../../queries/__generated__/GetTemplateByEntityId';\r\nimport { GET_TEMPLATE_BY_ENTITY_ID } from '../../../../queries/template';\r\nimport { SaveDocumentDialog } from '../save-dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative'\r\n  },\r\n  saveButton: {\r\n    position: 'absolute',\r\n    top: '0',\r\n    right: '0',\r\n    marginTop: '5px',\r\n    minWidth: '130px'\r\n  }\r\n}));\r\n\r\nexport const DocumentEditor = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<{ id: any }>();\r\n  const editorRef = React.createRef<any>();\r\n  const [openSaveDialog, setOpenSaveDialog] = React.useState(false);\r\n  const { data, loading, error } = useQuery<GetTemplateByEntityId>(GET_TEMPLATE_BY_ENTITY_ID, {\r\n    variables: {\r\n      id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  console.log(data);\r\n\r\n  const getImageDataUrl = () => {\r\n    return editorRef.current.getInstance().toDataURL('image/png');\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Alert message=\"Loading...\" type=\"default\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert message={error.graphQLErrors[0].message} error={error} type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"text-center\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Mint diploma\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.saveButton}>\r\n        <Button variant=\"contained\" size=\"medium\" color=\"primary\" fullWidth={true} onClick={() => setOpenSaveDialog(true)}>Mint</Button>\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <Editor editorRef={editorRef} imageUrl={data?.templateByEntityId?.imageUrl}></Editor>\r\n      </div>\r\n      <SaveDocumentDialog\r\n        open={openSaveDialog}\r\n        onClose={() => { setOpenSaveDialog(false) }}\r\n        entityId={id}\r\n        document={{\r\n          chainId: '',\r\n          templateId: data?.templateByEntityId?._id ?? '',\r\n          holder: '',\r\n          name: '',\r\n          description: data?.templateByEntityId?.description ?? '',\r\n          imageUrl: ''\r\n        }}\r\n        getImageDataUrl={getImageDataUrl}>\r\n      </SaveDocumentDialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Grid, IconButton, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { GetDocuments, GetDocumentsVariables } from '../../../../queries/__generated__/GetDocuments';\r\nimport { GET_DOCUMENTS_QUERY } from '../../../../queries/document';\r\nimport { DocumentCard } from '../../../document/components/card';\r\nimport { useWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { GetEntities, GetEntitiesVariables } from '../../../../queries/__generated__/GetEntities';\r\nimport { GET_ENTITIES_QUERY } from '../../../../queries';\r\nimport { EntityCard } from '../../../entity/components/card';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '400px',\r\n    marginTop: '50px'\r\n  }\r\n}));\r\n\r\nexport const AccountOverview = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<{ id: any }>();\r\n  const { activeAccount } = useWallet();\r\n  const documentsQuery = useQuery<GetDocuments, GetDocumentsVariables>(GET_DOCUMENTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        holder: id\r\n      }\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  const entitiesQuery = useQuery<GetEntities, GetEntitiesVariables>(GET_ENTITIES_QUERY, {\r\n    variables: {\r\n      input: {\r\n        owner: id\r\n      }\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  const error = documentsQuery.error || entitiesQuery.error;\r\n  const loading = documentsQuery.loading || entitiesQuery.loading;\r\n\r\n  const hasDocuments = () => {\r\n    return documentsQuery.data?.documents?.documents?.length && documentsQuery.data?.documents?.documents?.length > 0;\r\n  }\r\n\r\n  const hasEntities = () => {\r\n    return entitiesQuery.data?.entities?.entities?.length && entitiesQuery.data?.entities?.entities?.length > 0;\r\n  }\r\n\r\n  const refetchAll = async () => {\r\n    await documentsQuery.refetch();\r\n    await entitiesQuery.refetch();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Alert message=\"Loading...\" type=\"default\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert message={error.graphQLErrors[0].message} error={error} type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className=\"px-4\">\r\n        <Grid container spacing={0} className=\"mt-3\">\r\n          <Grid item xs={6}>\r\n            <div className=\"d-flex\">\r\n              <div className=\"text-center me-3\">\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {documentsQuery.data?.documents.totalCount ?? 0}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Diplomas\r\n                </Typography>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {entitiesQuery.data?.entities.totalCount ?? 0}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Institutes\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div className=\"text-end\">\r\n              <div className=\"text-end\">\r\n                <IconButton aria-label=\"refresh\" onClick={() => refetchAll()}>\r\n                  <RefreshIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"text-center border-bottom pb-4\">\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {activeAccount?.address === id ? 'My' : ''} Diplomas\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {activeAccount?.address}\r\n          </Typography>\r\n        </div>\r\n        {!hasDocuments() ? (\r\n          <div className=\"alert alert-primary mt-5\" role=\"alert\">\r\n            No diplomas found.\r\n          </div>\r\n        ) : (\r\n          <div className=\"my-5\">\r\n            <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n              {documentsQuery?.data?.documents?.documents?.map(doc => (\r\n                <Grid item key={doc._id} xs={12} sm={6} md={4}>\r\n                  <DocumentCard document={doc}></DocumentCard>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        <div className=\"text-center border-bottom pt-4 pb-2\">\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {activeAccount?.address === id ? 'My' : ''} Institutes\r\n          </Typography>\r\n        </div>\r\n        {!hasEntities() ? (\r\n          <div className=\"alert alert-primary mt-5\" role=\"alert\">\r\n            No institutes found.\r\n          </div>\r\n        ) : (\r\n          <div className=\"my-5\">\r\n            <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n              {entitiesQuery?.data?.entities?.entities?.map(e => (\r\n                <Grid item key={e._id} xs={12} sm={6} md={4}>\r\n                  <EntityCard entity={e} activeAccount={activeAccount?.address}></EntityCard>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import moment from 'moment';\r\n\r\nexport class MomentUtil {\r\n  constructor() {\r\n    moment.locale(navigator.language);\r\n  }\r\n\r\n  public setLocale(language: string): void {\r\n    moment.locale(language);\r\n  }\r\n\r\n  public get(): moment.Moment {\r\n    return moment()\r\n  }\r\n\r\n  public getFromUnix(date: number) {\r\n    return moment.unix(date);\r\n  }\r\n\r\n  public getFromMilliseconds(date: number) {\r\n    return moment(date, 'x');\r\n  }\r\n\r\n  public getLocal(date: any): moment.Moment {\r\n    return moment.utc(date).local();\r\n  }\r\n\r\n  public getLocalTime(date: any): string {\r\n    return this.getLocal(date).format('LTS');\r\n  }\r\n\r\n  public getLocalDate(date: any): string {\r\n    return this.getLocal(date).format('L');\r\n  }\r\n\r\n  public getLocalFormatted(date: any): string {\r\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\r\n  }\r\n\r\n  public getLocalReverseFormatted(date: any): string {\r\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\r\n  }\r\n}","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Box, Grid, Link, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_ENTITY } from '../../../../queries';\r\nimport { GetEntity, GetEntityVariables } from '../../../../queries/__generated__/GetEntity';\r\nimport { Alert } from '../../../common/components/alert';\r\nimport { GET_TEMPLATE } from '../../../../queries/template';\r\nimport { GET_DOCUMENT } from '../../../../queries/document';\r\nimport { GetDocument, GetDocumentVariables } from '../../../../queries/__generated__/GetDocument';\r\nimport { GetTemplate, GetTemplateVariables } from '../../../../queries/__generated__/GetTemplate';\r\nimport { MomentUtil } from '../../../../util/moment.util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '400px',\r\n    marginTop: '50px'\r\n  }\r\n}));\r\n\r\nexport const DocumentOverview = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams<{ id: any }>();\r\n  const momentUtil = new MomentUtil();\r\n  const documentQuery = useQuery<GetDocument, GetDocumentVariables>(GET_DOCUMENT, {\r\n    variables: {\r\n      id: id\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n  const templateQuery = useQuery<GetTemplate, GetTemplateVariables>(GET_TEMPLATE, {\r\n    variables: {\r\n      id: String(documentQuery.data?.document?.templateId)\r\n    },\r\n    fetchPolicy: 'network-only',\r\n    skip: documentQuery.loading || !documentQuery.data?.document?.templateId\r\n  });\r\n  const entityQuery = useQuery<GetEntity, GetEntityVariables>(GET_ENTITY, {\r\n    variables: {\r\n      id: String(templateQuery.data?.template?.entityId)\r\n    },\r\n    fetchPolicy: 'network-only',\r\n    skip: templateQuery.loading || !templateQuery.data?.template?.entityId\r\n  });\r\n\r\n  const error = entityQuery.error;\r\n  const loading = entityQuery.loading;\r\n\r\n  const formatTimestamp = (timestamp: any) => {\r\n    return momentUtil.getLocalReverseFormatted(momentUtil.getFromMilliseconds(timestamp));\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Alert message=\"Loading...\" type=\"default\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert message={error.graphQLErrors[0].message} error={error} type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  if (!documentQuery.data?.document) {\r\n    return (\r\n      <Alert message=\"Could not find the specified document.\" type=\"warning\"></Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className=\"px-4\">\r\n        <div className=\"text-center border-bottom mt-3 pb-4\">\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {documentQuery.data.document.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {documentQuery.data.document.description}\r\n          </Typography>\r\n        </div>\r\n        <Grid container spacing={0} justifyContent=\"center\" alignItems=\"center\" className=\"mt-3\">\r\n          <Grid item xs={12} sm={8}>\r\n            <div className=\"text-center mt-4\">\r\n              <figure className=\"figure\">\r\n                <img src={documentQuery.data.document.imageUrl} className=\"figure-img img-fluid\" alt={documentQuery.data.document.name}></img>\r\n                <figcaption className=\"figure-caption text-end\">\r\n                  issued by&nbsp;\r\n                  {entityQuery.data?.entity && (\r\n                    <b>\r\n                      <Link color=\"inherit\" component={RouterLink} to={`/entities/${entityQuery.data?.entity?._id}`}>\r\n                        {entityQuery.data?.entity?.name}\r\n                      </Link>\r\n                    </b>\r\n                  )}\r\n                </figcaption>\r\n              </figure>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <div style={{ whiteSpace: 'nowrap' }}>\r\n              <Box my={2} component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n                <b>Date</b> {formatTimestamp(documentQuery.data.document.createdDate)}\r\n              </Box>\r\n              <Box my={2} component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\">\r\n                <b>Holder</b> <Link color=\"inherit\"\r\n                  component={RouterLink} to={`/account/${documentQuery.data.document.holder}`}>\r\n                  {documentQuery.data.document.holder}\r\n                </Link>\r\n              </Box>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Paper >\r\n  );\r\n}\r\n","import { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { Hero } from '../../../common/components/hero';\r\nimport { Logo } from '../../../common/components/logo';\r\nimport { Test } from '../../../common/components/test';\r\nimport { ItemEditor } from '../../../item/components/editor';\r\nimport { EntityOverview } from '../../../entity/components/overview';\r\nimport { SelectedEntitiesList } from '../../../entity/components/selected-list';\r\nimport { TemplateEditor } from '../../../template/components/editor';\r\nimport { Footer } from '../../../layout/components/footer';\r\nimport { Header } from '../../../layout/components/header';\r\nimport { MainScroll } from '../../../layout/components/main-scroll';\r\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\r\nimport { DocumentEditor } from '../../../document/components/editor';\r\nimport { AccountOverview } from '../../../account/components/overview';\r\nimport { DocumentOverview } from '../../../document/components/overview';\r\n\r\nexport const Main: React.FC = (props: any) => {\r\n  return (\r\n    <>\r\n      <MainWrapper>\r\n        <HashRouter>\r\n          <Header />\r\n          <MainScroll>\r\n            <Switch>\r\n              <Route path=\"/items/:id\">\r\n                <ItemEditor />\r\n              </Route>\r\n              <Route path=\"/entities/:id/template\">\r\n                <TemplateEditor />\r\n              </Route>\r\n              <Route path=\"/entities/:id/mint\">\r\n                <DocumentEditor />\r\n              </Route>\r\n              <Route path=\"/entities/:id\">\r\n                <EntityOverview />\r\n              </Route>\r\n              <Route path=\"/documents/:id\">\r\n                <DocumentOverview />\r\n              </Route>\r\n              <Route path=\"/account/:id\">\r\n                <AccountOverview />\r\n              </Route>\r\n              <Route path=\"/test\">\r\n                <Test />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Logo></Logo>\r\n                <Hero></Hero>\r\n                <SelectedEntitiesList></SelectedEntitiesList>\r\n              </Route>\r\n            </Switch>\r\n          </MainScroll>\r\n          <Footer />\r\n        </HashRouter>\r\n      </MainWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { CommonUtil } from './common.util';\r\n\r\nexport class LogEventModel {\r\n  banner?: string;\r\n  args?: any[];\r\n\r\n  public constructor(init?: Partial<LogEventModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface ILogger {\r\n  // Make sure level is selected e.g. 'Verbose' in Chrome\r\n  readonly debug: any;\r\n  readonly info: any;\r\n  readonly warn: any;\r\n  readonly error: any;\r\n}\r\n\r\nconst noop = (): any => undefined;\r\n\r\nexport class ConsoleLogger implements ILogger {\r\n\r\n  private get isEnabled(): boolean {\r\n    return Boolean(process.env.REACT_APP_IS_DEV);\r\n  }\r\n\r\n  get debug() {\r\n    if (this.isEnabled) {\r\n      return console.debug.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info() {\r\n    if (this.isEnabled) {\r\n      return console.info.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get warn() {\r\n    if (this.isEnabled) {\r\n      return console.warn.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get error() {\r\n    if (this.isEnabled) {\r\n      return console.error.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExtendedConsoleLogger implements ILogger {\r\n\r\n  private get isEnabled(): boolean {\r\n    return Boolean(process.env.REACT_APP_IS_DEV);\r\n  }\r\n\r\n  private timestamp(type: string): string {\r\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\r\n  }\r\n\r\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\r\n    const mapFn = (e: any) => {\r\n      if (CommonUtil.isString(e)) {\r\n        return e;\r\n      } else if (e instanceof Error) {\r\n        return e.message;\r\n      }\r\n      return CommonUtil.toJsonString(e);\r\n    };\r\n    const result = new LogEventModel({\r\n      banner: this.timestamp(type),\r\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\r\n    });\r\n    return result;\r\n  }\r\n\r\n  get debug() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('DEBUG', args);\r\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('INFO', args);\r\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get warn() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        const result = this.createLogEventModel('WARN', args);\r\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get error() {\r\n    if (this.isEnabled) {\r\n      return (...args: any[]) => {\r\n        if (args?.length > 0) {\r\n          if (!CommonUtil.isString(args[0])) {\r\n            args.push('(See console output for more information.)');\r\n          }\r\n        }\r\n        const result = this.createLogEventModel('ERROR', args);\r\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\r\n      };\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n}\r\n\r\nconst logger = new ExtendedConsoleLogger();\r\n\r\nexport const getLogger = (): ILogger => {\r\n  return logger;\r\n}","import React from 'react';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { useBeaconWallet } from '@tz-contrib/react-wallet-provider';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getApolloClient, getTezosClient } from './clients';\r\nimport { Config } from './common/config';\r\nimport { Main } from './features/main/components/main';\r\nimport { getLogger } from './util/logger';\r\n\r\nconst logger = getLogger();\r\n\r\nconst App: React.FC = () => {\r\n  const beaconWallet = useBeaconWallet();\r\n  const config = React.useMemo(() => Config.getInstance(), [])\r\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\r\n  const tezosClient = React.useMemo(() => getTezosClient(), [])\r\n  React.useEffect(() => {\r\n    async function initAsync() {\r\n      await config.initAsync();\r\n      await tezosClient.initContract();\r\n    }\r\n    initAsync()\r\n  }, [config, tezosClient]);\r\n  React.useEffect(() => {\r\n    logger.debug('preferredNetwork:', beaconWallet?.client?.preferredNetwork)();\r\n    tezosClient.setWalletProvider(beaconWallet);\r\n  }, [tezosClient, beaconWallet]);\r\n\r\n  return (\r\n    <SnackbarProvider maxSnack={3}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <Main />\r\n      </ApolloProvider>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@material-ui/core\";\r\n\r\n// https://arth3rs0ng.medium.com/mui-styled-components-and-inspiration-cceab14bec96\r\nexport const theme = createTheme();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './common/theme';\nimport { WalletProvider, WalletProviderProps } from '@tz-contrib/react-wallet-provider';\nimport { CommonConstants } from './common/constants';\n\nconst network = process.env.REACT_APP_NETWORK || \"FLORENCENET\";\nexport const NETWORK: WalletProviderProps[\"network\"] =\n  network.toUpperCase() as WalletProviderProps[\"network\"];\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <WalletProvider\n      name={CommonConstants.APP_NAME}\n      clientType=\"taquito\"\n      network={NETWORK}\n    >\n      <App />\n    </WalletProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}